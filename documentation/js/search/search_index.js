var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.433,1,3.103]],["body/controllers/AppController.html",[0,2.073,1,4.49,2,1.553,3,0.1,4,0.1,5,0.088,6,4.007,7,0.447,8,1.39,9,6.428,10,6.097,11,1.905,12,5.35,13,2.334,14,0.011,15,0.805,16,4.566,17,1.565,18,1.107,19,4.566,20,4.566,21,4.566,22,1.429,23,1.107,24,1.429,25,5.836,26,4.566,27,4.566,28,4.566,29,0.508,30,4.566,31,2.335,32,3.638,33,2.435,34,0.631,35,4.45,36,4.007,37,3.363,38,4.566,39,5.35,40,3.143,41,4.007,42,4.214,43,4.566,44,0.113,45,0.219,46,1.65,47,1.381,48,2.008,49,1.211,50,4.566,51,4.566,52,4.566,53,4.566,54,4.566,55,4.007,56,4.566,57,4.566,58,4.566,59,0.006,60,0.008,61,0.006]],["title/modules/AppModule.html",[62,1.203,63,3.103]],["body/modules/AppModule.html",[1,4,2,1.534,3,0.066,4,0.066,5,0.058,11,0.83,14,0.011,29,0.558,34,0.414,35,4.423,36,2.625,44,0.074,45,0.143,59,0.004,60,0.006,61,0.004,62,1.551,63,6.346,64,1.229,65,1.271,66,1.189,67,1.364,68,1.271,69,2.476,70,1.364,71,2.625,72,2.625,73,2.625,74,4.696,75,4.696,76,4.423,77,4.423,78,4.696,79,4.423,80,4.423,81,4.423,82,4.423,83,4.696,84,4.423,85,4.189,86,4.189,87,2.056,88,1.364,89,1.364,90,2.991,91,2.134,92,1.595,93,0.83,94,2.991,95,2.625,96,2.383,97,2.991,98,2.991,99,2.625,100,2.77,101,3.921,102,2.991,103,2.625,104,4.511,105,2.991,106,2.991,107,2.625,108,2.625,109,2.991,110,2.991,111,2.991,112,2.991,113,2.991,114,2.625,115,2.383,116,2.625,117,2.625,118,4.511,119,5.431,120,5.431,121,2.991,122,5.307,123,4.511,124,2.991,125,2.991,126,2.991,127,2.991,128,2.991,129,2.991,130,2.991,131,2.991,132,1.939,133,2.991,134,1.53,135,2.991,136,2.991,137,2.625]],["title/injectables/AppSeed.html",[138,0.528,139,2.9]],["body/injectables/AppSeed.html",[3,0.065,4,0.065,5,0.057,7,0.291,8,1.023,11,1.501,13,1.01,14,0.011,15,0.526,17,0.677,22,0.696,23,0.539,24,0.696,29,0.526,34,0.411,44,0.073,45,0.142,47,2.294,48,3.337,59,0.004,60,0.006,61,0.004,100,1.823,101,4.411,132,2.909,138,0.563,139,3.088,140,0.848,141,2.606,142,1.508,143,1.481,144,2.366,145,4.58,146,4.58,147,4.58,148,4.58,149,4.58,150,4.58,151,4.58,152,4.58,153,4.58,154,2.969,155,0.336,156,2.969,157,4.486,158,4.486,159,3.937,160,4.486,161,4.486,162,2.969,163,4.801,164,2.366,165,2.606,166,2.606,167,2.606,168,1.621,169,2.606,170,2.606,171,2.606,172,2.606,173,2.606,174,2.606,175,2.596,176,2.969,177,1.64,178,2.969,179,2.969,180,4.486,181,2.969,182,2.969,183,4.486,184,7.445,185,1.584,186,2.969,187,7.445,188,1.459,189,2.969,190,2.044,191,2.969,192,2.044,193,2.969,194,1.584,195,2.969,196,2.044,197,2.969,198,1.823,199,2.969,200,2.044,201,2.969,202,2.044,203,2.969,204,2.606,205,2.969,206,2.969,207,2.969,208,2.969,209,2.969,210,7.273,211,2.969,212,2.969,213,2.969,214,2.969,215,2.969,216,2.969,217,5.407,218,2.969,219,2.969,220,2.969]],["title/injectables/AppService.html",[35,2.731,138,0.528]],["body/injectables/AppService.html",[3,0.132,4,0.132,5,0.116,7,0.586,8,1.652,9,7.106,14,0.011,15,0.702,17,1.366,18,1.316,29,0.399,34,0.829,35,4.7,44,0.148,45,0.287,49,1.057,59,0.007,60,0.009,61,0.007,138,0.909,140,1.711,221,5.258,222,5.992,223,5.992,224,5.992]],["title/modules/AuthModule.html",[62,1.203,74,2.9]],["body/modules/AuthModule.html",[3,0.095,4,0.095,5,0.083,11,1.2,14,0.011,29,0.535,34,0.598,42,5.15,44,0.107,45,0.207,59,0.005,60,0.007,61,0.005,62,1.906,64,1.776,65,1.837,66,1.718,67,1.971,68,1.837,69,3.044,70,3.044,74,5.813,86,4.745,87,2.679,88,1.971,89,1.971,91,3.158,96,3.445,99,5.157,100,2.655,101,4.644,134,2.211,137,3.794,225,3.794,226,3.794,227,4.324,228,3.794,229,5.32,230,5.32,231,4.324,232,3.794,233,4.324,234,4.324,235,5.877,236,2.803,237,4.324,238,3.445,239,4.324,240,4.324,241,3.794,242,4.324,243,4.324,244,4.324]],["title/injectables/AuthService.html",[42,2.587,138,0.528]],["body/injectables/AuthService.html",[3,0.094,4,0.094,5,0.083,7,0.42,8,1.333,11,2.14,12,5.129,14,0.011,15,0.779,17,1.333,22,1.559,23,1.207,24,1.559,29,0.475,34,0.593,42,3.589,44,0.106,45,0.205,48,2.571,49,1.173,59,0.008,60,0.007,61,0.005,138,0.733,140,1.225,143,1.929,155,0.753,175,2.069,177,1.603,238,3.418,245,3.764,246,5.846,247,3.764,248,4.502,249,7.89,250,4.29,251,5.846,252,4.29,253,3.352,254,5.846,255,5.503,256,4.29,257,2.765,258,3.764,259,4.29,260,3.159,261,4.29,262,4.29,263,2.505,264,4.29,265,4.29,266,4.29,267,4.29,268,1.599,269,4.29]],["title/classes/CaslAbilityFactory.html",[45,0.202,270,3.357]],["body/classes/CaslAbilityFactory.html",[3,0.145,4,0.145,5,0.127,14,0.01,44,0.162,45,0.315,59,0.008,60,0.009,61,0.008,270,6.101,271,1.585,272,5.767,273,5.767]],["title/modules/CaslModule.html",[62,1.203,75,2.9]],["body/modules/CaslModule.html",[3,0.142,4,0.142,5,0.124,14,0.01,29,0.429,34,0.891,44,0.159,45,0.308,59,0.008,60,0.009,61,0.008,62,2.161,64,2.646,75,5.21,274,6.442]],["title/controllers/CategoriesController.html",[0,1.433,275,3.103]],["body/controllers/CategoriesController.html",[0,1.721,2,1.721,3,0.111,4,0.111,5,0.098,7,0.495,8,1.487,11,2.003,13,2.218,14,0.011,15,0.765,17,1.487,22,1.187,23,0.919,24,1.187,29,0.48,31,3.692,33,2.7,34,0.7,44,0.125,45,0.242,46,1.829,47,1.531,49,1.151,59,0.006,60,0.008,61,0.006,142,1.446,155,0.573,175,1.575,185,2.7,275,4.805,276,4.442,277,2.7,278,3.03,279,4.442,280,5.561,281,5.062,282,5.062,283,4.432,284,4.442,285,2.012,286,4.442,287,5.062,288,2.821,289,5.062,290,5.062]],["title/modules/CategoriesModule.html",[62,1.203,76,2.731]],["body/modules/CategoriesModule.html",[2,2.109,3,0.103,4,0.103,5,0.09,14,0.011,23,0.85,29,0.512,34,0.648,44,0.116,45,0.224,49,0.826,59,0.006,60,0.008,61,0.006,62,1.985,64,1.924,65,1.99,66,1.862,67,2.135,68,1.99,69,3.169,70,3.169,76,5.23,87,2.827,88,2.135,89,2.135,91,2.216,92,2.498,93,1.3,134,2.396,275,5.12,283,5.215,284,4.11,291,4.11,292,4.11,293,4.11,294,4.684,295,4.684,296,2.396,297,4.567,298,4.11,299,2.61,300,4.684,301,4.684,302,2.396,303,2.216,304,2.396,305,2.396,306,2.396,307,2.396,308,3.172,309,2.312,310,2.396]],["title/injectables/CategoriesSeed.html",[138,0.528,145,2.731]],["body/injectables/CategoriesSeed.html",[3,0.063,4,0.063,5,0.055,7,0.28,8,0.994,11,1.467,14,0.011,15,0.511,17,0.652,22,0.67,23,0.519,24,0.67,29,0.29,34,0.395,44,0.108,45,0.137,46,1.034,47,0.865,49,0.769,59,0.004,60,0.005,61,0.004,66,3.247,138,0.547,140,0.817,142,1.31,143,0.944,145,2.827,155,0.324,175,0.89,177,1.051,185,2.325,283,4.117,311,2.279,312,2.86,313,2.86,314,2.86,315,2.86,316,6.018,317,2.51,318,2.51,319,3.826,320,2.51,321,5.534,322,2.51,323,6.018,324,3.826,325,5.624,326,1.969,327,6.018,328,2.51,329,2.51,330,2.51,331,3.826,332,2.106,333,2.51,334,2.51,335,3.826,336,3.826,337,2.279,338,2.51,339,2.51,340,2.51,341,2.51,342,2.51,343,2.51,344,2.51,345,2.51,346,2.51,347,2.51,348,5.187,349,2.279,350,2.51,351,2.51,352,2.51,353,2.51,354,2.51,355,2.51,356,2.51,357,2.51,358,2.51,359,2.51,360,2.51,361,2.51,362,2.51,363,2.51,364,2.51,365,2.51,366,2.51,367,2.51,368,2.51,369,2.51,370,2.51,371,2.51,372,3.826,373,2.51,374,2.51,375,3.826,376,2.279,377,2.51,378,4.637,379,2.51,380,2.51,381,2.51,382,2.51,383,2.279,384,2.51,385,2.51,386,2.51,387,3.826,388,2.51,389,2.51,390,2.51,391,2.51,392,2.51,393,2.51,394,2.51,395,2.51,396,2.51,397,2.279,398,3.826,399,2.51,400,3.826,401,2.51,402,2.51,403,2.51,404,2.51,405,2.51,406,3.826,407,2.51,408,2.51,409,2.51,410,2.51,411,2.51,412,1.594,413,1.594,414,2.86,415,2.86,416,1.594,417,1.594,418,1.594,419,1.67,420,1.463,421,1.594,422,1.463,423,1.594]],["title/injectables/CategoriesService.html",[138,0.528,283,2.587]],["body/injectables/CategoriesService.html",[3,0.096,4,0.096,5,0.084,7,0.427,8,1.347,11,2.267,14,0.011,15,0.843,17,1.528,18,1.217,22,1.572,23,1.217,24,1.572,29,0.5,34,0.603,44,0.108,45,0.209,48,1.917,49,1.182,59,0.005,60,0.007,61,0.005,93,1.21,138,0.741,140,1.244,142,1.31,143,1.439,155,0.759,168,1.575,175,1.839,177,1.051,257,3.664,268,2.203,278,2.857,279,5.185,280,5.172,283,3.628,285,1.732,286,3.825,296,2.229,298,3.825,424,3.825,425,2.427,426,4.359,427,4.006,428,4.359,429,5.909,430,4.359,431,4.359,432,2.427,433,4.359,434,2.429,435,3.473,436,4.359,437,4.359,438,1.677,439,4.359,440,4.359,441,4.359,442,4.359,443,2.429,444,2.429]],["title/classes/Category.html",[45,0.202,296,2.155]],["body/classes/Category.html",[3,0.1,4,0.1,5,0.088,7,0.446,13,2.593,14,0.011,15,0.894,18,1.478,29,0.405,44,0.169,45,0.218,59,0.006,60,0.008,61,0.006,66,2.724,93,1.264,155,0.888,168,1.645,177,1.098,271,1.098,296,3.506,297,3.354,302,2.329,303,2.154,304,2.329,305,2.329,306,2.329,307,2.329,308,3.113,309,2.269,310,2.329,316,5.048,323,5.048,325,4.718,327,5.048,435,3.628,445,3.354,446,2.009,447,4.68,448,4.553,449,4.553,450,4.553,451,4.553,452,2.5,453,4.553,454,3.391,455,2.537,456,3.391,457,3.995,458,3.995]],["title/classes/CreateCategoryDto.html",[45,0.202,280,2.9]],["body/classes/CreateCategoryDto.html",[3,0.119,4,0.119,5,0.104,7,0.528,14,0.011,15,0.943,18,1.532,44,0.133,45,0.258,59,0.007,60,0.008,61,0.007,66,2.956,155,0.911,271,1.301,280,4.678,316,5.478,323,5.478,325,5.12,327,5.478,446,2.243,452,2.791,459,7.208,460,4.736,461,5.397,462,5.397,463,5.397,464,5.397,465,5.397]],["title/classes/CreateEventDto.html",[45,0.202,466,2.731]],["body/classes/CreateEventDto.html",[3,0.087,4,0.087,5,0.076,7,0.387,14,0.011,15,0.993,18,1.579,44,0.098,45,0.189,59,0.005,60,0.007,61,0.005,155,0.959,271,0.954,446,1.825,452,3.286,466,3.584,467,7.469,468,3.153,469,3.014,470,3.551,471,3.433,472,3.398,473,3.912,474,3.912,475,3.912,476,3.912,477,3.551,478,4.693,479,3.398,480,3.721,481,2.233,482,3.912,483,3.912,484,3.957,485,3.957,486,3.957,487,3.957,488,3.957,489,3.957,490,3.957,491,3.957,492,3.957,493,3.957,494,3.957,495,3.957,496,3.957,497,3.957,498,3.957,499,3.957]],["title/classes/CreateFileDto.html",[45,0.202,500,3.103]],["body/classes/CreateFileDto.html",[3,0.145,4,0.145,5,0.127,14,0.01,44,0.162,45,0.315,59,0.008,60,0.009,61,0.008,271,1.585,500,5.64,501,5.767,502,5.237]],["title/classes/CreateLikeDto.html",[45,0.202,503,2.731]],["body/classes/CreateLikeDto.html",[3,0.127,4,0.127,5,0.112,7,0.566,14,0.01,15,0.899,18,1.517,44,0.143,45,0.277,59,0.007,60,0.009,61,0.007,155,0.869,271,1.394,446,2.34,481,2.689,503,4.597,504,7.019,505,4.605,506,4.71,507,3.151,508,5.78,509,5.78,510,5.78]],["title/classes/CreatePinDto.html",[45,0.202,511,2.731]],["body/classes/CreatePinDto.html",[3,0.083,4,0.083,5,0.073,7,0.369,14,0.011,15,0.996,18,1.579,44,0.093,45,0.181,59,0.005,60,0.007,61,0.005,155,0.962,271,0.91,446,1.765,452,3.394,469,2.938,470,3.461,472,3.312,473,3.813,474,3.813,475,3.813,476,3.813,477,3.461,479,3.312,480,3.627,481,2.177,482,3.813,483,3.813,511,3.467,512,6.797,513,3.007,514,3.312,515,4.275,516,4.275,517,4.574,518,3.774,519,3.774,520,3.774,521,3.774,522,3.774,523,3.774,524,3.774,525,3.774,526,3.774,527,3.774,528,3.774,529,3.774,530,3.774,531,3.774,532,3.774,533,3.774,534,3.774,535,3.774]],["title/classes/CreateRejoinderDto.html",[45,0.202,536,2.731]],["body/classes/CreateRejoinderDto.html",[3,0.119,4,0.119,5,0.104,7,0.528,14,0.011,15,0.943,18,1.532,44,0.133,45,0.258,59,0.007,60,0.008,61,0.007,155,0.911,271,1.301,446,2.243,471,3.214,481,2.607,506,4.567,507,3.055,536,4.406,537,7.208,538,4.301,539,3.967,540,3.967,541,5.397,542,5.397,543,5.397,544,5.397,545,5.397]],["title/classes/CreateReplyDto.html",[45,0.202,546,2.731]],["body/classes/CreateReplyDto.html",[3,0.119,4,0.119,5,0.104,7,0.528,14,0.011,15,0.943,18,1.492,44,0.133,45,0.258,59,0.007,60,0.008,61,0.007,155,0.911,271,1.301,446,2.243,452,2.791,471,3.214,481,2.607,507,3.055,539,3.967,540,3.967,546,4.406,547,7.208,548,4.301,549,5.478,550,5.397,551,5.397,552,5.397,553,5.397,554,5.397]],["title/classes/CreateSupportDto.html",[45,0.202,555,2.731]],["body/classes/CreateSupportDto.html",[3,0.127,4,0.127,5,0.112,7,0.566,14,0.01,15,0.899,18,1.452,44,0.143,45,0.277,59,0.007,60,0.009,61,0.007,155,0.869,271,1.394,446,2.34,481,2.689,507,3.151,555,4.597,556,7.019,557,4.605,558,4.973,559,5.223,560,5.78,561,5.78,562,5.78]],["title/classes/CreateTopicDto.html",[45,0.202,563,2.731]],["body/classes/CreateTopicDto.html",[3,0.102,4,0.102,5,0.089,7,0.453,14,0.011,15,0.979,18,1.517,44,0.114,45,0.222,59,0.006,60,0.008,61,0.006,155,0.946,271,1.116,446,2.031,452,3.356,469,3.27,471,2.911,479,3.686,481,2.423,539,3.686,540,3.686,563,3.99,564,7.39,565,3.69,566,5.091,567,4.758,568,5.091,569,4.758,570,5.091,571,4.631,572,4.631,573,4.631,574,4.631,575,4.631,576,4.631,577,4.631,578,4.631,579,4.631,580,4.631]],["title/classes/CreateUserDto.html",[45,0.202,581,2.731]],["body/classes/CreateUserDto.html",[3,0.105,4,0.105,5,0.092,7,0.466,14,0.011,15,0.975,18,1.584,44,0.118,45,0.228,59,0.006,60,0.008,61,0.006,155,0.942,263,4.095,271,1.149,446,2.07,469,3.317,514,3.739,581,4.067,582,7.367,583,3.51,584,5.164,585,5.164,586,5.164,587,5.164,588,5.164,589,5.164,590,4.766,591,4.766,592,4.766,593,4.766,594,4.766,595,4.182,596,4.766,597,4.182,598,4.766]],["title/classes/CreatelocationDto.html",[45,0.202,599,2.9]],["body/classes/CreatelocationDto.html",[3,0.115,4,0.115,5,0.101,7,0.511,14,0.011,15,0.955,18,1.522,44,0.129,45,0.25,59,0.006,60,0.008,61,0.006,155,0.922,271,1.26,446,2.197,452,3.4,470,4.083,477,4.083,512,6.596,599,4.583,600,4.584,601,6.429,602,6.429,603,6.429,604,5.224,605,5.224,606,5.224,607,5.224,608,5.224,609,5.224]],["title/classes/Event.html",[45,0.202,610,2.587]],["body/classes/Event.html",[3,0.07,4,0.07,5,0.061,7,0.31,13,2.788,14,0.011,15,0.961,18,1.543,29,0.374,44,0.139,45,0.152,59,0.004,60,0.006,61,0.004,93,0.878,155,0.952,168,2.03,177,0.763,253,2,271,0.763,296,2.407,446,1.553,447,4.807,452,3.111,454,2.623,455,1.764,456,2.623,469,2.657,470,3.131,471,3.145,472,2.996,473,3.45,474,3.45,475,3.45,476,3.45,477,3.131,478,4.138,479,2.996,480,3.281,481,1.969,482,3.45,483,3.45,610,3.45,611,2.331,612,3.281,613,3.281,614,3.883,615,3.165,616,3.165,617,3.165,618,3.165,619,3.165,620,3.165,621,3.165,622,3.165,623,3.165,624,3.165,625,3.165,626,3.165,627,3.165,628,3.165,629,3.165,630,3.165,631,2.522,632,2.778,633,3.281,634,2.522,635,2.331,636,2.778]],["title/controllers/EventsController.html",[0,1.433,637,3.103]],["body/controllers/EventsController.html",[0,1.345,2,1.345,3,0.087,4,0.087,5,0.076,7,0.387,8,1.26,13,2.468,14,0.011,15,0.851,17,1.655,18,1.453,22,1.617,23,1.253,24,1.617,29,0.459,31,3.259,33,2.948,34,0.547,44,0.098,45,0.189,46,1.43,47,1.196,49,1.28,59,0.005,60,0.007,61,0.005,142,1.225,155,0.781,192,2.724,268,2.804,277,2.11,278,2.742,285,1.572,288,2.205,309,1.475,425,2.271,432,1.625,466,4.875,637,4.072,638,3.472,639,2.349,640,2.271,641,3.472,642,3.957,643,3.957,644,1.681,645,3.081,646,3.957,647,3.228,648,3.957,649,1.681,650,5.421,651,3.228,652,3.957,653,2.311,654,2.11,655,3.912,656,3.472,657,4.405,658,1.681,659,3.957,660,3.957,661,3.957,662,2.311,663,3.957,664,2.311,665,3.957,666,2.311,667,3.957]],["title/modules/EventsModule.html",[62,1.203,77,2.731]],["body/modules/EventsModule.html",[2,2.105,3,0.103,4,0.103,5,0.09,14,0.011,23,0.848,29,0.512,34,0.646,44,0.115,45,0.224,49,0.824,59,0.006,60,0.008,61,0.006,62,1.982,64,1.918,65,1.984,66,1.856,67,2.129,68,1.984,69,3.165,70,3.165,77,5.227,87,2.822,88,2.129,89,2.129,91,2.209,92,2.491,93,1.296,134,2.389,299,2.603,302,2.389,303,2.209,304,2.389,305,2.389,306,2.389,307,2.389,308,3.166,309,2.307,310,2.389,610,2.868,635,4.559,637,5.113,655,5.213,656,4.098,668,4.098,669,4.098,670,4.098,671,4.671,672,4.671,673,4.098,674,4.671,675,4.671]],["title/injectables/EventsSeed.html",[138,0.528,148,2.731]],["body/injectables/EventsSeed.html",[3,0.083,4,0.083,5,0.073,7,0.522,8,1.217,11,1.721,14,0.011,15,0.626,17,0.858,22,1.251,23,0.969,24,1.251,29,0.355,34,0.521,44,0.132,45,0.18,46,1.361,47,1.138,49,1.19,59,0.005,60,0.007,61,0.005,138,0.67,140,1.075,142,1.183,143,1.243,148,3.461,155,0.426,175,1.172,177,1.495,185,2.847,188,3.502,192,4.27,326,5.239,332,5.605,412,2.098,413,2.098,416,2.098,417,2.098,418,2.098,419,2.198,420,1.926,421,2.098,422,1.926,423,2.098,438,2.054,452,2.193,469,1.781,470,2.975,471,3.192,472,2.847,473,3.278,474,2.312,475,3.278,476,3.278,477,2.975,478,3.932,479,2.847,480,3.117,481,1.319,482,3.278,483,3.278,610,3.808,655,4.544,676,3,677,3.765,678,3.765,679,3.675,680,3.765,681,3.765,682,4.684,683,4.684,684,4.684,685,3.304,686,4.684,687,4.684,688,4.684,689,4.684,690,4.684,691,3.304,692,3.304,693,2.592,694,2.592,695,2.198,696,2.198,697,2.773,698,3.765,699,3.765,700,3.765]],["title/injectables/EventsService.html",[138,0.528,655,2.587]],["body/injectables/EventsService.html",[3,0.081,4,0.081,5,0.071,7,0.359,8,1.195,11,2.182,14,0.011,15,0.86,17,1.609,18,1.428,22,1.655,23,1.281,24,1.655,29,0.488,34,0.508,44,0.091,45,0.176,47,1.11,48,1.615,49,1.245,59,0.005,60,0.007,61,0.005,93,1.019,138,0.658,140,1.048,142,1.162,143,1.731,155,0.799,168,1.327,175,1.904,177,0.885,257,3.654,268,2.736,278,2.652,285,1.459,425,2.154,427,3.719,432,2.154,434,2.046,438,1.413,443,3.409,444,2.046,466,4.575,610,2.254,631,2.925,639,2.228,640,2.154,641,4.602,644,2.228,649,2.228,650,5.201,655,3.22,657,4.178,658,1.56,673,3.222,701,3.222,702,3.672,703,3.672,704,5.244,705,3.672,706,3.672,707,3.672,708,3.672,709,3.672,710,3.672,711,3.672,712,3.672,713,3.672,714,3.672,715,3.672,716,3.672,717,3.672,718,3.672]],["title/classes/File.html",[5,0.081,45,0.202]],["body/classes/File.html",[3,0.145,4,0.145,5,0.157,14,0.01,44,0.163,45,0.316,59,0.008,60,0.01,61,0.008,271,1.591,719,5.79]],["title/classes/FileInfoVm.html",[45,0.202,720,2.9]],["body/classes/FileInfoVm.html",[3,0.178,4,0.104,5,0.091,7,0.464,13,2.627,14,0.011,15,0.906,18,1.441,29,0.416,44,0.117,45,0.299,59,0.006,60,0.008,61,0.006,155,0.875,271,1.142,446,2.062,452,3.053,720,4.302,721,6.322,722,3.776,723,6.135,724,6.135,725,5.149,726,6.135,727,6.135,728,7.726,729,4.739,730,4.739,731,4.739,732,4.158,733,4.739,734,6.963,735,2.424,736,7.935,737,4.158]],["title/classes/FileResponseVm.html",[45,0.202,738,3.103]],["body/classes/FileResponseVm.html",[3,0.15,4,0.12,5,0.156,7,0.534,13,2.325,14,0.011,15,0.802,18,1.242,29,0.455,44,0.135,45,0.261,59,0.007,60,0.008,61,0.007,155,0.846,271,1.314,420,3.822,446,2.257,720,5.556,721,5.954,722,4.344,732,4.784,734,6.875,735,2.788,738,5.037,739,5.954,740,5.452,741,5.452,742,4.344]],["title/controllers/FilesController.html",[0,1.433,743,3.103]],["body/controllers/FilesController.html",[0,0.791,2,0.791,3,0.082,4,0.051,5,0.15,7,0.228,8,0.846,11,2.044,13,2.196,14,0.011,15,0.757,17,1.472,18,1.358,22,1.514,23,1.172,24,1.514,29,0.43,31,1.898,32,1.853,34,0.322,44,0.057,45,0.178,46,0.84,49,1.139,59,0.003,60,0.005,61,0.003,155,0.819,175,2.087,177,1.666,257,2.499,268,2.5,277,1.24,337,3.689,420,1.189,422,2.953,438,2.033,472,2.469,645,1.296,654,1.24,725,1.713,735,1.189,738,3.41,739,3.689,742,1.853,743,2.733,744,1.853,745,2.326,746,3.256,747,3.711,748,3.711,749,3.711,750,3.689,751,3.711,752,3.711,753,2.041,754,2.326,755,2.326,756,2.326,757,2.326,758,6.912,759,2.326,760,5.342,761,2.326,762,2.326,763,2.326,764,2.326,765,2.326,766,2.326,767,2.326,768,2.326,769,2.326,770,4.629,771,6.457,772,2.326,773,2.326,774,5.666,775,2.326,776,2.326,777,2.326,778,2.326,779,2.326,780,2.326,781,2.326,782,2.326,783,2.326,784,2.326,785,1.853,786,2.733,787,3.711,788,2.326,789,5.284,790,5.773,791,2.326,792,2.326,793,1.713,794,1.713,795,3.001,796,2.041,797,1.713,798,1.601,799,2.326,800,1.853,801,2.041,802,2.041,803,2.326,804,2.326,805,4.629,806,4.062,807,4.629,808,2.326,809,2.326,810,4.629,811,4.629,812,2.326,813,2.041,814,2.326,815,2.326,816,2.326,817,2.041,818,2.326,819,2.326,820,2.326,821,2.326,822,5.284,823,6.705,824,4.629,825,4.21,826,5.284,827,5.284,828,4.629,829,5.284,830,2.326,831,2.326,832,4.629,833,3.711,834,3.711,835,2.326,836,2.326,837,2.326,838,2.326,839,2.326,840,2.326,841,2.326,842,2.326,843,2.326,844,2.326]],["title/modules/FilesModule.html",[62,1.203,78,2.9]],["body/modules/FilesModule.html",[2,2.223,3,0.112,4,0.112,5,0.098,14,0.011,29,0.526,34,0.702,44,0.126,45,0.243,59,0.006,60,0.008,61,0.006,62,2.064,64,2.086,65,2.157,66,2.018,67,2.315,68,2.157,69,3.296,70,2.315,78,5.736,87,2.98,88,2.315,89,2.315,91,2.402,743,5.324,793,3.74,794,3.74,795,5.242,796,4.456,798,3.496,845,4.456,846,4.456,847,5.662,848,5.078,849,5.078,850,5.078,851,5.078,852,5.078,853,5.078]],["title/injectables/FilesService.html",[138,0.528,795,2.731]],["body/injectables/FilesService.html",[3,0.118,4,0.083,5,0.103,7,0.37,8,1.221,11,2.197,14,0.011,15,0.837,17,1.417,18,1.438,22,1.585,23,1.228,24,1.585,29,0.493,34,0.523,44,0.094,45,0.181,47,1.144,48,2.975,49,1.097,59,0.008,60,0.007,61,0.005,93,1.05,138,0.672,140,1.08,143,1.248,155,0.808,168,1.367,175,1.935,177,0.912,257,3.506,268,2.318,438,2.061,446,1.768,720,2.604,723,3.319,724,3.319,725,2.786,726,3.319,727,3.319,742,3.014,746,4.7,753,4.7,785,3.014,786,2.786,795,3.472,825,3.014,854,3.319,855,6.218,856,5.356,857,5.356,858,3.782,859,7.412,860,5.356,861,3.782,862,5.356,863,3.782,864,5.356,865,3.782,866,6.218,867,3.782,868,3.319,869,3.014,870,3.782,871,3.782,872,3.782,873,5.356,874,3.782,875,3.782,876,3.782,877,3.782,878,3.319,879,3.782,880,3.782,881,3.782,882,3.782,883,3.782,884,3.782,885,3.782,886,3.782,887,3.782,888,3.782]],["title/injectables/GridFsMulterConfigService.html",[138,0.528,847,2.9]],["body/injectables/GridFsMulterConfigService.html",[3,0.1,4,0.1,5,0.132,7,0.443,8,1.382,14,0.011,15,0.801,17,1.032,22,1.062,23,0.822,24,1.062,25,3.608,29,0.486,34,0.626,44,0.112,45,0.217,48,1.992,49,1.069,59,0.006,60,0.008,61,0.006,100,2.78,101,5.078,138,0.76,140,1.293,143,2.001,144,3.608,155,0.686,177,1.462,438,2.333,446,2.001,725,5.034,793,3.335,794,3.335,798,3.117,847,4.174,869,3.608,889,5.817,890,3.973,891,8,892,7.3,893,6.063,894,4.528,895,6.835,896,6.063,897,4.831,898,4.528,899,6.063,900,3.973,901,4.528,902,4.528,903,3.973,904,4.528,905,4.528,906,4.528]],["title/injectables/JwtAuthGuard.html",[40,2.9,138,0.528]],["body/injectables/JwtAuthGuard.html",[3,0.137,4,0.137,5,0.121,14,0.011,29,0.494,34,0.864,40,5.115,44,0.154,45,0.299,59,0.008,60,0.009,61,0.008,138,0.932,140,1.783,236,4.049,907,5.48,908,4.976,909,5.48,910,2.954,911,6.245]],["title/injectables/JwtStrategy.html",[138,0.528,229,2.9]],["body/injectables/JwtStrategy.html",[3,0.11,4,0.11,5,0.097,7,0.491,8,1.478,11,1.994,14,0.011,15,0.76,17,1.143,22,1.52,23,1.177,24,1.52,29,0.506,34,0.694,44,0.124,45,0.24,48,2.206,49,0.885,59,0.006,60,0.008,61,0.006,100,3.079,101,5.225,138,0.813,140,1.432,143,2.14,144,3.996,155,0.734,229,4.464,236,3.252,241,4.401,910,2.372,912,4.401,913,5.69,914,5.016,915,6.485,916,5.016,917,5.016,918,5.016,919,4.401,920,3.996,921,4.401,922,4.401,923,4.401,924,4.401,925,5.016,926,5.016,927,5.016,928,3.453,929,5.016,930,5.016]],["title/classes/Like.html",[45,0.253]],["body/classes/Like.html",[3,0.105,4,0.105,5,0.093,7,0.469,13,2.391,14,0.011,15,0.824,18,1.445,29,0.468,44,0.174,45,0.229,59,0.006,60,0.008,61,0.006,93,1.33,155,0.919,168,2.541,177,1.156,253,2.675,271,1.156,446,2.078,447,4.161,454,3.509,455,2.672,456,3.509,481,2.464,506,4.317,507,2.888,612,4.106,613,4.106,614,4.649,633,4.106,931,3.531,932,3.866,933,4.794,934,3.221,935,4.794,936,4.794,937,3.82,938,3.531,939,4.207]],["title/controllers/LikesController.html",[0,1.433,940,3.103]],["body/controllers/LikesController.html",[0,1.266,2,1.266,3,0.082,4,0.082,5,0.072,7,0.364,8,1.207,13,2.507,14,0.011,15,0.864,17,1.681,18,1.484,22,1.663,23,1.288,24,1.663,29,0.447,31,3.152,33,2.824,34,0.515,44,0.092,45,0.178,46,1.345,47,1.125,49,1.3,59,0.005,60,0.007,61,0.005,142,1.174,155,0.803,200,2.562,268,2.89,277,1.985,278,2.668,285,1.479,288,2.074,309,1.388,425,2.175,432,1.529,503,4.78,639,2.25,640,2.175,644,1.581,645,2.951,647,3.092,649,1.581,651,3.092,653,2.173,654,1.985,658,1.581,662,2.173,664,2.173,666,2.173,940,3.9,941,3.266,942,3.251,943,3.266,944,3.722,945,3.722,946,2.285,947,4.219,948,3.722,949,3.722,950,3.722,951,5.337,952,3.722,953,3.784,954,3.266,955,4.219,956,3.722,957,3.722,958,3.722,959,3.722,960,2.741,961,3.722,962,3.722,963,3.722]],["title/modules/LikesModule.html",[62,1.203,79,2.731]],["body/modules/LikesModule.html",[2,2.113,3,0.103,4,0.103,5,0.091,14,0.011,23,0.853,29,0.513,34,0.65,44,0.116,45,0.225,49,0.828,59,0.006,60,0.008,61,0.006,62,1.988,64,1.93,65,1.996,66,1.867,67,2.141,68,1.996,69,3.174,70,3.174,79,5.234,87,2.832,88,2.141,89,2.141,91,2.222,92,2.505,93,1.304,134,2.403,299,2.618,302,2.403,303,2.222,304,2.403,305,2.403,306,2.403,307,2.403,308,3.178,309,2.316,310,2.403,938,4.576,940,5.127,953,5.217,954,4.122,964,4.122,965,4.122,966,4.122,967,4.698,968,4.698,969,4.122,970,4.698,971,4.698]],["title/injectables/LikesSeed.html",[138,0.528,152,2.731]],["body/injectables/LikesSeed.html",[3,0.095,4,0.095,5,0.083,7,0.574,8,1.337,11,1.85,14,0.011,15,0.688,17,0.983,22,1.375,23,1.065,24,1.375,29,0.39,34,0.596,44,0.145,45,0.206,46,1.558,47,1.304,49,1.262,59,0.005,60,0.007,61,0.005,138,0.736,140,1.231,142,1.3,143,1.423,152,3.803,155,0.488,175,1.342,177,1.608,188,3.679,194,3.129,198,4.394,200,4.59,412,2.403,413,2.403,416,2.403,417,2.403,418,2.403,419,2.518,420,2.206,421,2.403,422,2.206,423,2.403,481,1.511,506,2.648,507,1.771,695,2.518,696,2.518,953,4.741,972,3.436,973,4.312,974,4.312,975,3.436,976,4.312,977,4.312,978,3.784,979,3.436,980,3.436,981,2.969,982,2.969,983,3.784,984,4.312,985,4.312,986,4.312]],["title/injectables/LikesService.html",[138,0.528,953,2.587]],["body/injectables/LikesService.html",[3,0.075,4,0.075,5,0.066,7,0.336,8,1.139,11,2.29,14,0.011,15,0.868,17,1.635,18,1.462,22,1.682,23,1.302,24,1.682,29,0.477,34,0.475,44,0.085,45,0.164,47,1.038,48,1.51,49,1.265,59,0.004,60,0.006,61,0.004,93,0.952,138,0.626,140,0.98,142,1.107,143,1.649,155,0.812,168,1.24,175,2.013,177,0.827,257,3.808,268,2.828,278,2.57,285,1.364,425,2.052,427,3.604,432,2.052,434,1.913,438,1.321,443,3.282,444,1.913,503,4.456,507,1.41,639,2.122,640,2.052,644,2.122,649,2.122,658,1.458,937,2.735,943,4.383,951,5.096,953,3.067,955,3.98,969,3.012,987,3.012,988,4.995,989,3.432,990,3.432,991,4.995,992,3.432,993,4.995,994,3.432,995,3.432,996,3.432,997,3.432,998,3.432,999,3.432,1000,3.432,1001,3.432,1002,3.432,1003,3.432,1004,3.432,1005,3.432,1006,3.432,1007,3.432,1008,3.432]],["title/injectables/LocalAuthGuard.html",[37,3.103,138,0.528]],["body/injectables/LocalAuthGuard.html",[3,0.137,4,0.137,5,0.121,14,0.011,29,0.494,34,0.864,37,5.473,44,0.154,45,0.299,59,0.008,60,0.009,61,0.008,138,0.932,140,1.783,236,4.049,908,4.976,909,5.48,910,2.954,1009,5.48,1010,6.245]],["title/injectables/LocalStrategy.html",[138,0.528,230,2.9]],["body/injectables/LocalStrategy.html",[3,0.105,4,0.105,5,0.092,7,0.465,8,1.427,11,1.943,14,0.011,15,0.734,17,1.083,18,1.442,22,1.468,23,1.137,24,1.468,29,0.495,34,0.657,42,4.876,44,0.117,45,0.227,46,1.717,49,0.838,59,0.006,60,0.008,61,0.006,138,0.785,140,1.357,143,1.569,155,0.709,175,1.479,177,1.146,230,4.31,232,4.17,236,3.081,253,2.975,257,2.961,263,4.346,438,1.829,514,3.734,825,3.787,910,2.248,913,5.494,919,4.17,920,3.787,922,4.17,923,4.17,924,4.17,1011,4.17,1012,4.752,1013,4.752,1014,6.261,1015,4.752,1016,4.17,1017,6.261,1018,4.752,1019,4.752]],["title/classes/LoginUserDto.html",[45,0.202,255,3.103]],["body/classes/LoginUserDto.html",[3,0.132,4,0.132,5,0.116,7,0.586,14,0.01,15,0.85,18,1.47,44,0.148,45,0.287,59,0.007,60,0.009,61,0.007,155,0.821,255,5.339,263,4.551,271,1.445,446,2.393,514,4.156,583,4.413,595,5.258,597,5.258,1020,6.839]],["title/injectables/MulterUtils.html",[138,0.528,797,3.103]],["body/injectables/MulterUtils.html",[3,0.091,4,0.091,5,0.151,7,0.406,8,1.302,14,0.011,15,0.486,17,1.302,22,0.972,23,0.753,24,0.972,25,4.552,29,0.435,34,0.574,44,0.141,45,0.273,49,0.731,59,0.005,60,0.007,61,0.005,115,5.61,117,3.64,132,2.689,138,0.716,140,1.184,155,0.647,349,3.305,452,1.704,472,2.212,654,2.212,750,4.552,774,5.013,785,3.305,786,3.055,797,5.185,798,3.932,800,5.61,801,3.64,889,4.552,897,3.305,903,3.64,928,2.855,1021,3.64,1022,5.713,1023,4.148,1024,5.713,1025,5.713,1026,4.148,1027,5.713,1028,5.713,1029,5.713,1030,6.534,1031,5.713,1032,5.713,1033,5.713,1034,4.148,1035,4.148,1036,4.148,1037,4.148,1038,4.148,1039,4.148,1040,5.713,1041,4.148,1042,4.148,1043,5.713,1044,4.148,1045,4.148,1046,4.148,1047,4.148,1048,4.148,1049,4.148]],["title/classes/Pin.html",[45,0.202,1050,2.587]],["body/classes/Pin.html",[3,0.067,4,0.067,5,0.058,7,0.297,13,2.803,14,0.011,15,0.966,18,1.545,29,0.364,44,0.135,45,0.145,59,0.004,60,0.006,61,0.004,93,0.841,155,0.954,168,1.978,177,0.731,253,1.935,271,0.731,296,2.33,446,1.503,447,4.824,452,3.259,454,2.539,455,1.689,456,2.539,469,2.589,470,3.05,472,2.919,473,3.361,474,3.361,475,3.361,476,3.361,477,3.05,479,2.919,480,3.196,481,1.918,482,3.361,483,3.361,514,2.919,515,3.768,516,3.768,517,4.031,612,3.196,613,3.196,614,3.811,633,3.196,634,2.414,1050,3.361,1051,2.232,1052,3.03,1053,3.03,1054,3.03,1055,3.03,1056,3.03,1057,3.03,1058,3.03,1059,3.03,1060,3.03,1061,3.03,1062,3.03,1063,3.03,1064,3.03,1065,3.03,1066,3.03,1067,3.03,1068,3.03,1069,3.03,1070,2.414,1071,2.232,1072,2.659]],["title/controllers/PinsController.html",[0,1.433,1073,3.103]],["body/controllers/PinsController.html",[0,1.246,2,1.246,3,0.081,4,0.081,5,0.071,7,0.359,8,1.193,13,2.494,14,0.011,15,0.86,17,1.672,18,1.427,22,1.653,23,1.28,24,1.653,29,0.469,31,3.125,33,2.792,34,0.507,44,0.091,45,0.175,46,1.324,47,1.108,49,1.293,59,0.005,60,0.006,61,0.005,142,1.16,155,0.798,190,2.522,268,2.734,277,1.954,278,2.649,285,2.081,288,2.041,309,1.366,425,2.151,432,1.505,511,4.755,599,5.049,639,2.224,640,2.151,644,1.556,645,2.918,647,3.057,649,1.556,651,3.057,653,2.139,654,1.954,658,1.556,662,2.139,664,2.139,666,2.139,1073,3.856,1074,3.214,1075,4.594,1076,3.214,1077,3.663,1078,3.663,1079,3.663,1080,3.214,1081,5.236,1082,3.663,1083,3.663,1084,5.315,1085,3.663,1086,3.751,1087,3.214,1088,4.172,1089,3.214,1090,3.663,1091,3.663,1092,3.663,1093,3.663,1094,3.663,1095,3.663,1096,3.663,1097,3.663]],["title/modules/PinsModule.html",[62,1.203,80,2.731]],["body/modules/PinsModule.html",[2,2.101,3,0.102,4,0.102,5,0.09,14,0.011,23,0.846,29,0.511,34,0.644,44,0.115,45,0.223,49,0.821,59,0.006,60,0.008,61,0.006,62,1.979,64,1.913,65,1.979,66,1.851,67,2.123,68,1.979,69,3.16,70,3.16,80,5.223,87,2.816,88,2.123,89,2.123,91,2.203,92,2.484,93,1.292,134,2.382,299,2.595,302,2.382,303,2.203,304,2.382,305,2.382,306,2.382,307,2.382,308,3.16,309,2.303,310,2.382,1050,2.86,1071,4.55,1073,5.106,1086,5.211,1087,4.087,1098,4.087,1099,4.087,1100,4.087,1101,4.657,1102,6.178,1103,4.657,1104,4.087,1105,4.657,1106,4.657]],["title/injectables/PinsSeed.html",[138,0.528,147,2.731]],["body/injectables/PinsSeed.html",[3,0.078,4,0.078,5,0.069,7,0.501,8,1.167,11,1.666,14,0.011,15,0.6,17,0.81,22,1.2,23,0.93,24,1.2,29,0.341,34,0.491,44,0.127,45,0.17,46,1.283,47,1.074,49,1.159,59,0.004,60,0.006,61,0.004,138,0.642,140,1.014,142,1.135,143,1.172,147,3.32,155,0.402,175,1.105,177,1.448,185,2.731,188,3.424,190,4.133,321,3.771,412,1.979,413,1.979,416,1.979,417,1.979,418,1.979,421,1.979,422,1.816,423,1.979,452,2.103,469,1.68,470,2.854,472,2.731,473,3.144,474,2.181,475,3.144,476,3.144,477,2.854,479,2.731,480,2.99,481,1.245,482,3.144,483,3.144,514,2.731,515,3.525,516,3.525,517,3.771,679,3.525,693,2.445,694,2.445,695,2.074,696,2.074,697,2.616,1050,2.181,1086,4.456,1107,2.83,1108,3.552,1109,3.552,1110,3.552,1111,3.552,1112,3.116,1113,3.116,1114,3.116,1115,4.493,1116,3.116,1117,3.116,1118,4.493,1119,4.08,1120,4.493,1121,3.116,1122,3.116,1123,3.116,1124,3.116,1125,4.493,1126,4.493,1127,3.116,1128,3.116,1129,3.116,1130,3.116,1131,4.493,1132,4.493,1133,3.116,1134,4.493,1135,3.116,1136,3.116,1137,3.116,1138,3.116,1139,3.116,1140,3.116,1141,3.116,1142,3.116,1143,3.116,1144,4.493,1145,3.116,1146,3.116,1147,3.116,1148,3.116,1149,3.116,1150,3.116,1151,3.116,1152,2.83,1153,3.116,1154,3.116,1155,3.116,1156,3.116,1157,3.116,1158,3.116,1159,3.116,1160,3.552,1161,3.552,1162,3.552,1163,3.552,1164,3.552]],["title/injectables/PinsService.html",[138,0.528,1086,2.587]],["body/injectables/PinsService.html",[3,0.06,4,0.06,5,0.052,7,0.265,8,0.953,11,2.196,14,0.011,15,0.802,17,1.496,18,1.316,22,1.538,23,1.191,24,1.538,29,0.482,34,0.374,44,0.067,45,0.13,48,2.247,49,1.206,59,0.003,60,0.005,61,0.003,93,0.752,100,1.663,101,4.434,138,0.524,140,0.773,142,0.927,143,1.38,155,0.743,168,0.979,175,1.932,177,1.703,257,3.619,268,2.634,278,2.283,285,1.662,425,1.718,427,3.201,432,1.718,434,1.509,438,1.042,443,2.847,444,1.509,452,2.098,470,3.46,477,3.46,511,4.58,515,3.516,516,3.516,599,4.517,601,5.041,602,4.482,603,5.041,639,1.777,640,1.718,644,1.777,649,1.777,658,1.151,806,2.376,878,2.376,900,2.376,1050,1.663,1070,2.158,1075,3.669,1076,3.669,1080,3.669,1084,4.708,1086,2.567,1088,3.332,1089,2.376,1104,2.376,1119,2.158,1165,2.376,1166,2.708,1167,6.84,1168,2.708,1169,4.182,1170,2.708,1171,2.708,1172,2.708,1173,2.708,1174,2.708,1175,2.708,1176,2.708,1177,2.708,1178,2.708,1179,2.708,1180,2.708,1181,2.708,1182,2.708,1183,2.708,1184,2.708,1185,2.708,1186,2.708,1187,2.708,1188,2.708,1189,2.708,1190,4.182,1191,2.708,1192,2.708,1193,2.708,1194,2.708,1195,2.708,1196,2.708,1197,2.708,1198,2.708,1199,2.708,1200,2.708,1201,2.708,1202,2.708,1203,2.708,1204,2.708]],["title/classes/Rejoinder.html",[45,0.202,1205,2.9]],["body/classes/Rejoinder.html",[3,0.097,4,0.097,5,0.085,7,0.432,13,2.566,14,0.011,15,0.885,18,1.468,29,0.449,44,0.167,45,0.211,59,0.005,60,0.007,61,0.005,93,1.226,155,0.928,168,2.439,177,1.065,253,2.534,271,1.065,446,1.968,447,4.505,454,3.323,455,2.462,456,3.323,471,2.821,481,2.366,506,4.145,507,2.773,539,3.6,540,3.6,612,3.942,613,3.942,614,4.542,633,3.942,932,3.661,934,3.05,1205,4.647,1206,3.254,1207,4.418,1208,4.418,1209,4.418,1210,4.418,1211,4.418,1212,3.52,1213,3.254,1214,3.876]],["title/controllers/RejoindersController.html",[0,1.433,1215,3.103]],["body/controllers/RejoindersController.html",[0,1.266,2,1.266,3,0.082,4,0.082,5,0.072,7,0.364,8,1.207,13,2.507,14,0.011,15,0.864,17,1.681,18,1.484,22,1.663,23,1.288,24,1.663,29,0.447,31,3.152,33,2.824,34,0.515,44,0.092,45,0.178,46,1.345,47,1.125,49,1.3,59,0.005,60,0.007,61,0.005,142,1.174,155,0.803,202,2.562,268,2.89,277,1.985,278,2.668,285,1.479,288,2.074,309,1.388,425,2.175,432,1.529,536,4.78,639,2.25,640,2.175,644,1.581,645,2.951,647,3.092,649,1.581,651,3.092,653,2.173,654,1.985,658,1.581,662,2.173,664,2.173,666,2.173,942,3.251,946,2.285,947,4.219,960,2.741,1215,3.9,1216,3.266,1217,3.266,1218,3.722,1219,3.722,1220,3.722,1221,3.722,1222,3.722,1223,5.337,1224,3.722,1225,3.784,1226,3.266,1227,4.219,1228,3.722,1229,3.722,1230,3.722,1231,3.722,1232,3.722,1233,3.722,1234,3.722]],["title/modules/RejoindersModule.html",[62,1.203,81,2.731]],["body/modules/RejoindersModule.html",[2,2.113,3,0.103,4,0.103,5,0.091,14,0.011,23,0.853,29,0.513,34,0.65,44,0.116,45,0.225,49,0.828,59,0.006,60,0.008,61,0.006,62,1.988,64,1.93,65,1.996,66,1.867,67,2.141,68,1.996,69,3.174,70,2.832,81,5.234,87,2.832,88,2.141,89,2.141,91,2.222,92,2.505,93,1.304,134,2.403,299,2.618,302,2.403,303,2.222,304,2.403,305,2.403,306,2.403,307,2.403,308,3.178,309,2.316,310,2.403,1205,3.234,1213,4.576,1215,5.127,1225,5.183,1226,4.122,1235,4.122,1236,4.122,1237,4.122,1238,4.698,1239,4.698,1240,4.122,1241,4.698,1242,4.698,1243,4.698]],["title/injectables/RejoindersSeed.html",[138,0.528,153,2.731]],["body/injectables/RejoindersSeed.html",[3,0.092,4,0.092,5,0.081,7,0.562,8,1.309,11,1.821,14,0.011,15,0.673,17,0.953,22,1.346,23,1.043,24,1.346,29,0.382,34,0.578,44,0.142,45,0.2,46,1.51,47,1.264,49,1.246,59,0.005,60,0.007,61,0.005,138,0.72,140,1.193,142,1.273,143,1.38,153,3.723,155,0.473,175,1.301,177,1.582,188,3.639,194,3.062,198,4.337,202,4.516,412,2.329,413,2.329,416,2.329,417,2.329,418,2.329,419,2.441,420,2.138,421,2.329,422,2.138,423,2.329,438,1.608,471,1.977,481,1.465,506,2.566,507,1.717,539,2.229,540,2.229,695,2.441,696,2.441,975,3.33,979,3.33,980,3.33,981,2.877,982,2.877,983,3.668,1225,4.697,1244,3.33,1245,4.18,1246,4.18,1247,4.18,1248,4.18,1249,3.668,1250,3.33,1251,3.33,1252,3.33,1253,3.33,1254,3.33,1255,3.33,1256,3.33,1257,3.33,1258,4.18,1259,4.18,1260,4.18]],["title/injectables/RejoindersService.html",[138,0.528,1225,2.587]],["body/injectables/RejoindersService.html",[3,0.075,4,0.075,5,0.066,7,0.335,8,1.137,11,2.289,14,0.011,15,0.867,17,1.634,18,1.461,22,1.68,23,1.301,24,1.68,29,0.477,34,0.474,44,0.085,45,0.164,47,1.035,48,1.506,49,1.264,59,0.004,60,0.006,61,0.004,93,0.95,138,0.626,140,0.978,142,1.105,143,1.646,155,0.812,168,1.238,175,2.011,177,0.826,257,3.806,268,2.826,278,2.568,285,1.361,425,2.049,427,3.601,432,2.049,434,1.909,438,1.318,443,3.278,444,1.909,507,1.407,536,4.452,639,2.119,640,2.049,644,2.119,649,2.119,658,1.455,942,3.062,946,3.062,1205,2.358,1212,2.729,1217,4.376,1223,5.093,1225,3.062,1227,3.974,1240,3.005,1261,3.005,1262,3.425,1263,3.425,1264,4.987,1265,3.425,1266,3.425,1267,3.425,1268,3.425,1269,3.425,1270,3.425,1271,3.425,1272,3.425,1273,3.425,1274,3.425,1275,3.425,1276,3.425,1277,3.425,1278,3.425,1279,3.425,1280,3.425]],["title/controllers/RepliesController.html",[0,1.433,1281,3.103]],["body/controllers/RepliesController.html",[0,1.266,2,1.266,3,0.082,4,0.082,5,0.072,7,0.364,8,1.207,13,2.507,14,0.011,15,0.864,17,1.681,18,1.484,22,1.663,23,1.288,24,1.663,29,0.447,31,3.152,33,2.824,34,0.515,44,0.092,45,0.178,46,1.345,47,1.125,49,1.3,59,0.005,60,0.007,61,0.005,142,1.174,155,0.803,198,2.285,268,2.89,277,1.985,278,2.668,285,1.479,288,2.074,309,1.388,425,2.175,432,1.529,546,4.78,639,2.25,640,2.175,644,1.581,645,2.951,647,3.092,649,1.581,651,3.092,653,2.173,654,1.985,658,1.581,662,2.173,664,2.173,666,2.173,942,3.251,946,2.285,947,4.219,960,2.741,1281,3.9,1282,3.266,1283,3.266,1284,3.722,1285,3.722,1286,3.722,1287,3.722,1288,3.722,1289,5.337,1290,3.722,1291,3.784,1292,3.266,1293,4.219,1294,3.722,1295,3.722,1296,3.722,1297,3.722,1298,3.722,1299,3.722,1300,3.722]],["title/modules/RepliesModule.html",[62,1.203,82,2.731]],["body/modules/RepliesModule.html",[2,2.109,3,0.103,4,0.103,5,0.09,14,0.011,23,0.85,29,0.512,34,0.648,44,0.116,45,0.224,49,0.826,59,0.006,60,0.008,61,0.006,62,1.985,64,1.924,65,1.99,66,1.862,67,2.135,68,1.99,69,3.169,70,3.169,82,5.23,87,2.827,88,2.135,89,2.135,91,2.216,92,2.498,93,1.3,134,2.396,299,2.61,302,2.396,303,2.216,304,2.396,305,2.396,306,2.396,307,2.396,308,3.172,309,2.312,310,2.396,932,2.876,1281,5.12,1291,5.215,1292,4.11,1301,4.11,1302,4.11,1303,4.11,1304,4.684,1305,4.684,1306,4.567,1307,4.11,1308,4.684,1309,4.684]],["title/injectables/RepliesSeed.html",[138,0.528,151,2.731]],["body/injectables/RepliesSeed.html",[3,0.073,4,0.073,5,0.064,7,0.477,8,1.111,11,1.603,14,0.011,15,0.572,17,0.757,22,1.143,23,0.885,24,1.143,29,0.324,34,0.459,44,0.121,45,0.159,46,1.2,47,1.004,49,1.123,59,0.004,60,0.006,61,0.004,138,0.612,140,0.948,142,1.081,143,1.096,151,3.161,155,0.376,175,1.033,177,1.393,188,3.333,194,2.6,198,3.547,412,1.85,413,1.85,416,1.85,417,1.85,418,1.85,419,1.939,420,1.698,421,1.85,422,1.698,423,1.85,438,2.892,471,3.555,481,1.164,507,1.364,539,4.008,540,4.008,549,5.536,695,1.939,696,1.939,975,3.885,981,2.286,982,2.286,1250,5.989,1251,5.989,1252,5.989,1253,5.989,1254,5.989,1255,5.989,1256,5.989,1257,5.989,1291,4.353,1310,2.645,1311,3.32,1312,3.32,1313,3.32,1314,3.32,1315,5.536,1316,2.913,1317,1.771,1318,3.32,1319,3.32,1320,3.32]],["title/injectables/RepliesService.html",[138,0.528,1291,2.587]],["body/injectables/RepliesService.html",[3,0.076,4,0.076,5,0.067,7,0.337,8,1.142,11,2.236,14,0.011,15,0.869,17,1.637,18,1.463,22,1.684,23,1.304,24,1.684,29,0.478,34,0.477,44,0.085,45,0.165,47,1.042,48,1.516,49,1.267,59,0.004,60,0.006,61,0.004,93,0.956,138,0.628,140,0.984,142,1.11,143,1.654,155,0.813,168,1.245,175,1.837,177,0.831,257,3.811,268,2.831,278,2.576,285,1.37,425,2.058,427,3.612,432,2.058,434,1.921,438,1.326,443,3.29,444,2.792,507,1.416,546,4.463,639,2.129,640,2.058,644,2.129,649,2.129,658,1.464,932,2.116,942,3.076,946,3.076,1283,4.396,1289,5.103,1291,3.076,1293,3.992,1307,3.024,1321,3.024,1322,3.447,1323,3.447,1324,5.01,1325,3.447,1326,3.447,1327,3.447,1328,3.447,1329,3.447,1330,3.447,1331,2.746,1332,3.447,1333,3.447,1334,3.447,1335,3.447,1336,3.447,1337,3.447,1338,3.447,1339,3.447,1340,3.447,1341,3.447]],["title/classes/Reply.html",[45,0.202,932,2.587]],["body/classes/Reply.html",[3,0.099,4,0.099,5,0.087,7,0.442,13,2.586,14,0.011,15,0.891,18,1.421,29,0.454,44,0.169,45,0.216,59,0.006,60,0.008,61,0.006,93,1.253,155,0.92,168,2.467,177,1.089,253,2.571,271,1.089,446,1.997,447,4.586,452,2.486,454,3.372,455,2.516,456,3.372,471,2.862,481,2.392,507,2.804,539,3.64,540,3.64,549,5.027,612,3.534,613,3.534,614,4.258,633,3.534,932,4.191,934,3.095,1306,3.326,1331,3.598,1342,3.326,1343,4.516,1344,4.516,1345,4.516,1346,4.516,1347,4.516,1348,3.962]],["title/modules/SeedsModule.html",[62,1.203,83,2.9]],["body/modules/SeedsModule.html",[3,0.067,4,0.067,5,0.059,14,0.011,29,0.557,34,0.423,44,0.076,45,0.146,59,0.004,60,0.006,61,0.004,62,1.572,64,1.256,65,1.299,66,1.216,67,1.394,68,1.299,69,2.509,70,1.394,76,4.46,77,4.46,79,4.46,80,4.46,81,4.46,82,4.46,83,6.027,84,4.46,85,4.224,86,4.224,87,2.091,88,1.394,89,1.394,91,2.17,95,2.684,96,2.437,103,2.684,107,2.684,139,4.736,145,4.46,146,4.46,147,4.46,148,4.46,149,4.46,150,4.46,151,4.46,152,4.46,153,4.46,163,2.437,164,2.437,165,2.684,166,2.684,167,2.684,169,2.684,170,2.684,171,2.684,172,2.684,173,2.684,174,2.684,1349,2.684,1350,3.059,1351,2.684,1352,3.059,1353,3.059,1354,3.059,1355,3.059,1356,3.059,1357,4.587,1358,3.059,1359,3.059]],["title/classes/Support.html",[45,0.202,1317,2.247]],["body/classes/Support.html",[3,0.107,4,0.107,5,0.094,7,0.476,13,2.408,14,0.011,15,0.83,18,1.364,29,0.471,44,0.175,45,0.233,59,0.006,60,0.008,61,0.006,93,1.35,155,0.905,168,2.56,177,1.173,253,2.702,271,1.173,446,2.099,447,4.343,454,3.543,455,2.712,456,3.543,481,2.482,507,2.909,558,4.592,559,4.683,612,3.713,613,3.713,614,4.386,633,3.713,934,3.252,1317,3.777,1360,3.584,1361,4.866,1362,4.866,1363,4.866,1364,3.877,1365,3.584,1366,4.27]],["title/controllers/SupportsController.html",[0,1.433,1367,3.103]],["body/controllers/SupportsController.html",[0,1.266,2,1.266,3,0.082,4,0.082,5,0.072,7,0.364,8,1.207,13,2.507,14,0.011,15,0.864,17,1.681,18,1.484,22,1.663,23,1.288,24,1.663,29,0.447,31,3.152,33,2.824,34,0.515,44,0.092,45,0.178,46,1.345,47,1.125,49,1.3,59,0.005,60,0.007,61,0.005,142,1.174,155,0.803,196,2.562,268,2.89,277,1.985,278,2.668,285,1.479,288,2.074,309,1.388,425,2.175,432,1.529,555,4.78,639,2.25,640,2.175,644,1.581,645,2.951,647,3.092,649,1.581,651,3.092,653,2.173,654,1.985,658,1.581,662,2.173,664,2.173,666,2.173,942,3.251,946,2.285,960,2.741,1367,3.9,1368,3.266,1369,3.266,1370,3.722,1371,3.722,1372,5.295,1373,3.722,1374,3.722,1375,3.722,1376,5.337,1377,3.722,1378,3.784,1379,3.266,1380,4.219,1381,3.722,1382,3.722,1383,3.722,1384,3.722,1385,3.722,1386,3.722,1387,3.722]],["title/modules/SupportsModule.html",[62,1.203,84,2.731]],["body/modules/SupportsModule.html",[2,2.031,3,0.097,4,0.097,5,0.085,14,0.011,23,0.804,29,0.529,34,0.613,44,0.11,45,0.212,49,0.781,59,0.005,60,0.007,61,0.005,62,1.93,64,1.819,65,1.882,66,1.76,67,2.019,68,1.882,69,3.081,70,3.081,84,5.314,85,4.779,87,2.723,88,2.019,89,2.019,91,2.826,92,2.362,93,1.229,108,3.887,134,2.266,299,2.469,302,2.266,303,2.095,304,2.266,305,2.266,306,2.266,307,2.266,308,3.055,309,2.227,310,2.266,1317,2.362,1365,4.4,1367,4.979,1378,5.17,1379,3.887,1388,3.887,1389,4.43,1390,3.887,1391,3.887,1392,4.43,1393,4.43,1394,3.887,1395,2.469,1396,3.529,1397,4.43,1398,4.43]],["title/injectables/SupportsSeed.html",[138,0.528,150,2.731]],["body/injectables/SupportsSeed.html",[3,0.095,4,0.095,5,0.083,7,0.573,8,1.335,11,1.848,14,0.011,15,0.686,17,0.98,22,1.373,23,1.063,24,1.373,29,0.39,34,0.595,44,0.145,45,0.206,46,1.554,47,1.3,49,1.261,59,0.005,60,0.007,61,0.005,132,3.797,138,0.735,140,1.228,142,1.298,143,1.42,150,3.797,155,0.487,175,1.339,177,1.605,185,2.294,188,3.675,194,2.294,196,4.584,412,2.397,413,2.397,416,2.397,417,2.397,418,2.397,419,2.512,420,2.2,421,2.397,422,2.2,423,2.397,481,1.507,507,1.767,558,4.634,679,4.031,695,2.512,696,2.512,928,4.031,981,2.961,982,2.961,1317,2.294,1378,4.737,1399,3.427,1400,4.301,1401,4.301,1402,4.301,1403,4.301,1404,3.774,1405,4.301,1406,4.301,1407,4.301]],["title/injectables/SupportsService.html",[138,0.528,1378,2.587]],["body/injectables/SupportsService.html",[3,0.071,4,0.071,5,0.063,7,0.317,8,1.092,11,2.209,14,0.011,15,0.852,17,1.602,18,1.428,22,1.648,23,1.276,24,1.648,29,0.484,34,0.448,44,0.08,45,0.155,47,1.448,48,2.107,49,1.24,59,0.004,60,0.006,61,0.004,93,0.899,138,0.601,140,0.925,142,1.062,143,1.581,155,0.796,168,1.171,175,1.959,177,1.374,257,3.72,268,2.783,278,2.501,285,1.288,425,1.967,427,3.507,432,1.967,434,1.806,438,1.247,443,3.742,444,2.669,507,1.967,555,4.353,558,3.105,639,2.035,640,1.967,644,2.035,649,2.035,658,1.377,942,2.941,946,2.941,1317,3.038,1364,2.582,1369,4.203,1376,5.005,1378,2.941,1380,3.816,1394,2.844,1395,4.052,1396,2.582,1408,2.844,1409,3.241,1410,3.241,1411,4.79,1412,3.241,1413,3.241,1414,3.241,1415,3.241,1416,3.241,1417,3.241,1418,3.241,1419,3.241,1420,3.241,1421,3.241,1422,3.241,1423,3.241,1424,3.241,1425,2.844,1426,3.241,1427,3.241,1428,3.241,1429,3.241]],["title/classes/Topic.html",[45,0.202,934,2.155]],["body/classes/Topic.html",[3,0.082,4,0.082,5,0.072,7,0.367,13,2.725,14,0.011,15,0.939,18,1.455,29,0.412,44,0.153,45,0.179,59,0.005,60,0.007,61,0.005,93,1.04,155,0.947,168,2.236,177,0.904,253,2.261,271,0.904,296,3.164,446,1.756,447,4.731,452,3.19,454,2.965,455,2.088,456,2.965,469,2.926,471,2.517,479,3.299,481,2.168,539,3.299,540,3.299,566,4.557,567,4.259,568,4.557,569,4.259,570,4.557,612,3.613,613,3.613,614,4.154,633,3.613,934,3.164,1430,2.76,1431,3.748,1432,3.748,1433,3.748,1434,3.748,1435,3.748,1436,3.748,1437,3.748,1438,3.748,1439,3.748,1440,3.748,1441,2.986,1442,2.76,1443,3.288]],["title/controllers/TopicsController.html",[0,1.433,1444,3.103]],["body/controllers/TopicsController.html",[0,1.342,2,1.342,3,0.087,4,0.087,5,0.076,7,0.386,8,1.258,13,2.466,14,0.011,15,0.85,17,1.653,18,1.452,22,1.616,23,1.251,24,1.616,29,0.459,31,3.255,33,2.943,34,0.546,44,0.098,45,0.189,46,1.426,47,1.193,49,1.279,59,0.005,60,0.007,61,0.005,142,1.223,155,0.78,194,2.105,268,2.801,277,2.105,278,2.739,285,1.569,288,2.2,309,1.471,425,2.267,432,1.621,563,4.872,639,2.345,640,2.267,644,1.677,645,3.076,647,3.223,649,1.677,651,3.223,653,2.305,654,2.105,658,1.677,662,2.305,664,2.305,666,2.305,1395,3.547,1444,4.065,1445,3.463,1446,3.463,1447,3.947,1448,3.947,1449,3.947,1450,3.947,1451,5.417,1452,3.947,1453,3.463,1454,4.398,1455,3.947,1456,3.947,1457,3.947,1458,3.947,1459,3.947,1460,3.947]],["title/modules/TopicsModule.html",[62,1.203,85,2.587]],["body/modules/TopicsModule.html",[2,2.109,3,0.103,4,0.103,5,0.09,14,0.011,23,0.85,29,0.512,34,0.648,44,0.116,45,0.224,49,0.826,59,0.006,60,0.008,61,0.006,62,1.985,64,1.924,65,1.99,66,1.862,67,2.135,68,1.99,69,3.169,70,3.169,85,4.954,87,2.827,88,2.135,89,2.135,91,2.216,92,2.498,93,1.3,134,2.396,299,2.61,302,2.396,303,2.216,304,2.396,305,2.396,306,2.396,307,2.396,308,3.172,309,2.312,310,2.396,934,2.396,1395,4.734,1442,4.567,1444,5.12,1453,4.11,1461,4.11,1462,4.11,1463,4.11,1464,4.684,1465,4.684,1466,4.11,1467,4.684,1468,4.684]],["title/injectables/TopicsSeed.html",[138,0.528,149,2.731]],["body/injectables/TopicsSeed.html",[3,0.08,4,0.08,5,0.07,7,0.508,8,1.184,11,1.685,14,0.011,15,0.609,17,0.826,22,1.218,23,0.943,24,1.218,29,0.346,34,0.501,44,0.128,45,0.173,46,1.309,47,1.095,49,1.17,59,0.004,60,0.006,61,0.004,138,0.651,140,1.034,142,1.151,143,1.196,149,3.367,155,0.41,175,1.127,177,1.599,185,2.77,188,3.451,194,3.238,296,3.392,326,2.494,332,2.668,412,2.019,413,2.019,416,2.019,417,2.019,418,2.019,419,2.115,420,1.853,421,2.019,422,1.853,423,2.019,438,1.999,469,1.713,471,2.457,479,2.77,481,1.27,539,2.77,540,2.77,566,2.668,567,3.575,568,3.825,569,3.575,570,3.825,679,3.575,693,2.494,694,2.494,695,2.115,696,2.115,934,1.853,1152,5.284,1315,5.67,1395,4.072,1396,2.886,1469,2.886,1470,3.623,1471,3.623,1472,3.623,1473,4.558,1474,4.558,1475,4.558,1476,4.558,1477,4.558,1478,4.558,1479,4.558,1480,5.82,1481,5.82,1482,5.82,1483,5.82,1484,5.82,1485,4.558,1486,4.558,1487,4.558,1488,4.558,1489,3.179,1490,3.623,1491,3.623,1492,3.623]],["title/injectables/TopicsService.html",[138,0.528,1395,2.348]],["body/injectables/TopicsService.html",[3,0.071,4,0.071,5,0.062,7,0.315,8,1.087,11,2.266,14,0.011,15,0.851,17,1.599,18,1.443,22,1.644,23,1.273,24,1.644,29,0.483,34,0.445,44,0.08,45,0.154,47,0.974,48,1.417,49,1.28,59,0.004,60,0.006,61,0.004,93,0.894,138,0.598,140,0.92,142,1.057,143,1.574,155,0.794,168,1.164,175,1.953,177,1.15,194,1.718,257,3.662,268,2.706,278,2.494,285,1.28,326,3.283,425,1.959,427,3.497,432,1.959,434,1.795,438,1.24,443,3.164,444,1.795,558,3.68,559,4.181,563,4.342,567,2.218,569,2.218,639,2.026,640,1.959,644,2.026,649,2.026,658,1.369,934,2.439,1395,2.657,1441,2.567,1446,4.184,1451,4.996,1454,3.799,1466,2.827,1493,2.827,1494,4.769,1495,3.222,1496,3.222,1497,4.769,1498,3.222,1499,3.222,1500,3.222,1501,4.769,1502,3.222,1503,3.222,1504,3.222,1505,3.222,1506,3.222,1507,3.222,1508,3.222,1509,3.222,1510,3.222,1511,3.222,1512,3.222,1513,3.222,1514,3.222,1515,3.222,1516,4.769,1517,3.222,1518,3.222,1519,3.222]],["title/classes/UpdateEventDto.html",[45,0.202,650,2.9]],["body/classes/UpdateEventDto.html",[3,0.137,4,0.137,5,0.121,14,0.011,29,0.494,44,0.154,45,0.299,59,0.008,60,0.009,61,0.008,142,1.384,271,1.506,466,4.049,468,4.976,650,5.115,657,4.976,735,3.194,910,2.954,1520,5.48,1521,3.48,1522,6.245]],["title/classes/UpdateFileDto.html",[45,0.202,1523,3.357]],["body/classes/UpdateFileDto.html",[3,0.137,4,0.137,5,0.12,14,0.011,29,0.493,44,0.154,45,0.298,59,0.008,60,0.009,61,0.008,142,1.379,271,1.5,500,4.582,502,4.957,910,2.943,1521,3.467,1523,5.907,1524,5.459,1525,4.957,1526,4.582,1527,6.221,1528,6.221]],["title/classes/UpdateLikeDto.html",[45,0.202,951,2.9]],["body/classes/UpdateLikeDto.html",[3,0.137,4,0.137,5,0.121,14,0.011,29,0.494,44,0.154,45,0.299,59,0.008,60,0.009,61,0.008,142,1.384,271,1.506,503,4.049,505,4.976,735,3.194,910,2.954,951,5.115,955,4.976,1521,3.48,1529,5.48,1530,6.245]],["title/classes/UpdatePinDto.html",[45,0.202,1084,2.9]],["body/classes/UpdatePinDto.html",[3,0.137,4,0.137,5,0.121,14,0.011,29,0.494,44,0.154,45,0.299,59,0.008,60,0.009,61,0.008,142,1.384,271,1.506,511,4.049,513,4.976,735,3.194,910,2.954,1084,5.115,1088,4.976,1521,3.48,1531,5.48,1532,6.245]],["title/classes/UpdateRejoinderDto.html",[45,0.202,1223,2.9]],["body/classes/UpdateRejoinderDto.html",[3,0.137,4,0.137,5,0.121,14,0.011,29,0.494,44,0.154,45,0.299,59,0.008,60,0.009,61,0.008,142,1.384,271,1.506,536,4.049,538,4.976,735,3.194,910,2.954,1223,5.115,1227,4.976,1521,3.48,1533,5.48,1534,6.245]],["title/classes/UpdateReplyDto.html",[45,0.202,1289,2.9]],["body/classes/UpdateReplyDto.html",[3,0.137,4,0.137,5,0.121,14,0.011,29,0.494,44,0.154,45,0.299,59,0.008,60,0.009,61,0.008,142,1.384,271,1.506,546,4.049,548,4.976,735,3.194,910,2.954,1289,5.115,1293,4.976,1521,3.48,1535,5.48,1536,6.245]],["title/classes/UpdateSupportDto.html",[45,0.202,1376,2.9]],["body/classes/UpdateSupportDto.html",[3,0.137,4,0.137,5,0.121,14,0.011,29,0.494,44,0.154,45,0.299,59,0.008,60,0.009,61,0.008,142,1.384,271,1.506,555,4.049,557,4.976,735,3.194,910,2.954,1376,5.115,1380,4.976,1521,3.48,1537,5.48,1538,6.245]],["title/classes/UpdateTopicDto.html",[45,0.202,1451,2.9]],["body/classes/UpdateTopicDto.html",[3,0.137,4,0.137,5,0.121,14,0.011,29,0.494,44,0.154,45,0.299,59,0.008,60,0.009,61,0.008,142,1.384,271,1.506,563,4.049,565,4.976,735,3.194,910,2.954,1451,5.115,1454,4.976,1521,3.48,1539,5.48,1540,6.245]],["title/classes/UpdateUserDto.html",[45,0.202,1541,2.9]],["body/classes/UpdateUserDto.html",[3,0.137,4,0.137,5,0.12,14,0.011,29,0.493,44,0.154,45,0.298,59,0.008,60,0.009,61,0.008,142,1.379,260,4.582,271,1.5,581,4.033,583,4.582,910,2.943,1521,3.467,1525,4.957,1526,4.582,1541,5.103,1542,5.459,1543,6.221]],["title/classes/User.html",[45,0.202,253,1.79]],["body/classes/User.html",[3,0.082,4,0.082,5,0.072,7,0.364,13,2.721,14,0.011,15,0.949,18,1.54,29,0.41,44,0.152,45,0.178,59,0.005,60,0.007,61,0.005,93,1.033,155,0.94,168,2.227,177,0.897,253,2.619,263,3.599,271,0.897,296,2.708,303,2.505,446,1.748,447,4.746,454,2.951,455,2.074,456,2.951,469,2.915,514,3.287,559,3.9,584,4.539,585,4.539,586,4.539,587,4.539,588,4.539,589,4.539,612,3.092,613,3.092,614,3.921,632,3.266,633,3.092,634,4.219,1544,2.741,1545,5.408,1546,4.911,1547,3.722,1548,3.722,1549,3.722,1550,3.722,1551,3.722,1552,3.722,1553,3.722,1554,3.722,1555,3.722,1556,3.722,1557,3.722,1558,2.965,1559,2.741,1560,3.266]],["title/controllers/UsersController.html",[0,1.433,1561,3.103]],["body/controllers/UsersController.html",[0,1.295,2,1.295,3,0.084,4,0.084,5,0.074,7,0.373,8,1.227,11,1.732,13,2.434,14,0.011,15,0.839,17,1.631,18,1.44,22,1.59,23,1.232,24,1.59,29,0.476,31,3.193,32,3.035,33,2.87,34,0.527,39,3.342,40,2.622,41,3.342,44,0.094,45,0.182,46,1.376,47,1.152,49,1.262,55,5.477,59,0.005,60,0.007,61,0.005,142,1.193,155,0.768,175,1.185,188,1.872,248,3.645,260,3.964,268,2.769,277,2.031,278,2.696,285,1.514,288,2.123,309,1.42,425,2.211,432,1.564,581,4.816,639,2.287,640,2.211,644,1.618,645,3,647,2.224,649,1.618,651,2.224,653,2.224,654,2.031,658,1.618,662,2.224,664,2.224,666,2.224,1541,5.369,1561,3.964,1562,3.342,1563,3.342,1564,3.809,1565,3.809,1566,3.809,1567,3.809,1568,3.809,1569,3.809,1570,3.809,1571,3.809,1572,3.342,1573,3.809,1574,3.809,1575,3.809,1576,3.809,1577,3.809,1578,3.809]],["title/modules/UsersModule.html",[62,1.203,86,2.587]],["body/modules/UsersModule.html",[2,1.932,3,0.091,4,0.091,5,0.079,11,1.577,14,0.011,23,0.747,29,0.507,34,0.569,44,0.102,45,0.197,49,1.148,59,0.005,60,0.007,61,0.005,62,1.858,64,1.691,65,1.749,66,1.636,67,1.877,68,1.749,69,2.967,70,2.967,86,4.791,87,2.59,88,1.877,89,1.877,91,1.947,92,2.195,93,1.142,134,2.105,175,1.769,177,1.569,248,4.859,253,2.765,263,2.404,299,2.294,302,2.105,303,3.319,304,2.105,305,2.105,306,2.105,307,2.105,308,2.906,309,2.426,310,2.105,376,3.28,1545,3.612,1559,4.185,1561,4.793,1572,3.612,1579,3.612,1580,3.612,1581,3.612,1582,4.117,1583,4.117,1584,3.612,1585,4.986,1586,4.117,1587,4.117,1588,6.508,1589,4.117,1590,5.683,1591,4.117,1592,4.117,1593,4.117,1594,4.117,1595,4.117,1596,4.117,1597,4.117,1598,4.117]],["title/injectables/UsersSeed.html",[138,0.528,146,2.731]],["body/injectables/UsersSeed.html",[3,0.089,4,0.089,5,0.078,7,0.55,8,1.282,11,1.792,14,0.011,15,0.659,17,0.924,22,1.318,23,1.021,24,1.318,29,0.374,34,0.561,44,0.139,45,0.194,46,1.465,47,1.226,49,1.23,59,0.005,60,0.007,61,0.005,132,2.629,138,0.705,140,1.158,142,1.246,143,1.338,146,3.646,155,0.459,175,1.262,177,1.557,185,2.999,188,3.173,247,3.558,248,4.425,253,1.723,258,3.558,263,3.284,321,4.142,412,2.26,413,2.26,416,2.26,417,2.26,418,2.26,419,2.368,420,2.074,421,2.26,422,2.074,423,2.26,469,1.918,514,2.999,584,4.142,585,2.987,586,4.142,587,4.142,588,4.142,589,4.142,679,3.871,693,2.791,694,2.791,697,2.987,928,2.791,1546,4.481,1599,3.231,1600,4.055,1601,4.055,1602,3.558,1603,3.558,1604,3.558,1605,4.935,1606,4.935,1607,4.935,1608,4.935,1609,4.935,1610,4.935,1611,4.935,1612,4.935,1613,3.558,1614,3.558,1615,3.558,1616,3.558,1617,4.055,1618,4.055,1619,4.055]],["title/injectables/UsersService.html",[138,0.528,248,2.46]],["body/injectables/UsersService.html",[3,0.076,4,0.076,5,0.067,7,0.34,8,1.149,11,2.295,14,0.011,15,0.871,17,1.642,18,1.449,22,1.689,23,1.308,24,1.689,29,0.479,34,0.481,44,0.086,45,0.166,48,1.529,49,1.271,59,0.004,60,0.006,61,0.004,93,0.965,138,0.632,140,0.992,142,1.117,143,1.147,155,0.816,168,1.256,175,2.025,177,0.838,248,2.944,253,1.477,257,3.728,260,3.713,268,2.686,278,2.586,285,1.381,425,2.071,427,3.306,432,2.071,434,1.937,438,1.338,443,3.306,444,1.937,514,2.688,581,4.218,639,2.142,640,2.071,644,2.142,649,2.142,658,1.477,1425,3.05,1541,5.116,1558,2.77,1563,4.424,1584,3.05,1620,3.05,1621,5.041,1622,3.476,1623,3.476,1624,3.476,1625,3.476,1626,3.476,1627,5.041,1628,3.476,1629,3.476,1630,3.476,1631,3.476,1632,3.476,1633,3.476,1634,3.476,1635,3.476,1636,3.476,1637,3.476,1638,3.476,1639,5.041,1640,3.476,1641,3.476,1642,3.476]],["title/coverage.html",[1643,4.601]],["body/coverage.html",[0,2.331,1,1.431,3,0.043,5,0.062,6,1.705,14,0.011,35,1.26,37,1.431,40,1.338,42,1.193,45,0.396,59,0.002,60,0.004,61,0.002,68,1.363,122,1.705,138,1.016,139,1.338,141,1.705,145,1.26,146,1.26,147,1.26,148,1.26,149,1.26,150,1.26,151,1.26,152,1.26,153,1.26,155,0.22,185,1.036,188,0.955,190,1.338,192,1.338,194,1.036,196,1.338,198,1.193,200,1.338,202,1.338,221,1.705,229,1.338,230,1.338,245,1.705,248,1.135,253,0.826,255,1.431,270,1.548,272,1.705,273,1.705,275,1.431,276,1.705,280,1.338,283,1.193,296,0.994,297,1.431,303,1.517,311,2.555,420,0.994,424,1.705,438,0.748,445,2.362,459,1.705,460,1.705,466,1.26,467,1.705,468,2.555,500,1.431,501,1.705,502,2.555,503,1.26,504,1.705,505,2.555,511,1.26,512,2.555,513,2.555,536,1.26,537,1.705,538,2.555,546,1.26,547,1.705,548,2.555,555,1.26,556,1.705,557,2.555,563,1.26,564,1.705,565,2.555,581,1.26,582,1.705,583,3.016,599,1.338,600,1.705,610,1.193,611,2.362,635,1.431,637,1.431,638,1.705,650,1.338,655,1.193,676,2.555,701,1.705,719,1.705,720,1.338,721,2.555,722,2.555,738,1.431,743,1.431,744,2.555,760,1.548,795,1.26,797,1.431,847,1.338,854,1.705,889,2.555,890,1.705,907,1.705,908,2.555,912,1.705,931,2.362,932,1.193,934,0.994,938,1.431,940,1.431,941,1.705,951,1.338,953,1.193,972,2.555,987,1.705,1009,1.705,1011,1.705,1020,1.705,1021,1.705,1050,1.193,1051,2.362,1071,1.431,1073,1.431,1074,1.705,1084,1.338,1086,1.193,1107,2.555,1165,1.705,1205,1.338,1206,2.362,1213,1.431,1215,1.431,1216,1.705,1223,1.338,1225,1.193,1244,2.555,1261,1.705,1281,1.431,1282,1.705,1289,1.338,1291,1.193,1306,1.431,1310,2.555,1315,6.496,1317,1.036,1321,1.705,1342,2.362,1360,2.362,1365,1.431,1367,1.431,1368,1.705,1376,1.338,1378,1.193,1395,1.083,1399,2.555,1408,1.705,1430,2.362,1442,1.431,1444,1.431,1445,1.705,1451,1.338,1469,2.555,1493,1.705,1520,1.705,1523,1.548,1524,1.705,1529,1.705,1531,1.705,1533,1.705,1535,1.705,1537,1.705,1539,1.705,1541,1.338,1542,1.705,1544,2.362,1559,1.431,1561,1.431,1562,1.705,1599,2.555,1620,1.705,1643,1.548,1644,1.943,1645,1.943,1646,5.989,1647,1.943,1648,8.291,1649,7.35,1650,1.943,1651,6.854,1652,7.67,1653,1.705,1654,3.207,1655,5.989,1656,6.261,1657,1.943,1658,1.943,1659,1.705,1660,3.207,1661,3.207,1662,1.943,1663,1.943,1664,1.943,1665,1.943]],["title/dependencies.html",[65,2.156,1666,3.507]],["body/dependencies.html",[14,0.011,34,0.675,45,0.234,59,0.006,60,0.008,61,0.006,65,2.074,93,1.354,100,2.996,114,4.282,115,3.889,163,3.889,164,3.889,168,1.764,236,3.164,238,3.889,735,2.496,737,4.282,793,3.594,794,4.692,798,3.36,868,4.282,869,5.652,897,5.076,920,5.652,921,4.282,1016,4.282,1525,3.889,1526,3.594,1585,4.282,1667,4.88,1668,4.88,1669,7.093,1670,4.88,1671,4.88,1672,4.88,1673,4.88,1674,4.88,1675,4.88,1676,4.88,1677,4.88,1678,4.88,1679,4.88,1680,4.88,1681,4.88,1682,4.88,1683,4.88,1684,4.88,1685,4.88,1686,4.88,1687,4.88,1688,4.88,1689,4.88,1690,4.88,1691,4.88,1692,4.88,1693,4.88,1694,4.88,1695,4.88,1696,4.88,1697,4.88,1698,4.88,1699,4.88,1700,4.88,1701,4.88]],["title/miscellaneous/enumerations.html",[1702,2.048,1703,4.452]],["body/miscellaneous/enumerations.html",[7,0.556,14,0.011,59,0.007,60,0.009,61,0.007,142,1.555,309,2.615,325,5.863,640,2.881,750,5.589,800,5.589,813,4.984,817,4.984,1526,5.167,1702,3.317,1703,4.984,1704,7.015,1705,5.679,1706,5.679,1707,7.015,1708,5.679,1709,7.015,1710,7.015,1711,6.156,1712,5.679,1713,5.679,1714,5.679,1715,5.679]],["title/miscellaneous/functions.html",[1702,2.048,1716,4.452]],["body/miscellaneous/functions.html",[7,0.638,14,0.009,59,0.008,60,0.009,61,0.008,68,3.649,1653,5.721,1659,5.721,1702,3.807,1716,5.721,1717,6.52,1718,6.52]],["title/index.html",[7,0.343,1719,3.507,1720,3.507]],["body/index.html",[4,0.109,14,0.011,59,0.006,60,0.008,61,0.006,116,4.348,159,4.348,472,2.642,480,2.893,1317,2.642,1643,3.948,1711,4.348,1721,4.955,1722,4.955,1723,6.434,1724,4.955,1725,4.955,1726,4.955,1727,4.955,1728,4.955,1729,4.955,1730,7.145,1731,4.955,1732,4.955,1733,4.955,1734,4.955,1735,8.178,1736,4.955,1737,4.955,1738,8.033,1739,4.955,1740,4.955,1741,6.434,1742,4.955,1743,4.955,1744,4.955,1745,4.955,1746,6.434,1747,6.434,1748,4.955,1749,4.955,1750,4.955,1751,6.434,1752,6.434,1753,4.955,1754,4.955,1755,4.955,1756,4.955,1757,4.955,1758,4.955,1759,4.955,1760,4.955,1761,4.955,1762,4.955,1763,4.955,1764,4.955,1765,4.955,1766,4.955,1767,4.955,1768,4.955,1769,4.955,1770,4.955,1771,4.955,1772,4.955]],["title/modules.html",[64,2.372]],["body/modules.html",[14,0.008,59,0.007,60,0.008,61,0.007,63,3.91,64,2.181,74,3.655,75,3.655,76,3.442,77,3.442,78,3.655,79,3.442,80,3.442,81,3.442,82,3.442,83,3.655,84,3.442,85,3.26,86,3.26,1317,4.632,1773,8.686,1774,8.686,1775,8.719,1776,5.31,1777,5.31]],["title/overview.html",[1778,5.066]],["body/overview.html",[2,0.883,14,0.011,35,3.224,42,4.135,59,0.003,60,0.005,61,0.003,62,0.741,63,6.229,64,1.066,65,1.103,66,1.032,67,1.183,68,1.103,69,1.183,70,1.183,71,2.278,72,2.278,73,2.278,74,5.213,75,3.423,76,4.366,77,4.366,78,4.636,79,4.366,80,4.366,81,4.366,82,4.366,83,5.947,84,4.64,85,4.277,86,4.277,87,1.845,88,1.183,89,1.183,139,3.423,140,0.741,145,3.224,146,3.224,147,3.224,148,3.224,149,3.224,150,3.224,151,3.224,152,3.224,153,3.224,225,2.278,226,2.278,228,2.278,229,3.423,230,3.423,248,3.933,271,0.626,283,4.135,291,2.278,292,2.278,293,2.278,383,2.068,397,2.068,655,4.135,668,2.278,669,2.278,670,2.278,795,3.224,845,2.278,846,2.278,847,3.423,953,4.135,964,2.278,965,2.278,966,2.278,1086,4.135,1098,2.278,1099,2.278,1100,2.278,1225,4.135,1235,2.278,1236,2.278,1237,2.278,1291,4.135,1301,2.278,1302,2.278,1303,2.278,1349,2.278,1351,2.278,1378,4.135,1388,2.278,1390,2.278,1391,2.278,1395,3.753,1461,2.278,1462,2.278,1463,2.278,1579,2.278,1580,2.278,1581,2.278,1778,2.278,1779,2.596,1780,2.596]],["title/miscellaneous/typealiases.html",[1702,2.048,1781,5.074]],["body/miscellaneous/typealiases.html",[7,0.576,14,0.009,59,0.007,60,0.009,61,0.007,155,0.666,435,5.712,445,4.334,611,4.334,631,5.712,931,4.334,937,5.712,1051,4.334,1070,5.712,1206,4.334,1212,5.712,1331,5.712,1342,4.334,1360,4.334,1364,5.712,1430,4.334,1441,5.712,1544,4.334,1558,5.712,1702,3.436,1782,5.884,1783,5.163,1784,5.163,1785,5.163,1786,5.163,1787,5.163,1788,5.163,1789,5.163,1790,5.163,1791,5.163]],["title/miscellaneous/variables.html",[1702,2.048,1792,4.452]],["body/miscellaneous/variables.html",[7,0.517,14,0.011,18,0.218,45,0.058,49,1.143,59,0.001,60,0.003,61,0.001,66,2.664,132,1.852,155,0.136,177,1.273,185,2.323,188,2.71,190,1.966,192,1.966,194,2.511,196,1.966,198,2.42,200,1.966,202,1.966,204,5.966,253,0.51,263,1.241,296,1.765,297,1.565,302,0.615,303,0.568,304,0.615,305,0.615,306,0.615,307,0.615,308,1.087,309,0.792,310,0.615,311,0.957,316,4.936,317,1.054,318,1.054,319,1.864,320,1.054,321,4.583,322,1.054,323,4.936,324,1.864,325,5.354,326,3.635,327,4.936,328,1.054,329,1.054,330,1.054,331,1.864,332,3.889,333,1.054,334,1.054,335,1.864,336,1.864,337,0.957,338,1.054,339,1.054,340,1.054,341,1.054,342,1.054,343,1.054,344,1.054,345,1.054,346,1.054,347,1.054,348,3.027,349,0.957,350,1.054,351,1.054,352,1.054,353,1.054,354,1.054,355,1.054,356,1.054,357,1.054,358,1.054,359,1.054,360,1.054,361,1.054,362,1.054,363,1.054,364,1.054,365,1.054,366,1.054,367,1.054,368,1.054,369,1.054,370,1.054,371,1.054,372,1.864,373,1.054,374,1.054,375,1.864,376,0.957,377,1.054,378,2.506,379,1.054,380,1.054,381,1.054,382,1.054,383,0.957,384,1.054,385,1.054,386,1.054,387,1.864,388,1.054,389,1.054,390,1.054,391,1.054,392,1.054,393,1.054,394,1.054,395,1.054,396,1.054,397,0.957,398,1.864,399,1.054,400,1.864,401,1.054,402,1.054,403,1.054,404,1.054,405,1.054,406,1.864,407,1.054,408,1.054,409,1.054,410,1.054,411,1.054,422,0.615,438,2.337,445,0.885,452,1.417,457,1.054,458,1.054,469,1.632,470,1.923,471,3.008,472,1.84,473,2.118,474,1.304,475,2.118,476,2.118,477,1.923,478,1.565,479,2.323,480,2.015,481,1.65,482,2.118,483,2.118,506,1.304,507,1.417,514,1.84,515,1.463,516,1.463,517,1.565,539,3.051,540,3.051,549,3.693,558,2.237,566,0.885,567,1.463,568,1.565,569,1.463,570,1.565,584,1.565,585,0.885,586,1.565,587,1.565,588,1.565,589,1.565,610,1.754,611,0.885,635,1.565,636,1.054,676,0.957,682,1.864,683,1.864,684,1.864,685,1.054,686,1.864,687,1.864,688,1.864,689,1.864,690,1.864,691,1.054,692,1.054,693,2.375,694,2.375,695,2.75,696,2.75,697,2.104,739,0.957,744,0.957,760,1.693,786,0.885,802,1.054,928,1.966,931,0.885,934,0.615,938,1.565,939,1.054,972,0.957,978,1.054,979,1.693,980,1.693,981,2.375,982,2.375,1050,0.738,1051,0.885,1071,1.565,1072,1.054,1107,0.957,1112,1.054,1113,1.054,1114,1.054,1115,1.864,1116,1.054,1117,1.054,1118,1.864,1119,1.693,1120,1.864,1121,1.054,1122,1.054,1123,1.054,1124,1.054,1125,1.864,1126,1.864,1127,1.054,1128,1.054,1129,1.054,1130,1.054,1131,1.864,1132,1.864,1133,1.054,1134,1.864,1135,1.054,1136,1.054,1137,1.054,1138,1.054,1139,1.054,1140,1.054,1141,1.054,1142,1.054,1143,1.054,1144,1.864,1145,1.054,1146,1.054,1147,1.054,1148,1.054,1149,1.054,1150,1.054,1151,1.054,1152,3.141,1153,1.054,1154,1.054,1155,1.054,1156,1.054,1157,1.054,1158,1.054,1159,1.054,1206,0.885,1213,1.565,1214,1.054,1244,0.957,1249,1.054,1250,4.207,1251,4.207,1252,4.207,1253,4.207,1254,4.207,1255,4.207,1256,4.207,1257,4.207,1306,1.565,1310,0.957,1315,4.775,1316,1.054,1317,1.133,1342,0.885,1348,1.054,1360,0.885,1365,1.565,1366,1.054,1399,0.957,1404,1.054,1430,0.885,1442,1.565,1443,1.054,1469,0.957,1473,1.864,1474,1.864,1475,1.864,1476,1.864,1477,1.864,1478,1.864,1479,1.864,1480,3.027,1481,3.027,1482,3.027,1483,3.027,1484,3.027,1485,1.864,1486,1.864,1487,1.864,1488,1.864,1489,1.054,1544,0.885,1546,1.693,1559,1.565,1560,1.054,1599,0.957,1602,1.054,1603,1.054,1604,1.054,1605,1.864,1606,1.864,1607,1.864,1608,1.864,1609,1.864,1610,1.864,1611,1.864,1612,1.864,1613,1.054,1614,1.054,1615,1.054,1616,1.054,1702,0.702,1783,1.054,1784,1.054,1785,1.054,1786,1.054,1787,1.054,1788,1.054,1789,1.054,1790,1.054,1791,1.054,1792,1.054,1793,1.201,1794,1.201,1795,1.201,1796,1.201,1797,1.201,1798,1.201,1799,1.201,1800,1.201,1801,1.201,1802,1.201]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1315,"title":{},"body":{"injectables/RepliesSeed.html":{},"injectables/TopicsSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":1692,"title":{},"body":{"dependencies.html":{}}}],["0.21.1",{"_index":1680,"title":{},"body":{"dependencies.html":{}}}],["0.4.0",{"_index":1682,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":1687,"title":{},"body":{"dependencies.html":{}}}],["0.6.3",{"_index":1670,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1648,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1662,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1661,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1663,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":1654,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":1660,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1647,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1649,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1646,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1650,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1651,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1655,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1656,"title":{},"body":{"coverage.html":{}}}],["0e68d8",{"_index":367,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["1",{"_index":326,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1689,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1683,"title":{},"body":{"dependencies.html":{}}}],["1.png",{"_index":328,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["10",{"_index":376,"title":{},"body":{"injectables/CategoriesSeed.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["10.png",{"_index":377,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":1657,"title":{},"body":{"coverage.html":{}}}],["1024",{"_index":1040,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["11",{"_index":383,"title":{},"body":{"injectables/CategoriesSeed.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["11.png",{"_index":384,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":388,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["12.png",{"_index":389,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["12345678",{"_index":1605,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["13",{"_index":393,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["13.png",{"_index":394,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":397,"title":{},"body":{"injectables/CategoriesSeed.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":402,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["15.png",{"_index":398,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["16",{"_index":404,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["16.2.0",{"_index":1701,"title":{},"body":{"dependencies.html":{}}}],["16.png",{"_index":405,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["17",{"_index":408,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["17.png",{"_index":409,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["18",{"_index":410,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["18.png",{"_index":411,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["2",{"_index":332,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":1686,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":1675,"title":{},"body":{"dependencies.html":{}}}],["2.png",{"_index":333,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["2/2",{"_index":1658,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1608,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["20.453422",{"_index":1127,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["20.460178",{"_index":1154,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["2592000s",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["28",{"_index":1779,"title":{},"body":{"overview.html":{}}}],["2c4a25",{"_index":363,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["3",{"_index":337,"title":{},"body":{"injectables/CategoriesSeed.html":{},"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["3.0.2",{"_index":1694,"title":{},"body":{"dependencies.html":{}}}],["3.png",{"_index":338,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["30",{"_index":1609,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["3100",{"_index":1117,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["34",{"_index":1780,"title":{},"body":{"overview.html":{}}}],["3997",{"_index":1139,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["4",{"_index":343,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1688,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1678,"title":{},"body":{"dependencies.html":{}}}],["4.1.6",{"_index":1699,"title":{},"body":{"dependencies.html":{}}}],["4.2.0",{"_index":1685,"title":{},"body":{"dependencies.html":{}}}],["4.8.0",{"_index":1676,"title":{},"body":{"dependencies.html":{}}}],["4.png",{"_index":344,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["5",{"_index":349,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/MulterUtils.html":{},"miscellaneous/variables.html":{}}}],["5.0.1",{"_index":1681,"title":{},"body":{"dependencies.html":{}}}],["5.12.3",{"_index":1684,"title":{},"body":{"dependencies.html":{}}}],["5.2.2",{"_index":1668,"title":{},"body":{"dependencies.html":{}}}],["5.png",{"_index":350,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["528443",{"_index":357,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["53a4df",{"_index":374,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["54.598564",{"_index":1155,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["54.620065",{"_index":1128,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":354,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["6.6.6",{"_index":1696,"title":{},"body":{"dependencies.html":{}}}],["6.png",{"_index":355,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["60689bc939f8713cc87acb83",{"_index":697,"title":{},"body":{"injectables/EventsSeed.html":{},"injectables/PinsSeed.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["6068a568b884f04dbc47e976",{"_index":1159,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["62a06b",{"_index":352,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["6333833207",{"_index":1136,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["633d35",{"_index":324,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["6732533795",{"_index":1114,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["69303410",{"_index":685,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["69303420",{"_index":691,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["7",{"_index":359,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["7.1.5",{"_index":1674,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1672,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":1673,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":1669,"title":{},"body":{"dependencies.html":{}}}],["7.png",{"_index":360,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["79004381",{"_index":1121,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["79020000",{"_index":1140,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["8",{"_index":364,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["8.png",{"_index":365,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":369,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["9.png",{"_index":370,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["95c6dc",{"_index":382,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["_id",{"_index":443,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/EventsService.html":{},"injectables/LikesService.html":{},"injectables/PinsService.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesService.html":{},"injectables/SupportsService.html":{},"injectables/TopicsService.html":{},"injectables/UsersService.html":{}}}],["aa4245",{"_index":331,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["aarao@mail.com",{"_index":1604,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["aarão",{"_index":1602,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["ability.factory.ts",{"_index":273,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"coverage.html":{}}}],["action",{"_index":1704,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["address",{"_index":1179,"title":{},"body":{"injectables/PinsService.html":{}}}],["afonso",{"_index":1137,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["afro",{"_index":390,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["agerange",{"_index":584,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["alias",{"_index":1254,"title":{},"body":{"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":1782,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["aliquam",{"_index":1253,"title":{},"body":{"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"miscellaneous/variables.html":{}}}],["allow",{"_index":1043,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["allowed",{"_index":1028,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["amazing",{"_index":1758,"title":{},"body":{"index.html":{}}}],["anos",{"_index":1610,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["ao",{"_index":1146,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["aperiam",{"_index":1250,"title":{},"body":{"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"miscellaneous/variables.html":{}}}],["apibadrequestresponse",{"_index":790,"title":{},"body":{"controllers/FilesController.html":{}}}],["apibody",{"_index":789,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiconsumes",{"_index":788,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiconsumes('multipart/form",{"_index":805,"title":{},"body":{"controllers/FilesController.html":{}}}],["apicreatedresponse",{"_index":787,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiexception",{"_index":760,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiexception})@apicreatedresponse({type",{"_index":755,"title":{},"body":{"controllers/FilesController.html":{}}}],["apiproperty",{"_index":734,"title":{},"body":{"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{}}}],["apiproperty()@expose",{"_index":728,"title":{},"body":{"classes/FileInfoVm.html":{}}}],["apiproperty({type",{"_index":740,"title":{},"body":{"classes/FileResponseVm.html":{}}}],["apitags",{"_index":791,"title":{},"body":{"controllers/FilesController.html":{}}}],["apitags('attachments",{"_index":804,"title":{},"body":{"controllers/FilesController.html":{}}}],["app",{"_index":159,"title":{},"body":{"injectables/AppSeed.html":{},"index.html":{}}}],["app.controller",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1729,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":63,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appseed",{"_index":139,"title":{"injectables/AppSeed.html":{}},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{},"coverage.html":{},"overview.html":{}}}],["appservice",{"_index":35,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arquitetura",{"_index":1150,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["arte",{"_index":319,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["artes",{"_index":317,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["artesanato",{"_index":330,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["attachment",{"_index":771,"title":{},"body":{"controllers/FilesController.html":{}}}],["attachment/files",{"_index":745,"title":{},"body":{"controllers/FilesController.html":{}}}],["audiovisual",{"_index":346,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["autem",{"_index":1252,"title":{},"body":{"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":908,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":232,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":43,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["auth/local",{"_index":38,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":909,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":911,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1010,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":74,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1766,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":42,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoexit",{"_index":161,"title":{},"body":{"injectables/AppSeed.html":{}}}],["av",{"_index":1115,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":1777,"title":{},"body":{"modules.html":{}}}],["avatarid",{"_index":585,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":175,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["axios",{"_index":1679,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":1759,"title":{},"body":{"index.html":{}}}],["bairro",{"_index":683,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["bar",{"_index":1126,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["bb7165",{"_index":401,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["bcrypt",{"_index":1585,"title":{},"body":{"modules/UsersModule.html":{},"dependencies.html":{}}}],["bcrypt.compare(plainpassword",{"_index":1595,"title":{},"body":{"modules/UsersModule.html":{}}}],["bcrypt.hash(user.get('password",{"_index":1591,"title":{},"body":{"modules/UsersModule.html":{}}}],["body",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/EventsController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":559,"title":{},"body":{"classes/CreateSupportDto.html":{},"classes/Support.html":{},"injectables/TopicsService.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brasileira",{"_index":391,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["brava",{"_index":1112,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["brava@email.com",{"_index":1113,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["break",{"_index":187,"title":{},"body":{"injectables/AppSeed.html":{}}}],["browse",{"_index":1775,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1773,"title":{},"body":{"modules.html":{}}}],["building",{"_index":1724,"title":{},"body":{"index.html":{}}}],["c",{"_index":348,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["c95676",{"_index":396,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["calógeras",{"_index":1116,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["campo",{"_index":1119,"title":{},"body":{"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"miscellaneous/variables.html":{}}}],["capoeira",{"_index":381,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["carte",{"_index":1142,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["casa",{"_index":1133,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["casacolonial@email.com",{"_index":1135,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":184,"title":{},"body":{"injectables/AppSeed.html":{}}}],["casl/ability",{"_index":1667,"title":{},"body":{"dependencies.html":{}}}],["casl/casl.module",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["caslabilityfactory",{"_index":270,"title":{"classes/CaslAbilityFactory.html":{}},"body":{"classes/CaslAbilityFactory.html":{},"coverage.html":{}}}],["caslmodule",{"_index":75,"title":{"modules/CaslModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CaslModule.html":{},"modules.html":{},"overview.html":{}}}],["catch",{"_index":421,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{}}}],["catch(err",{"_index":1200,"title":{},"body":{"injectables/PinsService.html":{}}}],["categories",{"_index":185,"title":{},"body":{"injectables/AppSeed.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/PinsSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categories.controller",{"_index":295,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.length",{"_index":694,"title":{},"body":{"injectables/EventsSeed.html":{},"injectables/PinsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["categories.map((category",{"_index":414,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["categories.service",{"_index":284,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{}}}],["categories/categories.module",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedsModule.html":{}}}],["categories/categories.service",{"_index":315,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["categories[index",{"_index":693,"title":{},"body":{"injectables/EventsSeed.html":{},"injectables/PinsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["categoriescontroller",{"_index":275,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesid",{"_index":208,"title":{},"body":{"injectables/AppSeed.html":{}}}],["categoriesmodule",{"_index":76,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/SeedsModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesseed",{"_index":145,"title":{"injectables/CategoriesSeed.html":{}},"body":{"injectables/AppSeed.html":{},"injectables/CategoriesSeed.html":{},"modules/SeedsModule.html":{},"coverage.html":{},"overview.html":{}}}],["categoriesservice",{"_index":283,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["categoriestagged",{"_index":566,"title":{},"body":{"classes/CreateTopicDto.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["category",{"_index":296,"title":{"classes/Category.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Event.html":{},"classes/Pin.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["category.dto",{"_index":286,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["category.dto.ts",{"_index":460,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:2",{"_index":461,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:3",{"_index":463,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:4",{"_index":464,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:5",{"_index":465,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:6",{"_index":462,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.name",{"_index":300,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categorydocument",{"_index":435,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"miscellaneous/typealiases.html":{}}}],["categoryid",{"_index":469,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["categorymodel",{"_index":429,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryschema",{"_index":297,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryschema.set('tojson",{"_index":301,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["cb",{"_index":1033,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["cb(new",{"_index":1046,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["cb(null",{"_index":1045,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["cc748c",{"_index":392,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["centro",{"_index":1118,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["check",{"_index":1041,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["chunksize",{"_index":723,"title":{},"body":{"classes/FileInfoVm.html":{},"injectables/FilesService.html":{}}}],["cidade",{"_index":684,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["cinema",{"_index":345,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["circo",{"_index":340,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["city",{"_index":470,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":45,"title":{"classes/CaslAbilityFactory.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"classes/Like.html":{},"classes/LoginUserDto.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["classes",{"_index":271,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"classes/Like.html":{},"classes/LoginUserDto.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["cluster_appmodule",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":225,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":291,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_exports",{"_index":292,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":293,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_eventsmodule",{"_index":668,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_exports",{"_index":669,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_eventsmodule_providers",{"_index":670,"title":{},"body":{"modules/EventsModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":845,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_providers",{"_index":846,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_likesmodule",{"_index":964,"title":{},"body":{"modules/LikesModule.html":{},"overview.html":{}}}],["cluster_likesmodule_exports",{"_index":965,"title":{},"body":{"modules/LikesModule.html":{},"overview.html":{}}}],["cluster_likesmodule_providers",{"_index":966,"title":{},"body":{"modules/LikesModule.html":{},"overview.html":{}}}],["cluster_pinsmodule",{"_index":1098,"title":{},"body":{"modules/PinsModule.html":{},"overview.html":{}}}],["cluster_pinsmodule_exports",{"_index":1100,"title":{},"body":{"modules/PinsModule.html":{},"overview.html":{}}}],["cluster_pinsmodule_providers",{"_index":1099,"title":{},"body":{"modules/PinsModule.html":{},"overview.html":{}}}],["cluster_rejoindersmodule",{"_index":1235,"title":{},"body":{"modules/RejoindersModule.html":{},"overview.html":{}}}],["cluster_rejoindersmodule_exports",{"_index":1236,"title":{},"body":{"modules/RejoindersModule.html":{},"overview.html":{}}}],["cluster_rejoindersmodule_providers",{"_index":1237,"title":{},"body":{"modules/RejoindersModule.html":{},"overview.html":{}}}],["cluster_repliesmodule",{"_index":1301,"title":{},"body":{"modules/RepliesModule.html":{},"overview.html":{}}}],["cluster_repliesmodule_exports",{"_index":1302,"title":{},"body":{"modules/RepliesModule.html":{},"overview.html":{}}}],["cluster_repliesmodule_providers",{"_index":1303,"title":{},"body":{"modules/RepliesModule.html":{},"overview.html":{}}}],["cluster_seedsmodule",{"_index":1349,"title":{},"body":{"modules/SeedsModule.html":{},"overview.html":{}}}],["cluster_seedsmodule_imports",{"_index":1350,"title":{},"body":{"modules/SeedsModule.html":{}}}],["cluster_seedsmodule_providers",{"_index":1351,"title":{},"body":{"modules/SeedsModule.html":{},"overview.html":{}}}],["cluster_supportsmodule",{"_index":1388,"title":{},"body":{"modules/SupportsModule.html":{},"overview.html":{}}}],["cluster_supportsmodule_exports",{"_index":1391,"title":{},"body":{"modules/SupportsModule.html":{},"overview.html":{}}}],["cluster_supportsmodule_imports",{"_index":1389,"title":{},"body":{"modules/SupportsModule.html":{}}}],["cluster_supportsmodule_providers",{"_index":1390,"title":{},"body":{"modules/SupportsModule.html":{},"overview.html":{}}}],["cluster_topicsmodule",{"_index":1461,"title":{},"body":{"modules/TopicsModule.html":{},"overview.html":{}}}],["cluster_topicsmodule_exports",{"_index":1462,"title":{},"body":{"modules/TopicsModule.html":{},"overview.html":{}}}],["cluster_topicsmodule_providers",{"_index":1463,"title":{},"body":{"modules/TopicsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":1579,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":1581,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":1580,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["collection",{"_index":180,"title":{},"body":{"injectables/AppSeed.html":{}}}],["collection.name",{"_index":183,"title":{},"body":{"injectables/AppSeed.html":{}}}],["colonial",{"_index":1134,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["color",{"_index":323,"title":{},"body":{"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"miscellaneous/variables.html":{}}}],["com",{"_index":1144,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["command",{"_index":163,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{},"dependencies.html":{}}}],["command({command",{"_index":156,"title":{},"body":{"injectables/AppSeed.html":{}}}],["commandmodule",{"_index":1357,"title":{},"body":{"modules/SeedsModule.html":{}}}],["comparepassword",{"_index":1545,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{}}}],["completo",{"_index":1612,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["config",{"_index":1027,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["config.service",{"_index":851,"title":{},"body":{"modules/FilesModule.html":{}}}],["config.service.ts",{"_index":890,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{},"coverage.html":{}}}],["config.service.ts:26",{"_index":894,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["config.service.ts:8",{"_index":893,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["config/configuration",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSeed.html":{},"modules/AuthModule.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/PinsService.html":{}}}],["configservice.get('mongourl",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice.get('supersecret",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["configuration",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["connection",{"_index":859,"title":{},"body":{"injectables/FilesService.html":{}}}],["consequuntur",{"_index":1255,"title":{},"body":{"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"miscellaneous/variables.html":{}}}],["console.error(error",{"_index":423,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{}}}],["console.log(\"seeding",{"_index":412,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{}}}],["console.log(`the",{"_index":205,"title":{},"body":{"injectables/AppSeed.html":{}}}],["console.log(response",{"_index":419,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{}}}],["console.log(response.id",{"_index":1163,"title":{},"body":{"injectables/PinsSeed.html":{}}}],["const",{"_index":177,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"classes/Like.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"classes/Support.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":143,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectconnection",{"_index":872,"title":{},"body":{"injectables/FilesService.html":{}}}],["constructor(@injectmodel(category.name",{"_index":436,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":1632,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":1012,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(categoriesservice",{"_index":312,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["constructor(categorymodel",{"_index":426,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(configservice",{"_index":144,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(connection",{"_index":858,"title":{},"body":{"injectables/FilesService.html":{}}}],["constructor(eventmodel",{"_index":702,"title":{},"body":{"injectables/EventsService.html":{}}}],["constructor(eventsservice",{"_index":677,"title":{},"body":{"injectables/EventsSeed.html":{}}}],["constructor(likemodel",{"_index":989,"title":{},"body":{"injectables/LikesService.html":{}}}],["constructor(likesservice",{"_index":973,"title":{},"body":{"injectables/LikesSeed.html":{}}}],["constructor(pinmodel",{"_index":1166,"title":{},"body":{"injectables/PinsService.html":{}}}],["constructor(pinsservice",{"_index":1108,"title":{},"body":{"injectables/PinsSeed.html":{}}}],["constructor(private",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"controllers/FilesController.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LocalStrategy.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{}}}],["constructor(rejoindermodel",{"_index":1262,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["constructor(rejoindersservice",{"_index":1245,"title":{},"body":{"injectables/RejoindersSeed.html":{}}}],["constructor(repliesservice",{"_index":1311,"title":{},"body":{"injectables/RepliesSeed.html":{}}}],["constructor(replymodel",{"_index":1322,"title":{},"body":{"injectables/RepliesService.html":{}}}],["constructor(supportmodel",{"_index":1409,"title":{},"body":{"injectables/SupportsService.html":{}}}],["constructor(supportsservice",{"_index":1400,"title":{},"body":{"injectables/SupportsSeed.html":{}}}],["constructor(topicmodel",{"_index":1495,"title":{},"body":{"injectables/TopicsService.html":{}}}],["constructor(topicsservice",{"_index":1470,"title":{},"body":{"injectables/TopicsSeed.html":{}}}],["constructor(usermodel",{"_index":1622,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":247,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersSeed.html":{}}}],["content",{"_index":539,"title":{},"body":{"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateTopicDto.html":{},"classes/Rejoinder.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"classes/Reply.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["contenttype",{"_index":724,"title":{},"body":{"classes/FileInfoVm.html":{},"injectables/FilesService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/EventsController.html":{},"controllers/FilesController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/EventsController.html":{},"controllers/FilesController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('/attachment/files",{"_index":803,"title":{},"body":{"controllers/FilesController.html":{}}}],["controller('categories",{"_index":287,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('events",{"_index":659,"title":{},"body":{"controllers/EventsController.html":{}}}],["controller('likes",{"_index":956,"title":{},"body":{"controllers/LikesController.html":{}}}],["controller('pins",{"_index":1090,"title":{},"body":{"controllers/PinsController.html":{}}}],["controller('rejoinders",{"_index":1228,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["controller('replies",{"_index":1294,"title":{},"body":{"controllers/RepliesController.html":{}}}],["controller('supports",{"_index":1381,"title":{},"body":{"controllers/SupportsController.html":{}}}],["controller('topics",{"_index":1455,"title":{},"body":{"controllers/TopicsController.html":{}}}],["controller('users",{"_index":1573,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["costelinha",{"_index":1148,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["county",{"_index":601,"title":{},"body":{"classes/CreatelocationDto.html":{},"injectables/PinsService.html":{}}}],["coverage",{"_index":1643,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["crande",{"_index":1120,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":142,"title":{},"body":{"injectables/AppSeed.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["create(@body",{"_index":288,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/EventsController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["create(categories",{"_index":679,"title":{},"body":{"injectables/EventsSeed.html":{},"injectables/PinsSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{}}}],["create(createcategorydto",{"_index":279,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["create(createeventdto",{"_index":641,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{}}}],["create(createlikedto",{"_index":943,"title":{},"body":{"controllers/LikesController.html":{},"injectables/LikesService.html":{}}}],["create(createpindto",{"_index":1076,"title":{},"body":{"controllers/PinsController.html":{},"injectables/PinsService.html":{}}}],["create(createrejoinderdto",{"_index":1217,"title":{},"body":{"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{}}}],["create(createreplydto",{"_index":1283,"title":{},"body":{"controllers/RepliesController.html":{},"injectables/RepliesService.html":{}}}],["create(createsupportdto",{"_index":1369,"title":{},"body":{"controllers/SupportsController.html":{},"injectables/SupportsService.html":{}}}],["create(createtopicdto",{"_index":1446,"title":{},"body":{"controllers/TopicsController.html":{},"injectables/TopicsService.html":{}}}],["create(createuserdto",{"_index":1563,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create(topics",{"_index":975,"title":{},"body":{"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{}}}],["create(topics,replies",{"_index":983,"title":{},"body":{"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{}}}],["create:seeds",{"_index":157,"title":{},"body":{"injectables/AppSeed.html":{}}}],["createcategorydto",{"_index":280,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createdat",{"_index":540,"title":{},"body":{"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateTopicDto.html":{},"classes/Rejoinder.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"classes/Reply.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["createdcategory",{"_index":437,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["createdcategory.save()).tojson().id",{"_index":440,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["createdevent",{"_index":711,"title":{},"body":{"injectables/EventsService.html":{}}}],["createdevent.save()).tojson().id",{"_index":713,"title":{},"body":{"injectables/EventsService.html":{}}}],["createdlike",{"_index":1000,"title":{},"body":{"injectables/LikesService.html":{}}}],["createdlike.save()).tojson().id",{"_index":1002,"title":{},"body":{"injectables/LikesService.html":{}}}],["createdpin",{"_index":1186,"title":{},"body":{"injectables/PinsService.html":{}}}],["createdpin.save()).tojson",{"_index":1188,"title":{},"body":{"injectables/PinsService.html":{}}}],["createdrejoinder",{"_index":1272,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["createdrejoinder.save()).tojson().id",{"_index":1274,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["createdreply",{"_index":1333,"title":{},"body":{"injectables/RepliesService.html":{}}}],["createdreply.save()).tojson().id",{"_index":1335,"title":{},"body":{"injectables/RepliesService.html":{}}}],["createdsupport",{"_index":1419,"title":{},"body":{"injectables/SupportsService.html":{}}}],["createdsupport.save",{"_index":1421,"title":{},"body":{"injectables/SupportsService.html":{}}}],["createdtopic",{"_index":1507,"title":{},"body":{"injectables/TopicsService.html":{}}}],["createdtopic.save()).tojson().id",{"_index":1509,"title":{},"body":{"injectables/TopicsService.html":{}}}],["createduser",{"_index":1635,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save()).tojson().id",{"_index":1637,"title":{},"body":{"injectables/UsersService.html":{}}}],["createeventdto",{"_index":466,"title":{"classes/CreateEventDto.html":{}},"body":{"classes/CreateEventDto.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["createfiledto",{"_index":500,"title":{"classes/CreateFileDto.html":{}},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["createlikedto",{"_index":503,"title":{"classes/CreateLikeDto.html":{}},"body":{"classes/CreateLikeDto.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"classes/UpdateLikeDto.html":{},"coverage.html":{}}}],["createlocationdto",{"_index":599,"title":{"classes/CreatelocationDto.html":{}},"body":{"classes/CreatelocationDto.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"coverage.html":{}}}],["createmulteroptions",{"_index":892,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["createpindto",{"_index":511,"title":{"classes/CreatePinDto.html":{}},"body":{"classes/CreatePinDto.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"classes/UpdatePinDto.html":{},"coverage.html":{}}}],["createpindto.zipcode",{"_index":1184,"title":{},"body":{"injectables/PinsService.html":{}}}],["createrejoinderdto",{"_index":536,"title":{"classes/CreateRejoinderDto.html":{}},"body":{"classes/CreateRejoinderDto.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"classes/UpdateRejoinderDto.html":{},"coverage.html":{}}}],["createreplydto",{"_index":546,"title":{"classes/CreateReplyDto.html":{}},"body":{"classes/CreateReplyDto.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"classes/UpdateReplyDto.html":{},"coverage.html":{}}}],["createsupportdto",{"_index":555,"title":{"classes/CreateSupportDto.html":{}},"body":{"classes/CreateSupportDto.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"classes/UpdateSupportDto.html":{},"coverage.html":{}}}],["createtopicdto",{"_index":563,"title":{"classes/CreateTopicDto.html":{}},"body":{"classes/CreateTopicDto.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"classes/UpdateTopicDto.html":{},"coverage.html":{}}}],["createuserdto",{"_index":581,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto):promise",{"_index":1634,"title":{},"body":{"injectables/UsersService.html":{}}}],["cultura",{"_index":378,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["culturais",{"_index":407,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["cultural",{"_index":372,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["d",{"_index":336,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["d390a2",{"_index":386,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["da",{"_index":1483,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["dance",{"_index":1473,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["dança",{"_index":334,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":806,"title":{},"body":{"controllers/FilesController.html":{},"injectables/PinsService.html":{}}}],["data')@apibody({description",{"_index":770,"title":{},"body":{"controllers/FilesController.html":{}}}],["data).topromise",{"_index":1196,"title":{},"body":{"injectables/PinsService.html":{}}}],["date",{"_index":471,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateTopicDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Rejoinder.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"classes/Reply.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["db",{"_index":178,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.dropcollection('categories",{"_index":186,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.dropcollection('events",{"_index":193,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.dropcollection('likes",{"_index":201,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.dropcollection('pins",{"_index":191,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.dropcollection('rejoinders",{"_index":203,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.dropcollection('replies",{"_index":199,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.dropcollection('supports",{"_index":197,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.dropcollection('topics",{"_index":195,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.dropcollection('users",{"_index":189,"title":{},"body":{"injectables/AppSeed.html":{}}}],["db.listcollections().toarray",{"_index":181,"title":{},"body":{"injectables/AppSeed.html":{}}}],["de",{"_index":1152,"title":{},"body":{"injectables/PinsSeed.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"controllers/CategoriesController.html":{},"classes/Category.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"classes/Reply.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["decoração",{"_index":1151,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["default",{"_index":204,"title":{},"body":{"injectables/AppSeed.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":309,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":647,"title":{},"body":{"controllers/EventsController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["deleted",{"_index":844,"title":{},"body":{"controllers/FilesController.html":{}}}],["deletefile",{"_index":746,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["deletefile(@param('id",{"_index":840,"title":{},"body":{"controllers/FilesController.html":{}}}],["deletefile(id",{"_index":753,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["deletion",{"_index":843,"title":{},"body":{"controllers/FilesController.html":{}}}],["dependencies",{"_index":65,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describe",{"_index":158,"title":{},"body":{"injectables/AppSeed.html":{}}}],["description",{"_index":472,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"controllers/FilesController.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":686,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["design",{"_index":361,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["destaque",{"_index":1145,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["detected",{"_index":830,"title":{},"body":{"controllers/FilesController.html":{}}}],["development",{"_index":1737,"title":{},"body":{"index.html":{}}}],["df694a",{"_index":335,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["digital",{"_index":322,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["disposition",{"_index":837,"title":{},"body":{"controllers/FilesController.html":{}}}],["doc",{"_index":304,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["docs",{"_index":817,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/enumerations.html":{}}}],["docs'})@useinterceptors(undefined",{"_index":777,"title":{},"body":{"controllers/FilesController.html":{}}}],["document",{"_index":456,"title":{},"body":{"classes/Category.html":{},"classes/Event.html":{},"classes/Like.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{}}}],["documentation",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["downloadfile",{"_index":747,"title":{},"body":{"controllers/FilesController.html":{}}}],["downloadfile(@param('id",{"_index":836,"title":{},"body":{"controllers/FilesController.html":{}}}],["downloadfile(id",{"_index":757,"title":{},"body":{"controllers/FilesController.html":{}}}],["dto/create",{"_index":285,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":658,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["during",{"_index":842,"title":{},"body":{"controllers/FilesController.html":{}}}],["e",{"_index":321,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["e0bc68",{"_index":341,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":1748,"title":{},"body":{"index.html":{}}}],["ede",{"_index":1487,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["education",{"_index":586,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["efbc5e",{"_index":347,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":1725,"title":{},"body":{"index.html":{}}}],["email",{"_index":514,"title":{},"body":{"classes/CreatePinDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["enable",{"_index":1038,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["entre",{"_index":1607,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":1709,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":1703,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["env.development.local",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["env.local",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["err",{"_index":878,"title":{},"body":{"injectables/FilesService.html":{},"injectables/PinsService.html":{}}}],["error",{"_index":422,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"controllers/FilesController.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["escultura",{"_index":329,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["espaços",{"_index":406,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["estilo",{"_index":1153,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["event",{"_index":610,"title":{"classes/Event.html":{}},"body":{"classes/Event.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["event.dto",{"_index":657,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{}}}],["event.dto.ts",{"_index":468,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["event.dto.ts:10",{"_index":499,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:11",{"_index":492,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:12",{"_index":494,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:13",{"_index":487,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:14",{"_index":488,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:15",{"_index":490,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:16",{"_index":498,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:17",{"_index":496,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:2",{"_index":484,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:3",{"_index":497,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:4",{"_index":489,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:5",{"_index":495,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:6",{"_index":486,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:7",{"_index":493,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:8",{"_index":491,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.dto.ts:9",{"_index":485,"title":{},"body":{"classes/CreateEventDto.html":{}}}],["event.name",{"_index":674,"title":{},"body":{"modules/EventsModule.html":{}}}],["eventdocument",{"_index":631,"title":{},"body":{"classes/Event.html":{},"injectables/EventsService.html":{},"miscellaneous/typealiases.html":{}}}],["eventmodel",{"_index":704,"title":{},"body":{"injectables/EventsService.html":{}}}],["events",{"_index":192,"title":{},"body":{"injectables/AppSeed.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["events(categories",{"_index":698,"title":{},"body":{"injectables/EventsSeed.html":{}}}],["events.controller",{"_index":672,"title":{},"body":{"modules/EventsModule.html":{}}}],["events.map((event",{"_index":692,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["events.service",{"_index":656,"title":{},"body":{"controllers/EventsController.html":{},"modules/EventsModule.html":{}}}],["events/events.module",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedsModule.html":{}}}],["events/events.service",{"_index":681,"title":{},"body":{"injectables/EventsSeed.html":{}}}],["eventschema",{"_index":635,"title":{},"body":{"classes/Event.html":{},"modules/EventsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eventschema.set('tojson",{"_index":675,"title":{},"body":{"modules/EventsModule.html":{}}}],["eventscontroller",{"_index":637,"title":{"controllers/EventsController.html":{}},"body":{"controllers/EventsController.html":{},"modules/EventsModule.html":{},"coverage.html":{}}}],["eventsmodule",{"_index":77,"title":{"modules/EventsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/EventsModule.html":{},"modules/SeedsModule.html":{},"modules.html":{},"overview.html":{}}}],["eventsseed",{"_index":148,"title":{"injectables/EventsSeed.html":{}},"body":{"injectables/AppSeed.html":{},"injectables/EventsSeed.html":{},"modules/SeedsModule.html":{},"coverage.html":{},"overview.html":{}}}],["eventsservice",{"_index":655,"title":{"injectables/EventsService.html":{}},"body":{"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"coverage.html":{},"overview.html":{}}}],["example",{"_index":1023,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["exec",{"_index":444,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/EventsService.html":{},"injectables/LikesService.html":{},"injectables/PinsService.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesService.html":{},"injectables/SupportsService.html":{},"injectables/TopicsService.html":{},"injectables/UsersService.html":{}}}],["expiresin",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["exports:[rejoindersservice",{"_index":1243,"title":{},"body":{"modules/RejoindersModule.html":{}}}],["expose",{"_index":736,"title":{},"body":{"classes/FileInfoVm.html":{}}}],["express",{"_index":794,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/GridFsMulterConfigService.html":{},"dependencies.html":{}}}],["extends",{"_index":910,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{}}}],["extname",{"_index":1035,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["extname(file.originalname",{"_index":1048,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["extractjwt",{"_index":918,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":926,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f",{"_index":353,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["facebook",{"_index":473,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":928,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/MulterUtils.html":{},"injectables/SupportsSeed.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["fest",{"_index":1474,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{"classes/File.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["file.contenttype",{"_index":833,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.dto",{"_index":1527,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["file.dto.ts",{"_index":502,"title":{},"body":{"classes/CreateFileDto.html":{},"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["file.filename",{"_index":838,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.id",{"_index":811,"title":{},"body":{"controllers/FilesController.html":{}}}],["file.mimetype.match(`/(${filesallowed",{"_index":1044,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["file.originalname.trim",{"_index":904,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["filefilter",{"_index":1032,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["fileinfo",{"_index":905,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["fileinfovm",{"_index":720,"title":{"classes/FileInfoVm.html":{}},"body":{"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"injectables/FilesService.html":{},"coverage.html":{}}}],["filemodel",{"_index":855,"title":{},"body":{"injectables/FilesService.html":{}}}],["filename",{"_index":725,"title":{},"body":{"classes/FileInfoVm.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{}}}],["fileresponsevm",{"_index":738,"title":{"classes/FileResponseVm.html":{}},"body":{"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"coverage.html":{}}}],["files",{"_index":774,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterUtils.html":{}}}],["files'})@useinterceptors(undefined",{"_index":772,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.controller",{"_index":849,"title":{},"body":{"modules/FilesModule.html":{}}}],["files.map(file",{"_index":810,"title":{},"body":{"controllers/FilesController.html":{}}}],["files.service",{"_index":796,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{}}}],["files/files.module",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["filesallowed",{"_index":1029,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["filescontroller",{"_index":743,"title":{"controllers/FilesController.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["filesinterceptor",{"_index":792,"title":{},"body":{"controllers/FilesController.html":{}}}],["filesize",{"_index":1031,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["filesmodule",{"_index":78,"title":{"modules/FilesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filesservice",{"_index":795,"title":{"injectables/FilesService.html":{}},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"coverage.html":{},"overview.html":{}}}],["filestream",{"_index":823,"title":{},"body":{"controllers/FilesController.html":{}}}],["filestream.pipe(res",{"_index":834,"title":{},"body":{"controllers/FilesController.html":{}}}],["finbytopicid",{"_index":988,"title":{},"body":{"injectables/LikesService.html":{}}}],["finbytopicid(id",{"_index":993,"title":{},"body":{"injectables/LikesService.html":{}}}],["findall",{"_index":278,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findbyemail",{"_index":1621,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyemail(email",{"_index":1627,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(id).catch",{"_index":877,"title":{},"body":{"injectables/FilesService.html":{}}}],["findbytopicid",{"_index":942,"title":{},"body":{"controllers/LikesController.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{}}}],["findbytopicid(@param('id",{"_index":960,"title":{},"body":{"controllers/LikesController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{}}}],["findbytopicid(id",{"_index":946,"title":{},"body":{"controllers/LikesController.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{}}}],["findinfo",{"_index":856,"title":{},"body":{"injectables/FilesService.html":{}}}],["findinfo(id",{"_index":862,"title":{},"body":{"injectables/FilesService.html":{}}}],["findone",{"_index":639,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":662,"title":{},"body":{"controllers/EventsController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["findone(id",{"_index":644,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["fino",{"_index":1143,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["firstname",{"_index":587,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["fogueira",{"_index":1476,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["folclore",{"_index":380,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["fotografia",{"_index":351,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":880,"title":{},"body":{"injectables/FilesService.html":{}}}],["framework",{"_index":1723,"title":{},"body":{"index.html":{}}}],["fs",{"_index":875,"title":{},"body":{"injectables/FilesService.html":{}}}],["fs.files",{"_index":634,"title":{},"body":{"classes/Event.html":{},"classes/Pin.html":{},"classes/User.html":{}}}],["function",{"_index":303,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":1716,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":387,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["galeto",{"_index":1147,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["gastronomia",{"_index":385,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["gender",{"_index":588,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["gestores",{"_index":399,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":645,"title":{},"body":{"controllers/EventsController.html":{},"controllers/FilesController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@apibadrequestresponse({type",{"_index":763,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('delete/:id",{"_index":839,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('delete/:id')@apibadrequestresponse({type",{"_index":754,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('download/:id",{"_index":835,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('download/:id')@apibadrequestresponse({type",{"_index":759,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('info/:id",{"_index":820,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('info/:id')@apibadrequestresponse({type",{"_index":766,"title":{},"body":{"controllers/FilesController.html":{}}}],["get('location",{"_index":1081,"title":{},"body":{"controllers/PinsController.html":{}}}],["get('profile",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["get('topic/:id",{"_index":947,"title":{},"body":{"controllers/LikesController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{}}}],["get('topics/:id",{"_index":1372,"title":{},"body":{"controllers/SupportsController.html":{}}}],["getconfig",{"_index":1024,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["getconfig(filesallowed",{"_index":1025,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["getfile",{"_index":748,"title":{},"body":{"controllers/FilesController.html":{}}}],["getfile(@param('id",{"_index":831,"title":{},"body":{"controllers/FilesController.html":{}}}],["getfile(id",{"_index":762,"title":{},"body":{"controllers/FilesController.html":{}}}],["getfileinfo",{"_index":749,"title":{},"body":{"controllers/FilesController.html":{}}}],["getfileinfo(@param('id",{"_index":821,"title":{},"body":{"controllers/FilesController.html":{}}}],["getfileinfo(id",{"_index":765,"title":{},"body":{"controllers/FilesController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getlocation",{"_index":1075,"title":{},"body":{"controllers/PinsController.html":{},"injectables/PinsService.html":{}}}],["getlocation(@body",{"_index":1093,"title":{},"body":{"controllers/PinsController.html":{}}}],["getlocation(createlocationdto",{"_index":1080,"title":{},"body":{"controllers/PinsController.html":{},"injectables/PinsService.html":{}}}],["getprofile",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":1719,"title":{"index.html":{}},"body":{}}],["grande",{"_index":1180,"title":{},"body":{"injectables/PinsService.html":{}}}],["graph",{"_index":1776,"title":{},"body":{"modules.html":{}}}],["gridfs",{"_index":869,"title":{},"body":{"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"dependencies.html":{}}}],["gridfsbucketreadstream",{"_index":870,"title":{},"body":{"injectables/FilesService.html":{}}}],["gridfsmulterconfigservice",{"_index":847,"title":{"injectables/GridFsMulterConfigService.html":{}},"body":{"modules/FilesModule.html":{},"injectables/GridFsMulterConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["gridfsstorage",{"_index":891,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["grosso",{"_index":1182,"title":{},"body":{"injectables/PinsService.html":{}}}],["grow",{"_index":1755,"title":{},"body":{"index.html":{}}}],["hashedpassword",{"_index":1590,"title":{},"body":{"modules/UsersModule.html":{}}}],["hello",{"_index":223,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":1763,"title":{},"body":{"index.html":{}}}],["httpexception",{"_index":785,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/MulterUtils.html":{}}}],["httpexception('an",{"_index":826,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpexception('file",{"_index":879,"title":{},"body":{"injectables/FilesService.html":{}}}],["httpexception(`unsupported",{"_index":1047,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["httpmodule",{"_index":1102,"title":{},"body":{"modules/PinsModule.html":{}}}],["https://nestjs.com",{"_index":1770,"title":{},"body":{"index.html":{}}}],["https://twitter.com",{"_index":1131,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["https://us1.locationiq.com/v1/search.php?key=${this.configservice.get('privatetoken')}&format=json",{"_index":1194,"title":{},"body":{"injectables/PinsService.html":{}}}],["https://whatsapp.com",{"_index":1132,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["https://www.facebook.com",{"_index":687,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["https://www.facebook.com/brava3100",{"_index":1129,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["https://www.facebook.com/casacolonialcg",{"_index":1156,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["https://www.instagram.com",{"_index":688,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["https://www.instagram.com/brava3100",{"_index":1130,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["https://www.instagram.com/casacolonialcg",{"_index":1157,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["https://www.twitter.com",{"_index":690,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["https://www.whatsapp.com",{"_index":689,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["httpservice",{"_index":1167,"title":{},"body":{"injectables/PinsService.html":{}}}],["httpstatus",{"_index":786,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/MulterUtils.html":{},"miscellaneous/variables.html":{}}}],["httpstatus.bad_request",{"_index":1049,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["httpstatus.expectation_failed",{"_index":829,"title":{},"body":{"controllers/FilesController.html":{}}}],["httpstatus.not_found",{"_index":881,"title":{},"body":{"injectables/FilesService.html":{}}}],["icon",{"_index":327,"title":{},"body":{"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":1644,"title":{},"body":{"coverage.html":{}}}],["if(status",{"_index":1515,"title":{},"body":{"injectables/TopicsService.html":{}}}],["ignoreexpiration",{"_index":927,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["imageids",{"_index":474,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["images",{"_index":813,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/enumerations.html":{}}}],["images'})@useinterceptors(undefined",{"_index":781,"title":{},"body":{"controllers/FilesController.html":{}}}],["implements",{"_index":898,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["import",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{}}}],["impressos",{"_index":1488,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["incrementnumberofsupports",{"_index":1494,"title":{},"body":{"injectables/TopicsService.html":{}}}],["incrementnumberofsupports(id",{"_index":1501,"title":{},"body":{"injectables/TopicsService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indígena",{"_index":395,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["indústria",{"_index":1484,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["inject",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["injectable",{"_index":138,"title":{"injectables/AppSeed.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppSeed.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":140,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectconnection",{"_index":867,"title":{},"body":{"injectables/FilesService.html":{}}}],["injectmodel",{"_index":434,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/EventsService.html":{},"injectables/LikesService.html":{},"injectables/PinsService.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesService.html":{},"injectables/SupportsService.html":{},"injectables/TopicsService.html":{},"injectables/UsersService.html":{}}}],["injectmodel(event.name",{"_index":710,"title":{},"body":{"injectables/EventsService.html":{}}}],["injectmodel(like.name",{"_index":999,"title":{},"body":{"injectables/LikesService.html":{}}}],["injectmodel(pin.name",{"_index":1178,"title":{},"body":{"injectables/PinsService.html":{}}}],["injectmodel(rejoinder.name",{"_index":1271,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["injectmodel(reply.name",{"_index":1332,"title":{},"body":{"injectables/RepliesService.html":{}}}],["injectmodel(support.name",{"_index":1418,"title":{},"body":{"injectables/SupportsService.html":{}}}],["injectmodel(topic.name",{"_index":1506,"title":{},"body":{"injectables/TopicsService.html":{}}}],["instagram",{"_index":475,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["installation",{"_index":1734,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1736,"title":{},"body":{"index.html":{}}}],["ipsum",{"_index":1478,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["isadmin",{"_index":1546,"title":{},"body":{"classes/User.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["isglobal",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["joe",{"_index":1613,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["joe@mail.com",{"_index":1615,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["jpg|jpeg|png|gif",{"_index":1714,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["jpg|jpeg|png|gif|pdf|docx|doc|xlsx|xls",{"_index":1713,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["jwt",{"_index":921,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":40,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":925,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":249,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":229,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":1767,"title":{},"body":{"index.html":{}}}],["l",{"_index":358,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["la",{"_index":1141,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":316,"title":{},"body":{"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"miscellaneous/variables.html":{}}}],["lastname",{"_index":589,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["lat",{"_index":515,"title":{},"body":{"classes/CreatePinDto.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["length",{"_index":726,"title":{},"body":{"classes/FileInfoVm.html":{},"injectables/FilesService.html":{}}}],["license",{"_index":1772,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":1752,"title":{},"body":{"index.html":{}}}],["like.dto",{"_index":955,"title":{},"body":{"controllers/LikesController.html":{},"injectables/LikesService.html":{},"classes/UpdateLikeDto.html":{}}}],["like.dto.ts",{"_index":505,"title":{},"body":{"classes/CreateLikeDto.html":{},"classes/UpdateLikeDto.html":{},"coverage.html":{}}}],["like.dto.ts:2",{"_index":510,"title":{},"body":{"classes/CreateLikeDto.html":{}}}],["like.dto.ts:3",{"_index":509,"title":{},"body":{"classes/CreateLikeDto.html":{}}}],["like.dto.ts:4",{"_index":508,"title":{},"body":{"classes/CreateLikeDto.html":{}}}],["like.name",{"_index":970,"title":{},"body":{"modules/LikesModule.html":{}}}],["likedocument",{"_index":937,"title":{},"body":{"classes/Like.html":{},"injectables/LikesService.html":{},"miscellaneous/typealiases.html":{}}}],["likemodel",{"_index":991,"title":{},"body":{"injectables/LikesService.html":{}}}],["likes",{"_index":200,"title":{},"body":{"injectables/AppSeed.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["likes(topics",{"_index":984,"title":{},"body":{"injectables/LikesSeed.html":{}}}],["likes.controller",{"_index":968,"title":{},"body":{"modules/LikesModule.html":{}}}],["likes.map((like",{"_index":978,"title":{},"body":{"injectables/LikesSeed.html":{},"miscellaneous/variables.html":{}}}],["likes.service",{"_index":954,"title":{},"body":{"controllers/LikesController.html":{},"modules/LikesModule.html":{}}}],["likes/likes.module",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["likes/likes.service",{"_index":977,"title":{},"body":{"injectables/LikesSeed.html":{}}}],["likeschema",{"_index":938,"title":{},"body":{"classes/Like.html":{},"modules/LikesModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["likeschema.set('tojson",{"_index":971,"title":{},"body":{"modules/LikesModule.html":{}}}],["likescontroller",{"_index":940,"title":{"controllers/LikesController.html":{}},"body":{"controllers/LikesController.html":{},"modules/LikesModule.html":{},"coverage.html":{}}}],["likesmodule",{"_index":79,"title":{"modules/LikesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LikesModule.html":{},"modules/SeedsModule.html":{},"modules.html":{},"overview.html":{}}}],["likesseed",{"_index":152,"title":{"injectables/LikesSeed.html":{}},"body":{"injectables/AppSeed.html":{},"injectables/LikesSeed.html":{},"modules/SeedsModule.html":{},"coverage.html":{},"overview.html":{}}}],["likesservice",{"_index":953,"title":{"injectables/LikesService.html":{}},"body":{"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"coverage.html":{},"overview.html":{}}}],["limits",{"_index":1030,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["literatura",{"_index":356,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":1016,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":37,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":230,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["location.dto",{"_index":1089,"title":{},"body":{"controllers/PinsController.html":{},"injectables/PinsService.html":{}}}],["location.dto.ts",{"_index":600,"title":{},"body":{"classes/CreatelocationDto.html":{},"coverage.html":{}}}],["location.dto.ts:2",{"_index":609,"title":{},"body":{"classes/CreatelocationDto.html":{}}}],["location.dto.ts:3",{"_index":605,"title":{},"body":{"classes/CreatelocationDto.html":{}}}],["location.dto.ts:4",{"_index":604,"title":{},"body":{"classes/CreatelocationDto.html":{}}}],["location.dto.ts:5",{"_index":608,"title":{},"body":{"classes/CreatelocationDto.html":{}}}],["location.dto.ts:6",{"_index":606,"title":{},"body":{"classes/CreatelocationDto.html":{}}}],["location.dto.ts:7",{"_index":607,"title":{},"body":{"classes/CreatelocationDto.html":{}}}],["login",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuserdto",{"_index":255,"title":{"classes/LoginUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["long",{"_index":516,"title":{},"body":{"classes/CreatePinDto.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"miscellaneous/variables.html":{}}}],["lopes",{"_index":1614,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["lorem",{"_index":1477,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":368,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["magnam",{"_index":1257,"title":{},"body":{"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"miscellaneous/variables.html":{}}}],["maintained",{"_index":206,"title":{},"body":{"injectables/AppSeed.html":{}}}],["mais",{"_index":1123,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["manage",{"_index":1710,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["map((event",{"_index":699,"title":{},"body":{"injectables/EventsSeed.html":{}}}],["map((like",{"_index":985,"title":{},"body":{"injectables/LikesSeed.html":{}}}],["map((pin",{"_index":1161,"title":{},"body":{"injectables/PinsSeed.html":{}}}],["map((rejoinder",{"_index":1259,"title":{},"body":{"injectables/RejoindersSeed.html":{}}}],["map((reply",{"_index":1319,"title":{},"body":{"injectables/RepliesSeed.html":{}}}],["map((response",{"_index":418,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{}}}],["map((support",{"_index":1406,"title":{},"body":{"injectables/SupportsSeed.html":{}}}],["map((topic",{"_index":1491,"title":{},"body":{"injectables/TopicsSeed.html":{}}}],["map((user",{"_index":1618,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["masculino",{"_index":1606,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["matching",{"_index":60,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mato",{"_index":1181,"title":{},"body":{"injectables/PinsService.html":{}}}],["md5",{"_index":727,"title":{},"body":{"classes/FileInfoVm.html":{},"injectables/FilesService.html":{}}}],["melo",{"_index":1603,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["memberof",{"_index":1037,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["message",{"_index":739,"title":{},"body":{"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":1691,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["mimetypes",{"_index":1042,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["minima",{"_index":1251,"title":{},"body":{"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":1702,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1751,"title":{},"body":{"index.html":{}}}],["moda",{"_index":362,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":1741,"title":{},"body":{"index.html":{}}}],["model",{"_index":427,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/EventsService.html":{},"injectables/LikesService.html":{},"injectables/PinsService.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesService.html":{},"injectables/SupportsService.html":{},"injectables/TopicsService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":62,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CaslModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongo",{"_index":868,"title":{},"body":{"injectables/FilesService.html":{},"dependencies.html":{}}}],["mongodb",{"_index":871,"title":{},"body":{"injectables/FilesService.html":{}}}],["mongogridfs",{"_index":866,"title":{},"body":{"injectables/FilesService.html":{}}}],["mongogridfs(this.connection.db",{"_index":874,"title":{},"body":{"injectables/FilesService.html":{}}}],["mongoose",{"_index":168,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Event.html":{},"injectables/EventsService.html":{},"injectables/FilesService.html":{},"classes/Like.html":{},"injectables/LikesService.html":{},"classes/Pin.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"classes/Support.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"injectables/TopicsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.connect(this.configservice.get('mongourl",{"_index":176,"title":{},"body":{"injectables/AppSeed.html":{}}}],["mongoose.connection.close",{"_index":207,"title":{},"body":{"injectables/AppSeed.html":{}}}],["mongoose.connection.db",{"_index":179,"title":{},"body":{"injectables/AppSeed.html":{}}}],["mongoose.schema.types.objectid",{"_index":633,"title":{},"body":{"classes/Event.html":{},"classes/Like.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{}}}],["mongoosemodule",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeatureasync",{"_index":299,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forrootasync",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1762,"title":{},"body":{"index.html":{}}}],["muito",{"_index":1122,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["multer",{"_index":798,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/MulterUtils.html":{},"dependencies.html":{}}}],["multermodule",{"_index":850,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermodule.registerasync",{"_index":852,"title":{},"body":{"modules/FilesModule.html":{}}}],["multermoduleoptions",{"_index":895,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["multeroptionsfactory",{"_index":896,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["multerutils",{"_index":797,"title":{"injectables/MulterUtils.html":{}},"body":{"controllers/FilesController.html":{},"injectables/MulterUtils.html":{},"coverage.html":{}}}],["multerutils.getconfig(uploadtypesenum.any",{"_index":808,"title":{},"body":{"controllers/FilesController.html":{}}}],["multerutils.getconfig(uploadtypesenum.docs",{"_index":818,"title":{},"body":{"controllers/FilesController.html":{}}}],["multerutils.getconfig(uploadtypesenum.images",{"_index":814,"title":{},"body":{"controllers/FilesController.html":{}}}],["museologia",{"_index":373,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["myśliwiec",{"_index":1768,"title":{},"body":{"index.html":{}}}],["música",{"_index":366,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["negativesupports",{"_index":567,"title":{},"body":{"classes/CreateTopicDto.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"miscellaneous/variables.html":{}}}],["neighborhood",{"_index":476,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":1730,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":1771,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":164,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"modules/SeedsModule.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSeed.html":{},"modules/AuthModule.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/PinsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1671,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1525,"title":{},"body":{"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/Event.html":{},"modules/EventsModule.html":{},"injectables/EventsService.html":{},"injectables/FilesService.html":{},"classes/Like.html":{},"modules/LikesModule.html":{},"injectables/LikesService.html":{},"classes/Pin.html":{},"modules/PinsModule.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersService.html":{},"modules/RepliesModule.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"classes/Support.html":{},"modules/SupportsModule.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"modules/TopicsModule.html":{},"injectables/TopicsService.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":793,"title":{},"body":{"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/GridFsMulterConfigService.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":735,"title":{},"body":{"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"dependencies.html":{}}}],["new",{"_index":438,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/PinsService.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"injectables/SupportsService.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":1588,"title":{},"body":{"modules/UsersModule.html":{}}}],["node.js",{"_index":1722,"title":{},"body":{"index.html":{}}}],["node:url",{"_index":1177,"title":{},"body":{"injectables/PinsService.html":{}}}],["npm",{"_index":1735,"title":{},"body":{"index.html":{}}}],["null",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":452,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/FileInfoVm.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Reply.html":{},"classes/Topic.html":{},"miscellaneous/variables.html":{}}}],["number.tostring",{"_index":1191,"title":{},"body":{"injectables/PinsService.html":{}}}],["numberoflikes",{"_index":549,"title":{},"body":{"classes/CreateReplyDto.html":{},"injectables/RepliesSeed.html":{},"classes/Reply.html":{},"miscellaneous/variables.html":{}}}],["numberofreplies",{"_index":568,"title":{},"body":{"classes/CreateTopicDto.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["occurred",{"_index":827,"title":{},"body":{"controllers/FilesController.html":{}}}],["open",{"_index":1753,"title":{},"body":{"index.html":{}}}],["optional",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":306,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":1778,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":375,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":1666,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":654,"title":{},"body":{"controllers/EventsController.html":{},"controllers/FilesController.html":{},"controllers/LikesController.html":{},"injectables/MulterUtils.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["params",{"_index":1192,"title":{},"body":{"injectables/PinsService.html":{}}}],["parse",{"_index":1176,"title":{},"body":{"injectables/PinsService.html":{}}}],["parsefloat(res.data[0].lat",{"_index":1198,"title":{},"body":{"injectables/PinsService.html":{}}}],["parsefloat(res.data[0].lon",{"_index":1199,"title":{},"body":{"injectables/PinsService.html":{}}}],["partialtype",{"_index":1521,"title":{},"body":{"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createeventdto",{"_index":1522,"title":{},"body":{"classes/UpdateEventDto.html":{}}}],["partialtype(createfiledto",{"_index":1528,"title":{},"body":{"classes/UpdateFileDto.html":{}}}],["partialtype(createlikedto",{"_index":1530,"title":{},"body":{"classes/UpdateLikeDto.html":{}}}],["partialtype(createpindto",{"_index":1532,"title":{},"body":{"classes/UpdatePinDto.html":{}}}],["partialtype(createrejoinderdto",{"_index":1534,"title":{},"body":{"classes/UpdateRejoinderDto.html":{}}}],["partialtype(createreplydto",{"_index":1536,"title":{},"body":{"classes/UpdateReplyDto.html":{}}}],["partialtype(createsupportdto",{"_index":1538,"title":{},"body":{"classes/UpdateSupportDto.html":{}}}],["partialtype(createtopicdto",{"_index":1540,"title":{},"body":{"classes/UpdateTopicDto.html":{}}}],["partialtype(createuserdto",{"_index":1543,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":920,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":922,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":923,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":653,"title":{},"body":{"controllers/EventsController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["patch(':id",{"_index":651,"title":{},"body":{"controllers/EventsController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["path",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"injectables/MulterUtils.html":{}}}],["patrimônio",{"_index":371,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["payload",{"_index":917,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":930,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pdf|docx|doc|xlsx|xls",{"_index":1715,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["pena",{"_index":1138,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["phone",{"_index":517,"title":{},"body":{"classes/CreatePinDto.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["pin",{"_index":1050,"title":{"classes/Pin.html":{}},"body":{"classes/Pin.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pin.dto",{"_index":1088,"title":{},"body":{"controllers/PinsController.html":{},"injectables/PinsService.html":{},"classes/UpdatePinDto.html":{}}}],["pin.dto.ts",{"_index":513,"title":{},"body":{"classes/CreatePinDto.html":{},"classes/UpdatePinDto.html":{},"coverage.html":{}}}],["pin.dto.ts:10",{"_index":527,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:11",{"_index":519,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:12",{"_index":535,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:13",{"_index":520,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:14",{"_index":525,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:15",{"_index":526,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:16",{"_index":522,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:17",{"_index":524,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:18",{"_index":532,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:19",{"_index":534,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:2",{"_index":518,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:3",{"_index":533,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:4",{"_index":523,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:5",{"_index":531,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:6",{"_index":521,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:7",{"_index":529,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:8",{"_index":530,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.dto.ts:9",{"_index":528,"title":{},"body":{"classes/CreatePinDto.html":{}}}],["pin.name",{"_index":1105,"title":{},"body":{"modules/PinsModule.html":{}}}],["pindocument",{"_index":1070,"title":{},"body":{"classes/Pin.html":{},"injectables/PinsService.html":{},"miscellaneous/typealiases.html":{}}}],["pinmodel",{"_index":1169,"title":{},"body":{"injectables/PinsService.html":{}}}],["pins",{"_index":190,"title":{},"body":{"injectables/AppSeed.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pins(categories",{"_index":1160,"title":{},"body":{"injectables/PinsSeed.html":{}}}],["pins.controller",{"_index":1103,"title":{},"body":{"modules/PinsModule.html":{}}}],["pins.map((pin",{"_index":1158,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["pins.service",{"_index":1087,"title":{},"body":{"controllers/PinsController.html":{},"modules/PinsModule.html":{}}}],["pins/pins.module",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"modules/SeedsModule.html":{}}}],["pins/pins.service",{"_index":1111,"title":{},"body":{"injectables/PinsSeed.html":{}}}],["pinschema",{"_index":1071,"title":{},"body":{"classes/Pin.html":{},"modules/PinsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pinschema.set('tojson",{"_index":1106,"title":{},"body":{"modules/PinsModule.html":{}}}],["pinscontroller",{"_index":1073,"title":{"controllers/PinsController.html":{}},"body":{"controllers/PinsController.html":{},"modules/PinsModule.html":{},"coverage.html":{}}}],["pinsmodule",{"_index":80,"title":{"modules/PinsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PinsModule.html":{},"modules/SeedsModule.html":{},"modules.html":{},"overview.html":{}}}],["pinsseed",{"_index":147,"title":{"injectables/PinsSeed.html":{}},"body":{"injectables/AppSeed.html":{},"injectables/PinsSeed.html":{},"modules/SeedsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pinsservice",{"_index":1086,"title":{"injectables/PinsService.html":{}},"body":{"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"coverage.html":{},"overview.html":{}}}],["plainpassword",{"_index":1594,"title":{},"body":{"modules/UsersModule.html":{}}}],["please",{"_index":1761,"title":{},"body":{"index.html":{}}}],["popular",{"_index":379,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["positivesupports",{"_index":569,"title":{},"body":{"classes/CreateTopicDto.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/EventsController.html":{},"controllers/FilesController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["post('')@apiconsumes('multipart/form",{"_index":769,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('auth/login",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["post('docs",{"_index":816,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('docs')@apiconsumes('multipart/form",{"_index":776,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('images",{"_index":812,"title":{},"body":{"controllers/FilesController.html":{}}}],["post('images')@apiconsumes('multipart/form",{"_index":780,"title":{},"body":{"controllers/FilesController.html":{}}}],["postalcode",{"_index":602,"title":{},"body":{"classes/CreatelocationDto.html":{},"injectables/PinsService.html":{}}}],["postalcode.tostring",{"_index":1193,"title":{},"body":{"injectables/PinsService.html":{}}}],["prefix",{"_index":277,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/EventsController.html":{},"controllers/FilesController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/EventsService.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LikesService.html":{},"injectables/PinsService.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesService.html":{},"injectables/SupportsService.html":{},"injectables/TopicsService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":1743,"title":{},"body":{"index.html":{}}}],["produtor",{"_index":403,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":1721,"title":{},"body":{"index.html":{}}}],["project",{"_index":1754,"title":{},"body":{"index.html":{}}}],["promise",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/PinsService.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesService.html":{},"injectables/SupportsService.html":{},"injectables/TopicsService.html":{},"injectables/UsersService.html":{}}}],["promise((resolve",{"_index":902,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["promise.all(promisearray",{"_index":417,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{}}}],["promisearray",{"_index":413,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{}}}],["prop",{"_index":447,"title":{},"body":{"classes/Category.html":{},"classes/Event.html":{},"classes/Like.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{}}}],["prop({type",{"_index":612,"title":{},"body":{"classes/Event.html":{},"classes/Like.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{}}}],["properties",{"_index":446,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"classes/Like.html":{},"classes/LoginUserDto.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{}}}],["providers",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["pula",{"_index":1475,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["públicos",{"_index":400,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["quas",{"_index":1256,"title":{},"body":{"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"miscellaneous/variables.html":{}}}],["que",{"_index":1124,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":1711,"title":{},"body":{"miscellaneous/enumerations.html":{},"index.html":{}}}],["readonly",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"injectables/FilesService.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{}}}],["readstream",{"_index":857,"title":{},"body":{"injectables/FilesService.html":{}}}],["readstream(id",{"_index":864,"title":{},"body":{"injectables/FilesService.html":{}}}],["ref",{"_index":614,"title":{},"body":{"classes/Event.html":{},"classes/Like.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{}}}],["reflect",{"_index":1690,"title":{},"body":{"dependencies.html":{}}}],["reject",{"_index":903,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{},"injectables/MulterUtils.html":{}}}],["rejoinder",{"_index":1205,"title":{"classes/Rejoinder.html":{}},"body":{"classes/Rejoinder.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersService.html":{},"coverage.html":{}}}],["rejoinder.dto",{"_index":1227,"title":{},"body":{"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"classes/UpdateRejoinderDto.html":{}}}],["rejoinder.dto.ts",{"_index":538,"title":{},"body":{"classes/CreateRejoinderDto.html":{},"classes/UpdateRejoinderDto.html":{},"coverage.html":{}}}],["rejoinder.dto.ts:2",{"_index":545,"title":{},"body":{"classes/CreateRejoinderDto.html":{}}}],["rejoinder.dto.ts:3",{"_index":544,"title":{},"body":{"classes/CreateRejoinderDto.html":{}}}],["rejoinder.dto.ts:4",{"_index":543,"title":{},"body":{"classes/CreateRejoinderDto.html":{}}}],["rejoinder.dto.ts:5",{"_index":541,"title":{},"body":{"classes/CreateRejoinderDto.html":{}}}],["rejoinder.dto.ts:6",{"_index":542,"title":{},"body":{"classes/CreateRejoinderDto.html":{}}}],["rejoinder.name",{"_index":1241,"title":{},"body":{"modules/RejoindersModule.html":{}}}],["rejoinderdocument",{"_index":1212,"title":{},"body":{"classes/Rejoinder.html":{},"injectables/RejoindersService.html":{},"miscellaneous/typealiases.html":{}}}],["rejoindermodel",{"_index":1264,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["rejoinders",{"_index":202,"title":{},"body":{"injectables/AppSeed.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rejoinders(topics",{"_index":1258,"title":{},"body":{"injectables/RejoindersSeed.html":{}}}],["rejoinders.controller",{"_index":1239,"title":{},"body":{"modules/RejoindersModule.html":{}}}],["rejoinders.map((like",{"_index":1249,"title":{},"body":{"injectables/RejoindersSeed.html":{},"miscellaneous/variables.html":{}}}],["rejoinders.service",{"_index":1226,"title":{},"body":{"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{}}}],["rejoinders/rejoinders.module",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["rejoinders/rejoinders.service",{"_index":1248,"title":{},"body":{"injectables/RejoindersSeed.html":{}}}],["rejoinderschema",{"_index":1213,"title":{},"body":{"classes/Rejoinder.html":{},"modules/RejoindersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rejoinderschema.set('tojson",{"_index":1242,"title":{},"body":{"modules/RejoindersModule.html":{}}}],["rejoinderscontroller",{"_index":1215,"title":{"controllers/RejoindersController.html":{}},"body":{"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"coverage.html":{}}}],["rejoindersmodule",{"_index":81,"title":{"modules/RejoindersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RejoindersModule.html":{},"modules/SeedsModule.html":{},"modules.html":{},"overview.html":{}}}],["rejoindersseed",{"_index":153,"title":{"injectables/RejoindersSeed.html":{}},"body":{"injectables/AppSeed.html":{},"injectables/RejoindersSeed.html":{},"modules/SeedsModule.html":{},"coverage.html":{},"overview.html":{}}}],["rejoindersservice",{"_index":1225,"title":{"injectables/RejoindersService.html":{}},"body":{"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"coverage.html":{},"overview.html":{}}}],["remove",{"_index":425,"title":{},"body":{"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":666,"title":{},"body":{"controllers/EventsController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["remove(id",{"_index":432,"title":{},"body":{"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["replies",{"_index":198,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["replies(topics",{"_index":1318,"title":{},"body":{"injectables/RepliesSeed.html":{}}}],["replies.controller",{"_index":1305,"title":{},"body":{"modules/RepliesModule.html":{}}}],["replies.length",{"_index":980,"title":{},"body":{"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{},"miscellaneous/variables.html":{}}}],["replies.map((support",{"_index":1316,"title":{},"body":{"injectables/RepliesSeed.html":{},"miscellaneous/variables.html":{}}}],["replies.service",{"_index":1292,"title":{},"body":{"controllers/RepliesController.html":{},"modules/RepliesModule.html":{}}}],["replies/replies.module",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["replies/replies.service",{"_index":1314,"title":{},"body":{"injectables/RepliesSeed.html":{}}}],["replies[index",{"_index":979,"title":{},"body":{"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{},"miscellaneous/variables.html":{}}}],["repliescontroller",{"_index":1281,"title":{"controllers/RepliesController.html":{}},"body":{"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"coverage.html":{}}}],["repliesid",{"_index":217,"title":{},"body":{"injectables/AppSeed.html":{}}}],["repliesmodule",{"_index":82,"title":{"modules/RepliesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules.html":{},"overview.html":{}}}],["repliesseed",{"_index":151,"title":{"injectables/RepliesSeed.html":{}},"body":{"injectables/AppSeed.html":{},"injectables/RepliesSeed.html":{},"modules/SeedsModule.html":{},"coverage.html":{},"overview.html":{}}}],["repliesservice",{"_index":1291,"title":{"injectables/RepliesService.html":{}},"body":{"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"coverage.html":{},"overview.html":{}}}],["reply",{"_index":932,"title":{"classes/Reply.html":{}},"body":{"classes/Like.html":{},"classes/Rejoinder.html":{},"modules/RepliesModule.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"coverage.html":{}}}],["reply.dto",{"_index":1293,"title":{},"body":{"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"classes/UpdateReplyDto.html":{}}}],["reply.dto.ts",{"_index":548,"title":{},"body":{"classes/CreateReplyDto.html":{},"classes/UpdateReplyDto.html":{},"coverage.html":{}}}],["reply.dto.ts:2",{"_index":554,"title":{},"body":{"classes/CreateReplyDto.html":{}}}],["reply.dto.ts:3",{"_index":553,"title":{},"body":{"classes/CreateReplyDto.html":{}}}],["reply.dto.ts:4",{"_index":550,"title":{},"body":{"classes/CreateReplyDto.html":{}}}],["reply.dto.ts:5",{"_index":552,"title":{},"body":{"classes/CreateReplyDto.html":{}}}],["reply.dto.ts:6",{"_index":551,"title":{},"body":{"classes/CreateReplyDto.html":{}}}],["reply.name",{"_index":1308,"title":{},"body":{"modules/RepliesModule.html":{}}}],["replydocument",{"_index":1331,"title":{},"body":{"injectables/RepliesService.html":{},"classes/Reply.html":{},"miscellaneous/typealiases.html":{}}}],["replyid",{"_index":506,"title":{},"body":{"classes/CreateLikeDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/Like.html":{},"injectables/LikesSeed.html":{},"classes/Rejoinder.html":{},"injectables/RejoindersSeed.html":{},"miscellaneous/variables.html":{}}}],["replymodel",{"_index":1324,"title":{},"body":{"injectables/RepliesService.html":{}}}],["replyschema",{"_index":1306,"title":{},"body":{"modules/RepliesModule.html":{},"classes/Reply.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["replyschema.set('tojson",{"_index":1309,"title":{},"body":{"modules/RepliesModule.html":{}}}],["repository",{"_index":1733,"title":{},"body":{"index.html":{}}}],["req",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/MulterUtils.html":{}}}],["req.user",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":30,"title":{},"body":{"controllers/AppController.html":{}}}],["res",{"_index":758,"title":{},"body":{"controllers/FilesController.html":{}}}],["res.header('content",{"_index":832,"title":{},"body":{"controllers/FilesController.html":{}}}],["reset",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolve(fileinfo",{"_index":906,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["response",{"_index":420,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{},"coverage.html":{}}}],["response.id",{"_index":1164,"title":{},"body":{"injectables/PinsSeed.html":{}}}],["result",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.chunksize",{"_index":885,"title":{},"body":{"injectables/FilesService.html":{}}}],["result.contenttype",{"_index":887,"title":{},"body":{"injectables/FilesService.html":{}}}],["result.filename",{"_index":883,"title":{},"body":{"injectables/FilesService.html":{}}}],["result.length",{"_index":884,"title":{},"body":{"injectables/FilesService.html":{}}}],["result.md5",{"_index":886,"title":{},"body":{"injectables/FilesService.html":{}}}],["results",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":305,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["ret.__v",{"_index":310,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["ret._id",{"_index":308,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["ret.id",{"_index":307,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["ret.password",{"_index":1598,"title":{},"body":{"modules/UsersModule.html":{}}}],["retrieving",{"_index":828,"title":{},"body":{"controllers/FilesController.html":{}}}],["return",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"injectables/MulterUtils.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":1693,"title":{},"body":{"dependencies.html":{}}}],["rootpath",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["rua",{"_index":682,"title":{},"body":{"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":1738,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1695,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":1726,"title":{},"body":{"index.html":{}}}],["schema",{"_index":454,"title":{},"body":{"classes/Category.html":{},"classes/Event.html":{},"classes/Like.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{}}}],["schemafactory",{"_index":455,"title":{},"body":{"classes/Category.html":{},"classes/Event.html":{},"classes/Like.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(category",{"_index":457,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(event",{"_index":636,"title":{},"body":{"classes/Event.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(like",{"_index":939,"title":{},"body":{"classes/Like.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(pin",{"_index":1072,"title":{},"body":{"classes/Pin.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(rejoinder",{"_index":1214,"title":{},"body":{"classes/Rejoinder.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(reply",{"_index":1348,"title":{},"body":{"classes/Reply.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(support",{"_index":1366,"title":{},"body":{"classes/Support.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(topic",{"_index":1443,"title":{},"body":{"classes/Topic.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":1560,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/category.schema",{"_index":298,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["schemas/event.schema",{"_index":673,"title":{},"body":{"modules/EventsModule.html":{},"injectables/EventsService.html":{}}}],["schemas/like.schema",{"_index":969,"title":{},"body":{"modules/LikesModule.html":{},"injectables/LikesService.html":{}}}],["schemas/pin.schema",{"_index":1104,"title":{},"body":{"modules/PinsModule.html":{},"injectables/PinsService.html":{}}}],["schemas/rejoinders.schema",{"_index":1240,"title":{},"body":{"modules/RejoindersModule.html":{},"injectables/RejoindersService.html":{}}}],["schemas/reply.schema",{"_index":1307,"title":{},"body":{"modules/RepliesModule.html":{},"injectables/RepliesService.html":{}}}],["schemas/support.schema",{"_index":1394,"title":{},"body":{"modules/SupportsModule.html":{},"injectables/SupportsService.html":{}}}],["schemas/topic.schema",{"_index":1466,"title":{},"body":{"modules/TopicsModule.html":{},"injectables/TopicsService.html":{}}}],["schemas/user.schema",{"_index":1584,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":929,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seeds",{"_index":160,"title":{},"body":{"injectables/AppSeed.html":{}}}],["seeds.app",{"_index":1353,"title":{},"body":{"modules/SeedsModule.html":{}}}],["seeds.categories",{"_index":165,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{}}}],["seeds.events",{"_index":169,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{}}}],["seeds.likes",{"_index":173,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{}}}],["seeds.pins",{"_index":167,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{}}}],["seeds.rejoinders",{"_index":174,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{}}}],["seeds.replies",{"_index":172,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{}}}],["seeds.supports",{"_index":171,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{}}}],["seeds.topics",{"_index":170,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{}}}],["seeds.users",{"_index":166,"title":{},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{}}}],["seeds/seeds.module",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["seedsmodule",{"_index":83,"title":{"modules/SeedsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeedsModule.html":{},"modules.html":{},"overview.html":{}}}],["server",{"_index":1727,"title":{},"body":{"index.html":{}}}],["serveroot",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["set('tojson",{"_index":458,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":1728,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{}}}],["simplesmente",{"_index":1479,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["simulação",{"_index":1481,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["size",{"_index":1039,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CaslAbilityFactory.html":{},"modules/CaslModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateFileDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"modules/EventsModule.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/File.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"modules/FilesModule.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"modules/LikesModule.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"modules/PinsModule.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"modules/RejoindersModule.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"modules/RepliesModule.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"modules/SeedsModule.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/UpdateEventDto.html":{},"classes/UpdateFileDto.html":{},"classes/UpdateLikeDto.html":{},"classes/UpdatePinDto.html":{},"classes/UpdateRejoinderDto.html":{},"classes/UpdateReplyDto.html":{},"classes/UpdateSupportDto.html":{},"classes/UpdateTopicDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":1757,"title":{},"body":{"index.html":{}}}],["src/.../action.enum.ts",{"_index":1705,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../category.schema.ts",{"_index":1783,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../cli.ts",{"_index":1717,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../event.schema.ts",{"_index":1784,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../files.controller.ts",{"_index":1793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../like.schema.ts",{"_index":1785,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1718,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../pin.schema.ts",{"_index":1786,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../rejoinders.schema.ts",{"_index":1787,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../reply.schema.ts",{"_index":1788,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../seeds.categories.ts",{"_index":1794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seeds.events.ts",{"_index":1795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seeds.likes.ts",{"_index":1796,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seeds.pins.ts",{"_index":1797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seeds.rejoinders.ts",{"_index":1798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seeds.replies.ts",{"_index":1799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seeds.supports.ts",{"_index":1800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seeds.topics.ts",{"_index":1801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../seeds.users.ts",{"_index":1802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../support.schema.ts",{"_index":1789,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../topic.schema.ts",{"_index":1790,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../upload",{"_index":1706,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.schema.ts",{"_index":1791,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:18",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:24",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":221,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":222,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":231,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":245,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/jwt",{"_index":907,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":912,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:18",{"_index":916,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":914,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":1009,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":1011,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":1015,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":1013,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/casl/action.enum.ts",{"_index":1708,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/casl/casl",{"_index":272,"title":{},"body":{"classes/CaslAbilityFactory.html":{},"coverage.html":{}}}],["src/casl/casl.module.ts",{"_index":274,"title":{},"body":{"modules/CaslModule.html":{}}}],["src/categories/categories.controller.ts",{"_index":276,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts:10",{"_index":281,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:15",{"_index":282,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":294,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.service.ts",{"_index":424,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/categories/categories.service.ts:11",{"_index":430,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:16",{"_index":431,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:20",{"_index":433,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:8",{"_index":428,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/dto/create",{"_index":459,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/categories/schemas/category.schema.ts",{"_index":445,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/categories/schemas/category.schema.ts:12",{"_index":450,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/schemas/category.schema.ts:15",{"_index":451,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/schemas/category.schema.ts:18",{"_index":453,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/schemas/category.schema.ts:21",{"_index":449,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/schemas/category.schema.ts:9",{"_index":448,"title":{},"body":{"classes/Category.html":{}}}],["src/cli.ts",{"_index":1653,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/events/dto/create",{"_index":467,"title":{},"body":{"classes/CreateEventDto.html":{},"coverage.html":{}}}],["src/events/dto/update",{"_index":1520,"title":{},"body":{"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["src/events/events.controller.ts",{"_index":638,"title":{},"body":{"controllers/EventsController.html":{},"coverage.html":{}}}],["src/events/events.controller.ts:11",{"_index":642,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.controller.ts:16",{"_index":643,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.controller.ts:21",{"_index":646,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.controller.ts:26",{"_index":652,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.controller.ts:31",{"_index":648,"title":{},"body":{"controllers/EventsController.html":{}}}],["src/events/events.module.ts",{"_index":671,"title":{},"body":{"modules/EventsModule.html":{}}}],["src/events/events.service.ts",{"_index":701,"title":{},"body":{"injectables/EventsService.html":{},"coverage.html":{}}}],["src/events/events.service.ts:13",{"_index":705,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:18",{"_index":706,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:22",{"_index":707,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:26",{"_index":709,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:30",{"_index":708,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/events.service.ts:9",{"_index":703,"title":{},"body":{"injectables/EventsService.html":{}}}],["src/events/schemas/event.schema.ts",{"_index":611,"title":{},"body":{"classes/Event.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/events/schemas/event.schema.ts:12",{"_index":615,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:15",{"_index":628,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:18",{"_index":620,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:21",{"_index":626,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:24",{"_index":617,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:27",{"_index":624,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:30",{"_index":622,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:33",{"_index":616,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:36",{"_index":630,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:39",{"_index":623,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:42",{"_index":625,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:45",{"_index":618,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:48",{"_index":619,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:51",{"_index":621,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:54",{"_index":629,"title":{},"body":{"classes/Event.html":{}}}],["src/events/schemas/event.schema.ts:57",{"_index":627,"title":{},"body":{"classes/Event.html":{}}}],["src/files/dto/create",{"_index":501,"title":{},"body":{"classes/CreateFileDto.html":{},"coverage.html":{}}}],["src/files/dto/update",{"_index":1524,"title":{},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["src/files/entities/file.entity.ts",{"_index":719,"title":{},"body":{"classes/File.html":{},"coverage.html":{}}}],["src/files/file",{"_index":721,"title":{},"body":{"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"coverage.html":{}}}],["src/files/files.controller.ts",{"_index":744,"title":{},"body":{"controllers/FilesController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/files/files.controller.ts:25",{"_index":773,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:33",{"_index":782,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:41",{"_index":778,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:47",{"_index":767,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:61",{"_index":764,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:73",{"_index":761,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.controller.ts:87",{"_index":756,"title":{},"body":{"controllers/FilesController.html":{}}}],["src/files/files.module.ts",{"_index":848,"title":{},"body":{"modules/FilesModule.html":{}}}],["src/files/files.service.ts",{"_index":854,"title":{},"body":{"injectables/FilesService.html":{},"coverage.html":{}}}],["src/files/files.service.ts:10",{"_index":860,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:16",{"_index":865,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:20",{"_index":863,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/files.service.ts:33",{"_index":861,"title":{},"body":{"injectables/FilesService.html":{}}}],["src/files/multer",{"_index":889,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{},"injectables/MulterUtils.html":{},"coverage.html":{}}}],["src/files/upload",{"_index":1712,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/likes/dto/create",{"_index":504,"title":{},"body":{"classes/CreateLikeDto.html":{},"coverage.html":{}}}],["src/likes/dto/update",{"_index":1529,"title":{},"body":{"classes/UpdateLikeDto.html":{},"coverage.html":{}}}],["src/likes/likes.controller.ts",{"_index":941,"title":{},"body":{"controllers/LikesController.html":{},"coverage.html":{}}}],["src/likes/likes.controller.ts:11",{"_index":944,"title":{},"body":{"controllers/LikesController.html":{}}}],["src/likes/likes.controller.ts:16",{"_index":945,"title":{},"body":{"controllers/LikesController.html":{}}}],["src/likes/likes.controller.ts:21",{"_index":949,"title":{},"body":{"controllers/LikesController.html":{}}}],["src/likes/likes.controller.ts:26",{"_index":948,"title":{},"body":{"controllers/LikesController.html":{}}}],["src/likes/likes.controller.ts:31",{"_index":952,"title":{},"body":{"controllers/LikesController.html":{}}}],["src/likes/likes.controller.ts:36",{"_index":950,"title":{},"body":{"controllers/LikesController.html":{}}}],["src/likes/likes.module",{"_index":1358,"title":{},"body":{"modules/SeedsModule.html":{}}}],["src/likes/likes.module.ts",{"_index":967,"title":{},"body":{"modules/LikesModule.html":{}}}],["src/likes/likes.service.ts",{"_index":987,"title":{},"body":{"injectables/LikesService.html":{},"coverage.html":{}}}],["src/likes/likes.service.ts:14",{"_index":992,"title":{},"body":{"injectables/LikesService.html":{}}}],["src/likes/likes.service.ts:19",{"_index":995,"title":{},"body":{"injectables/LikesService.html":{}}}],["src/likes/likes.service.ts:23",{"_index":996,"title":{},"body":{"injectables/LikesService.html":{}}}],["src/likes/likes.service.ts:27",{"_index":994,"title":{},"body":{"injectables/LikesService.html":{}}}],["src/likes/likes.service.ts:31",{"_index":998,"title":{},"body":{"injectables/LikesService.html":{}}}],["src/likes/likes.service.ts:35",{"_index":997,"title":{},"body":{"injectables/LikesService.html":{}}}],["src/likes/likes.service.ts:9",{"_index":990,"title":{},"body":{"injectables/LikesService.html":{}}}],["src/likes/schemas/like.schema.ts",{"_index":931,"title":{},"body":{"classes/Like.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/likes/schemas/like.schema.ts:11",{"_index":936,"title":{},"body":{"classes/Like.html":{}}}],["src/likes/schemas/like.schema.ts:14",{"_index":935,"title":{},"body":{"classes/Like.html":{}}}],["src/likes/schemas/like.schema.ts:17",{"_index":933,"title":{},"body":{"classes/Like.html":{}}}],["src/main.ts",{"_index":1659,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/pins/dto/create",{"_index":512,"title":{},"body":{"classes/CreatePinDto.html":{},"classes/CreatelocationDto.html":{},"coverage.html":{}}}],["src/pins/dto/update",{"_index":1531,"title":{},"body":{"classes/UpdatePinDto.html":{},"coverage.html":{}}}],["src/pins/pins.controller.ts",{"_index":1074,"title":{},"body":{"controllers/PinsController.html":{},"coverage.html":{}}}],["src/pins/pins.controller.ts:12",{"_index":1077,"title":{},"body":{"controllers/PinsController.html":{}}}],["src/pins/pins.controller.ts:17",{"_index":1078,"title":{},"body":{"controllers/PinsController.html":{}}}],["src/pins/pins.controller.ts:22",{"_index":1082,"title":{},"body":{"controllers/PinsController.html":{}}}],["src/pins/pins.controller.ts:27",{"_index":1079,"title":{},"body":{"controllers/PinsController.html":{}}}],["src/pins/pins.controller.ts:32",{"_index":1085,"title":{},"body":{"controllers/PinsController.html":{}}}],["src/pins/pins.controller.ts:37",{"_index":1083,"title":{},"body":{"controllers/PinsController.html":{}}}],["src/pins/pins.module.ts",{"_index":1101,"title":{},"body":{"modules/PinsModule.html":{}}}],["src/pins/pins.service.ts",{"_index":1165,"title":{},"body":{"injectables/PinsService.html":{},"coverage.html":{}}}],["src/pins/pins.service.ts:12",{"_index":1168,"title":{},"body":{"injectables/PinsService.html":{}}}],["src/pins/pins.service.ts:19",{"_index":1170,"title":{},"body":{"injectables/PinsService.html":{}}}],["src/pins/pins.service.ts:35",{"_index":1171,"title":{},"body":{"injectables/PinsService.html":{}}}],["src/pins/pins.service.ts:39",{"_index":1173,"title":{},"body":{"injectables/PinsService.html":{}}}],["src/pins/pins.service.ts:62",{"_index":1172,"title":{},"body":{"injectables/PinsService.html":{}}}],["src/pins/pins.service.ts:66",{"_index":1175,"title":{},"body":{"injectables/PinsService.html":{}}}],["src/pins/pins.service.ts:70",{"_index":1174,"title":{},"body":{"injectables/PinsService.html":{}}}],["src/pins/schemas/pin.schema.ts",{"_index":1051,"title":{},"body":{"classes/Pin.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/pins/schemas/pin.schema.ts:10",{"_index":1052,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:13",{"_index":1067,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:16",{"_index":1057,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:19",{"_index":1065,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:22",{"_index":1055,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:25",{"_index":1063,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:28",{"_index":1064,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:31",{"_index":1062,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:34",{"_index":1061,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:37",{"_index":1053,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:40",{"_index":1069,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:43",{"_index":1054,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:46",{"_index":1059,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:49",{"_index":1060,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:52",{"_index":1056,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:55",{"_index":1058,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:58",{"_index":1066,"title":{},"body":{"classes/Pin.html":{}}}],["src/pins/schemas/pin.schema.ts:61",{"_index":1068,"title":{},"body":{"classes/Pin.html":{}}}],["src/rejoinders/dto/create",{"_index":537,"title":{},"body":{"classes/CreateRejoinderDto.html":{},"coverage.html":{}}}],["src/rejoinders/dto/update",{"_index":1533,"title":{},"body":{"classes/UpdateRejoinderDto.html":{},"coverage.html":{}}}],["src/rejoinders/rejoinders.controller.ts",{"_index":1216,"title":{},"body":{"controllers/RejoindersController.html":{},"coverage.html":{}}}],["src/rejoinders/rejoinders.controller.ts:11",{"_index":1218,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["src/rejoinders/rejoinders.controller.ts:16",{"_index":1219,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["src/rejoinders/rejoinders.controller.ts:21",{"_index":1221,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["src/rejoinders/rejoinders.controller.ts:26",{"_index":1220,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["src/rejoinders/rejoinders.controller.ts:31",{"_index":1224,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["src/rejoinders/rejoinders.controller.ts:36",{"_index":1222,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["src/rejoinders/rejoinders.module",{"_index":1359,"title":{},"body":{"modules/SeedsModule.html":{}}}],["src/rejoinders/rejoinders.module.ts",{"_index":1238,"title":{},"body":{"modules/RejoindersModule.html":{}}}],["src/rejoinders/rejoinders.service.ts",{"_index":1261,"title":{},"body":{"injectables/RejoindersService.html":{},"coverage.html":{}}}],["src/rejoinders/rejoinders.service.ts:14",{"_index":1265,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["src/rejoinders/rejoinders.service.ts:19",{"_index":1266,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["src/rejoinders/rejoinders.service.ts:24",{"_index":1268,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["src/rejoinders/rejoinders.service.ts:28",{"_index":1267,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["src/rejoinders/rejoinders.service.ts:32",{"_index":1270,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["src/rejoinders/rejoinders.service.ts:37",{"_index":1269,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["src/rejoinders/rejoinders.service.ts:9",{"_index":1263,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["src/rejoinders/schemas/rejoinders.schema.ts",{"_index":1206,"title":{},"body":{"classes/Rejoinder.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/rejoinders/schemas/rejoinders.schema.ts:11",{"_index":1211,"title":{},"body":{"classes/Rejoinder.html":{}}}],["src/rejoinders/schemas/rejoinders.schema.ts:14",{"_index":1210,"title":{},"body":{"classes/Rejoinder.html":{}}}],["src/rejoinders/schemas/rejoinders.schema.ts:17",{"_index":1209,"title":{},"body":{"classes/Rejoinder.html":{}}}],["src/rejoinders/schemas/rejoinders.schema.ts:20",{"_index":1207,"title":{},"body":{"classes/Rejoinder.html":{}}}],["src/rejoinders/schemas/rejoinders.schema.ts:23",{"_index":1208,"title":{},"body":{"classes/Rejoinder.html":{}}}],["src/replies/dto/create",{"_index":547,"title":{},"body":{"classes/CreateReplyDto.html":{},"coverage.html":{}}}],["src/replies/dto/update",{"_index":1535,"title":{},"body":{"classes/UpdateReplyDto.html":{},"coverage.html":{}}}],["src/replies/replies.controller.ts",{"_index":1282,"title":{},"body":{"controllers/RepliesController.html":{},"coverage.html":{}}}],["src/replies/replies.controller.ts:11",{"_index":1284,"title":{},"body":{"controllers/RepliesController.html":{}}}],["src/replies/replies.controller.ts:16",{"_index":1285,"title":{},"body":{"controllers/RepliesController.html":{}}}],["src/replies/replies.controller.ts:21",{"_index":1286,"title":{},"body":{"controllers/RepliesController.html":{}}}],["src/replies/replies.controller.ts:26",{"_index":1287,"title":{},"body":{"controllers/RepliesController.html":{}}}],["src/replies/replies.controller.ts:31",{"_index":1290,"title":{},"body":{"controllers/RepliesController.html":{}}}],["src/replies/replies.controller.ts:36",{"_index":1288,"title":{},"body":{"controllers/RepliesController.html":{}}}],["src/replies/replies.module",{"_index":1356,"title":{},"body":{"modules/SeedsModule.html":{}}}],["src/replies/replies.module.ts",{"_index":1304,"title":{},"body":{"modules/RepliesModule.html":{}}}],["src/replies/replies.service.ts",{"_index":1321,"title":{},"body":{"injectables/RepliesService.html":{},"coverage.html":{}}}],["src/replies/replies.service.ts:14",{"_index":1325,"title":{},"body":{"injectables/RepliesService.html":{}}}],["src/replies/replies.service.ts:19",{"_index":1326,"title":{},"body":{"injectables/RepliesService.html":{}}}],["src/replies/replies.service.ts:23",{"_index":1327,"title":{},"body":{"injectables/RepliesService.html":{}}}],["src/replies/replies.service.ts:27",{"_index":1328,"title":{},"body":{"injectables/RepliesService.html":{}}}],["src/replies/replies.service.ts:31",{"_index":1330,"title":{},"body":{"injectables/RepliesService.html":{}}}],["src/replies/replies.service.ts:36",{"_index":1329,"title":{},"body":{"injectables/RepliesService.html":{}}}],["src/replies/replies.service.ts:9",{"_index":1323,"title":{},"body":{"injectables/RepliesService.html":{}}}],["src/replies/schemas/reply.schema.ts",{"_index":1342,"title":{},"body":{"classes/Reply.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/replies/schemas/reply.schema.ts:11",{"_index":1347,"title":{},"body":{"classes/Reply.html":{}}}],["src/replies/schemas/reply.schema.ts:14",{"_index":1346,"title":{},"body":{"classes/Reply.html":{}}}],["src/replies/schemas/reply.schema.ts:17",{"_index":1343,"title":{},"body":{"classes/Reply.html":{}}}],["src/replies/schemas/reply.schema.ts:20",{"_index":1344,"title":{},"body":{"classes/Reply.html":{}}}],["src/replies/schemas/reply.schema.ts:23",{"_index":1345,"title":{},"body":{"classes/Reply.html":{}}}],["src/seeds/seeds.app.ts",{"_index":141,"title":{},"body":{"injectables/AppSeed.html":{},"coverage.html":{}}}],["src/seeds/seeds.app.ts:17",{"_index":154,"title":{},"body":{"injectables/AppSeed.html":{}}}],["src/seeds/seeds.app.ts:37",{"_index":162,"title":{},"body":{"injectables/AppSeed.html":{}}}],["src/seeds/seeds.categories.ts",{"_index":311,"title":{},"body":{"injectables/CategoriesSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeds/seeds.categories.ts:134",{"_index":313,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["src/seeds/seeds.categories.ts:137",{"_index":314,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["src/seeds/seeds.events.ts",{"_index":676,"title":{},"body":{"injectables/EventsSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeds/seeds.events.ts:48",{"_index":678,"title":{},"body":{"injectables/EventsSeed.html":{}}}],["src/seeds/seeds.events.ts:51",{"_index":680,"title":{},"body":{"injectables/EventsSeed.html":{}}}],["src/seeds/seeds.likes.ts",{"_index":972,"title":{},"body":{"injectables/LikesSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeds/seeds.likes.ts:19",{"_index":974,"title":{},"body":{"injectables/LikesSeed.html":{}}}],["src/seeds/seeds.likes.ts:22",{"_index":976,"title":{},"body":{"injectables/LikesSeed.html":{}}}],["src/seeds/seeds.module.ts",{"_index":1352,"title":{},"body":{"modules/SeedsModule.html":{}}}],["src/seeds/seeds.pins.ts",{"_index":1107,"title":{},"body":{"injectables/PinsSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeds/seeds.pins.ts:52",{"_index":1109,"title":{},"body":{"injectables/PinsSeed.html":{}}}],["src/seeds/seeds.pins.ts:55",{"_index":1110,"title":{},"body":{"injectables/PinsSeed.html":{}}}],["src/seeds/seeds.rejoinders.ts",{"_index":1244,"title":{},"body":{"injectables/RejoindersSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeds/seeds.rejoinders.ts:21",{"_index":1246,"title":{},"body":{"injectables/RejoindersSeed.html":{}}}],["src/seeds/seeds.rejoinders.ts:24",{"_index":1247,"title":{},"body":{"injectables/RejoindersSeed.html":{}}}],["src/seeds/seeds.replies.ts",{"_index":1310,"title":{},"body":{"injectables/RepliesSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeds/seeds.replies.ts:57",{"_index":1312,"title":{},"body":{"injectables/RepliesSeed.html":{}}}],["src/seeds/seeds.replies.ts:60",{"_index":1313,"title":{},"body":{"injectables/RepliesSeed.html":{}}}],["src/seeds/seeds.supports.ts",{"_index":1399,"title":{},"body":{"injectables/SupportsSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeds/seeds.supports.ts:29",{"_index":1401,"title":{},"body":{"injectables/SupportsSeed.html":{}}}],["src/seeds/seeds.supports.ts:32",{"_index":1402,"title":{},"body":{"injectables/SupportsSeed.html":{}}}],["src/seeds/seeds.topics",{"_index":1505,"title":{},"body":{"injectables/TopicsService.html":{}}}],["src/seeds/seeds.topics.ts",{"_index":1469,"title":{},"body":{"injectables/TopicsSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeds/seeds.topics.ts:37",{"_index":1471,"title":{},"body":{"injectables/TopicsSeed.html":{}}}],["src/seeds/seeds.topics.ts:40",{"_index":1472,"title":{},"body":{"injectables/TopicsSeed.html":{}}}],["src/seeds/seeds.users.ts",{"_index":1599,"title":{},"body":{"injectables/UsersSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/seeds/seeds.users.ts:37",{"_index":1600,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["src/seeds/seeds.users.ts:40",{"_index":1601,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["src/supports/dto/create",{"_index":556,"title":{},"body":{"classes/CreateSupportDto.html":{},"coverage.html":{}}}],["src/supports/dto/update",{"_index":1537,"title":{},"body":{"classes/UpdateSupportDto.html":{},"coverage.html":{}}}],["src/supports/schemas/support.schema.ts",{"_index":1360,"title":{},"body":{"classes/Support.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/supports/schemas/support.schema.ts:11",{"_index":1363,"title":{},"body":{"classes/Support.html":{}}}],["src/supports/schemas/support.schema.ts:14",{"_index":1362,"title":{},"body":{"classes/Support.html":{}}}],["src/supports/schemas/support.schema.ts:17",{"_index":1361,"title":{},"body":{"classes/Support.html":{}}}],["src/supports/supports.controller.ts",{"_index":1368,"title":{},"body":{"controllers/SupportsController.html":{},"coverage.html":{}}}],["src/supports/supports.controller.ts:11",{"_index":1370,"title":{},"body":{"controllers/SupportsController.html":{}}}],["src/supports/supports.controller.ts:16",{"_index":1371,"title":{},"body":{"controllers/SupportsController.html":{}}}],["src/supports/supports.controller.ts:21",{"_index":1373,"title":{},"body":{"controllers/SupportsController.html":{}}}],["src/supports/supports.controller.ts:26",{"_index":1374,"title":{},"body":{"controllers/SupportsController.html":{}}}],["src/supports/supports.controller.ts:31",{"_index":1377,"title":{},"body":{"controllers/SupportsController.html":{}}}],["src/supports/supports.controller.ts:36",{"_index":1375,"title":{},"body":{"controllers/SupportsController.html":{}}}],["src/supports/supports.module",{"_index":1355,"title":{},"body":{"modules/SeedsModule.html":{}}}],["src/supports/supports.module.ts",{"_index":1392,"title":{},"body":{"modules/SupportsModule.html":{}}}],["src/supports/supports.service.ts",{"_index":1408,"title":{},"body":{"injectables/SupportsService.html":{},"coverage.html":{}}}],["src/supports/supports.service.ts:11",{"_index":1410,"title":{},"body":{"injectables/SupportsService.html":{}}}],["src/supports/supports.service.ts:17",{"_index":1412,"title":{},"body":{"injectables/SupportsService.html":{}}}],["src/supports/supports.service.ts:25",{"_index":1413,"title":{},"body":{"injectables/SupportsService.html":{}}}],["src/supports/supports.service.ts:29",{"_index":1414,"title":{},"body":{"injectables/SupportsService.html":{}}}],["src/supports/supports.service.ts:33",{"_index":1415,"title":{},"body":{"injectables/SupportsService.html":{}}}],["src/supports/supports.service.ts:37",{"_index":1417,"title":{},"body":{"injectables/SupportsService.html":{}}}],["src/supports/supports.service.ts:41",{"_index":1416,"title":{},"body":{"injectables/SupportsService.html":{}}}],["src/topics/dto/create",{"_index":564,"title":{},"body":{"classes/CreateTopicDto.html":{},"coverage.html":{}}}],["src/topics/dto/update",{"_index":1539,"title":{},"body":{"classes/UpdateTopicDto.html":{},"coverage.html":{}}}],["src/topics/schemas/topic.schema.ts",{"_index":1430,"title":{},"body":{"classes/Topic.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/topics/schemas/topic.schema.ts:10",{"_index":1432,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/schemas/topic.schema.ts:13",{"_index":1439,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/schemas/topic.schema.ts:16",{"_index":1431,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/schemas/topic.schema.ts:19",{"_index":1433,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/schemas/topic.schema.ts:22",{"_index":1438,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/schemas/topic.schema.ts:25",{"_index":1437,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/schemas/topic.schema.ts:28",{"_index":1435,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/schemas/topic.schema.ts:31",{"_index":1436,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/schemas/topic.schema.ts:34",{"_index":1440,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/schemas/topic.schema.ts:37",{"_index":1434,"title":{},"body":{"classes/Topic.html":{}}}],["src/topics/topics.controller.ts",{"_index":1445,"title":{},"body":{"controllers/TopicsController.html":{},"coverage.html":{}}}],["src/topics/topics.controller.ts:11",{"_index":1447,"title":{},"body":{"controllers/TopicsController.html":{}}}],["src/topics/topics.controller.ts:16",{"_index":1448,"title":{},"body":{"controllers/TopicsController.html":{}}}],["src/topics/topics.controller.ts:21",{"_index":1449,"title":{},"body":{"controllers/TopicsController.html":{}}}],["src/topics/topics.controller.ts:26",{"_index":1452,"title":{},"body":{"controllers/TopicsController.html":{}}}],["src/topics/topics.controller.ts:31",{"_index":1450,"title":{},"body":{"controllers/TopicsController.html":{}}}],["src/topics/topics.module",{"_index":1354,"title":{},"body":{"modules/SeedsModule.html":{}}}],["src/topics/topics.module.ts",{"_index":1464,"title":{},"body":{"modules/TopicsModule.html":{}}}],["src/topics/topics.service.ts",{"_index":1493,"title":{},"body":{"injectables/TopicsService.html":{},"coverage.html":{}}}],["src/topics/topics.service.ts:10",{"_index":1496,"title":{},"body":{"injectables/TopicsService.html":{}}}],["src/topics/topics.service.ts:15",{"_index":1498,"title":{},"body":{"injectables/TopicsService.html":{}}}],["src/topics/topics.service.ts:20",{"_index":1499,"title":{},"body":{"injectables/TopicsService.html":{}}}],["src/topics/topics.service.ts:24",{"_index":1500,"title":{},"body":{"injectables/TopicsService.html":{}}}],["src/topics/topics.service.ts:28",{"_index":1504,"title":{},"body":{"injectables/TopicsService.html":{}}}],["src/topics/topics.service.ts:32",{"_index":1502,"title":{},"body":{"injectables/TopicsService.html":{}}}],["src/topics/topics.service.ts:41",{"_index":1503,"title":{},"body":{"injectables/TopicsService.html":{}}}],["src/users/dto/create",{"_index":582,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/login",{"_index":1020,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":1542,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":1544,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:12",{"_index":1549,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:15",{"_index":1548,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:18",{"_index":1553,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:21",{"_index":1556,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:24",{"_index":1552,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:27",{"_index":1557,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:30",{"_index":1554,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:33",{"_index":1547,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:36",{"_index":1551,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:39",{"_index":1555,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:41",{"_index":1550,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":1562,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:12",{"_index":1564,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:18",{"_index":1566,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:23",{"_index":1567,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:29",{"_index":1571,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:35",{"_index":1569,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":1582,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":1620,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":1625,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":1626,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":1629,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:25",{"_index":1628,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":1631,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:33",{"_index":1630,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":1623,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":1739,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1742,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1744,"title":{},"body":{"index.html":{}}}],["started",{"_index":1720,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1732,"title":{},"body":{"index.html":{}}}],["state",{"_index":603,"title":{},"body":{"classes/CreatelocationDto.html":{},"injectables/PinsService.html":{}}}],["statements",{"_index":1645,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"injectables/MulterUtils.html":{},"dependencies.html":{}}}],["status",{"_index":558,"title":{},"body":{"classes/CreateSupportDto.html":{},"classes/Support.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"injectables/TopicsService.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":802,"title":{},"body":{"controllers/FilesController.html":{},"miscellaneous/variables.html":{}}}],["stay",{"_index":1764,"title":{},"body":{"index.html":{}}}],["storage",{"_index":897,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{},"injectables/MulterUtils.html":{},"dependencies.html":{}}}],["strategy",{"_index":919,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["street",{"_index":477,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"miscellaneous/variables.html":{}}}],["streetandnumber",{"_index":1190,"title":{},"body":{"injectables/PinsService.html":{}}}],["string",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["string):promise",{"_index":1425,"title":{},"body":{"injectables/SupportsService.html":{},"injectables/UsersService.html":{}}}],["sul",{"_index":1183,"title":{},"body":{"injectables/PinsService.html":{}}}],["super",{"_index":924,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["superior",{"_index":1611,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":1317,"title":{"classes/Support.html":{}},"body":{"injectables/RepliesSeed.html":{},"classes/Support.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"miscellaneous/variables.html":{}}}],["support.dto",{"_index":1380,"title":{},"body":{"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"classes/UpdateSupportDto.html":{}}}],["support.dto.ts",{"_index":557,"title":{},"body":{"classes/CreateSupportDto.html":{},"classes/UpdateSupportDto.html":{},"coverage.html":{}}}],["support.dto.ts:2",{"_index":562,"title":{},"body":{"classes/CreateSupportDto.html":{}}}],["support.dto.ts:3",{"_index":561,"title":{},"body":{"classes/CreateSupportDto.html":{}}}],["support.dto.ts:4",{"_index":560,"title":{},"body":{"classes/CreateSupportDto.html":{}}}],["support.name",{"_index":1397,"title":{},"body":{"modules/SupportsModule.html":{}}}],["supportdocument",{"_index":1364,"title":{},"body":{"classes/Support.html":{},"injectables/SupportsService.html":{},"miscellaneous/typealiases.html":{}}}],["supportmodel",{"_index":1411,"title":{},"body":{"injectables/SupportsService.html":{}}}],["supports",{"_index":196,"title":{},"body":{"injectables/AppSeed.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["supports(categories",{"_index":1405,"title":{},"body":{"injectables/SupportsSeed.html":{}}}],["supports.controller",{"_index":1393,"title":{},"body":{"modules/SupportsModule.html":{}}}],["supports.map((support",{"_index":1404,"title":{},"body":{"injectables/SupportsSeed.html":{},"miscellaneous/variables.html":{}}}],["supports.service",{"_index":1379,"title":{},"body":{"controllers/SupportsController.html":{},"modules/SupportsModule.html":{}}}],["supports/supports.module",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["supports/supports.service",{"_index":1403,"title":{},"body":{"injectables/SupportsSeed.html":{}}}],["supportschema",{"_index":1365,"title":{},"body":{"classes/Support.html":{},"modules/SupportsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["supportschema.set('tojson",{"_index":1398,"title":{},"body":{"modules/SupportsModule.html":{}}}],["supportscontroller",{"_index":1367,"title":{"controllers/SupportsController.html":{}},"body":{"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"coverage.html":{}}}],["supportsmodule",{"_index":84,"title":{"modules/SupportsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules.html":{},"overview.html":{}}}],["supportsseed",{"_index":150,"title":{"injectables/SupportsSeed.html":{}},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{},"injectables/SupportsSeed.html":{},"coverage.html":{},"overview.html":{}}}],["supportsservice",{"_index":1378,"title":{"injectables/SupportsService.html":{}},"body":{"controllers/SupportsController.html":{},"modules/SupportsModule.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"coverage.html":{},"overview.html":{}}}],["svg",{"_index":1774,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1697,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":182,"title":{},"body":{"injectables/AppSeed.html":{}}}],["t",{"_index":342,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":1665,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1664,"title":{},"body":{"coverage.html":{}}}],["talharim",{"_index":1149,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["teatro",{"_index":339,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":1747,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":1750,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":1749,"title":{},"body":{"index.html":{}}}],["tests",{"_index":1746,"title":{},"body":{"index.html":{}}}],["texto",{"_index":1482,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["thanks",{"_index":1756,"title":{},"body":{"index.html":{}}}],["then(res",{"_index":1197,"title":{},"body":{"injectables/PinsService.html":{}}}],["then(result",{"_index":882,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.appservice.gethello",{"_index":50,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser",{"_index":1019,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.categoriesseed.create",{"_index":209,"title":{},"body":{"injectables/AppSeed.html":{}}}],["this.categoriesservice.create(category",{"_index":415,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["this.categoriesservice.create(createcategorydto",{"_index":289,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findall",{"_index":290,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categorymodel(createcategorydto",{"_index":439,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.find().exec",{"_index":441,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.findoneanddelete",{"_index":442,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.configservice.get('mongourl",{"_index":901,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["this.eventmodel(createeventdto",{"_index":712,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventmodel.find().exec",{"_index":714,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventmodel.findbyidandupdate",{"_index":716,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventmodel.findone",{"_index":715,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventmodel.findoneanddelete",{"_index":718,"title":{},"body":{"injectables/EventsService.html":{}}}],["this.eventsseed.create(categoriesid",{"_index":213,"title":{},"body":{"injectables/AppSeed.html":{}}}],["this.eventsservice.create(createeventdto",{"_index":660,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.create(event",{"_index":700,"title":{},"body":{"injectables/EventsSeed.html":{}}}],["this.eventsservice.findall",{"_index":661,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.findone(id",{"_index":663,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.remove(id",{"_index":667,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.eventsservice.update(id",{"_index":665,"title":{},"body":{"controllers/EventsController.html":{}}}],["this.filemodel",{"_index":873,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.filemodel.delete(id",{"_index":888,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.filemodel.readfilestream(id",{"_index":876,"title":{},"body":{"injectables/FilesService.html":{}}}],["this.filesservice.deletefile(id",{"_index":841,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.findinfo(id",{"_index":822,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.filesservice.readstream(id",{"_index":824,"title":{},"body":{"controllers/FilesController.html":{}}}],["this.findone(id",{"_index":1514,"title":{},"body":{"injectables/TopicsService.html":{}}}],["this.getlocation(address",{"_index":1185,"title":{},"body":{"injectables/PinsService.html":{}}}],["this.gridfsstorage",{"_index":899,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{}}}],["this.httpservice.get(url",{"_index":1195,"title":{},"body":{"injectables/PinsService.html":{}}}],["this.jwtservice.sign",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.likemodel(createlikedto",{"_index":1001,"title":{},"body":{"injectables/LikesService.html":{}}}],["this.likemodel.find",{"_index":1005,"title":{},"body":{"injectables/LikesService.html":{}}}],["this.likemodel.find().exec",{"_index":1003,"title":{},"body":{"injectables/LikesService.html":{}}}],["this.likemodel.findbyidandupdate",{"_index":1006,"title":{},"body":{"injectables/LikesService.html":{}}}],["this.likemodel.findone",{"_index":1004,"title":{},"body":{"injectables/LikesService.html":{}}}],["this.likemodel.findoneanddelete",{"_index":1008,"title":{},"body":{"injectables/LikesService.html":{}}}],["this.likesseed.create(topicsid",{"_index":219,"title":{},"body":{"injectables/AppSeed.html":{}}}],["this.likesservice.create(createlikedto",{"_index":957,"title":{},"body":{"controllers/LikesController.html":{}}}],["this.likesservice.create(like",{"_index":986,"title":{},"body":{"injectables/LikesSeed.html":{}}}],["this.likesservice.finbytopicid(id",{"_index":961,"title":{},"body":{"controllers/LikesController.html":{}}}],["this.likesservice.findall",{"_index":958,"title":{},"body":{"controllers/LikesController.html":{}}}],["this.likesservice.findone(id",{"_index":959,"title":{},"body":{"controllers/LikesController.html":{}}}],["this.likesservice.remove(id",{"_index":963,"title":{},"body":{"controllers/LikesController.html":{}}}],["this.likesservice.update(id",{"_index":962,"title":{},"body":{"controllers/LikesController.html":{}}}],["this.pinmodel(createpindto",{"_index":1187,"title":{},"body":{"injectables/PinsService.html":{}}}],["this.pinmodel.find().exec",{"_index":1189,"title":{},"body":{"injectables/PinsService.html":{}}}],["this.pinmodel.findbyidandupdate",{"_index":1202,"title":{},"body":{"injectables/PinsService.html":{}}}],["this.pinmodel.findone",{"_index":1201,"title":{},"body":{"injectables/PinsService.html":{}}}],["this.pinmodel.findoneanddelete",{"_index":1204,"title":{},"body":{"injectables/PinsService.html":{}}}],["this.pinsseed.create(categoriesid",{"_index":212,"title":{},"body":{"injectables/AppSeed.html":{}}}],["this.pinsservice.create(createpindto",{"_index":1091,"title":{},"body":{"controllers/PinsController.html":{}}}],["this.pinsservice.create(pin",{"_index":1162,"title":{},"body":{"injectables/PinsSeed.html":{}}}],["this.pinsservice.findall",{"_index":1092,"title":{},"body":{"controllers/PinsController.html":{}}}],["this.pinsservice.findone(id",{"_index":1095,"title":{},"body":{"controllers/PinsController.html":{}}}],["this.pinsservice.getlocation(createlocationdto",{"_index":1094,"title":{},"body":{"controllers/PinsController.html":{}}}],["this.pinsservice.remove(id",{"_index":1097,"title":{},"body":{"controllers/PinsController.html":{}}}],["this.pinsservice.update(id",{"_index":1096,"title":{},"body":{"controllers/PinsController.html":{}}}],["this.rejoindermodel(createrejoinderdto",{"_index":1273,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["this.rejoindermodel.find",{"_index":1277,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["this.rejoindermodel.find().exec",{"_index":1275,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["this.rejoindermodel.findbyidandupdate",{"_index":1278,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["this.rejoindermodel.findone",{"_index":1276,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["this.rejoindermodel.findoneanddelete",{"_index":1280,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["this.rejoindersseed.create(topicsid",{"_index":220,"title":{},"body":{"injectables/AppSeed.html":{}}}],["this.rejoindersservice.create(createrejoinderdto",{"_index":1229,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["this.rejoindersservice.create(rejoinder",{"_index":1260,"title":{},"body":{"injectables/RejoindersSeed.html":{}}}],["this.rejoindersservice.findall",{"_index":1230,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["this.rejoindersservice.findbytopicid(id",{"_index":1232,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["this.rejoindersservice.findone(id",{"_index":1231,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["this.rejoindersservice.remove(id",{"_index":1234,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["this.rejoindersservice.update(id",{"_index":1233,"title":{},"body":{"controllers/RejoindersController.html":{}}}],["this.repliesseed.create(topicsid",{"_index":218,"title":{},"body":{"injectables/AppSeed.html":{}}}],["this.repliesservice.create(createreplydto",{"_index":1295,"title":{},"body":{"controllers/RepliesController.html":{}}}],["this.repliesservice.create(reply",{"_index":1320,"title":{},"body":{"injectables/RepliesSeed.html":{}}}],["this.repliesservice.findall",{"_index":1296,"title":{},"body":{"controllers/RepliesController.html":{}}}],["this.repliesservice.findbytopicid(id",{"_index":1297,"title":{},"body":{"controllers/RepliesController.html":{}}}],["this.repliesservice.findone(id",{"_index":1298,"title":{},"body":{"controllers/RepliesController.html":{}}}],["this.repliesservice.remove(id",{"_index":1300,"title":{},"body":{"controllers/RepliesController.html":{}}}],["this.repliesservice.update(id",{"_index":1299,"title":{},"body":{"controllers/RepliesController.html":{}}}],["this.replymodel(createreplydto",{"_index":1334,"title":{},"body":{"injectables/RepliesService.html":{}}}],["this.replymodel.find",{"_index":1337,"title":{},"body":{"injectables/RepliesService.html":{}}}],["this.replymodel.find().exec",{"_index":1336,"title":{},"body":{"injectables/RepliesService.html":{}}}],["this.replymodel.findbyidandupdate",{"_index":1339,"title":{},"body":{"injectables/RepliesService.html":{}}}],["this.replymodel.findone",{"_index":1338,"title":{},"body":{"injectables/RepliesService.html":{}}}],["this.replymodel.findoneanddelete",{"_index":1341,"title":{},"body":{"injectables/RepliesService.html":{}}}],["this.supportmodel(createsupportdto",{"_index":1420,"title":{},"body":{"injectables/SupportsService.html":{}}}],["this.supportmodel.find",{"_index":1424,"title":{},"body":{"injectables/SupportsService.html":{}}}],["this.supportmodel.find().exec",{"_index":1423,"title":{},"body":{"injectables/SupportsService.html":{}}}],["this.supportmodel.findbyidandupdate",{"_index":1427,"title":{},"body":{"injectables/SupportsService.html":{}}}],["this.supportmodel.findone",{"_index":1426,"title":{},"body":{"injectables/SupportsService.html":{}}}],["this.supportmodel.findoneanddelete",{"_index":1429,"title":{},"body":{"injectables/SupportsService.html":{}}}],["this.supportsseed.create(topicsid",{"_index":216,"title":{},"body":{"injectables/AppSeed.html":{}}}],["this.supportsservice.create(createsupportdto",{"_index":1382,"title":{},"body":{"controllers/SupportsController.html":{}}}],["this.supportsservice.create(support",{"_index":1407,"title":{},"body":{"injectables/SupportsSeed.html":{}}}],["this.supportsservice.findall",{"_index":1383,"title":{},"body":{"controllers/SupportsController.html":{}}}],["this.supportsservice.findbytopicid(id",{"_index":1384,"title":{},"body":{"controllers/SupportsController.html":{}}}],["this.supportsservice.findone(id",{"_index":1385,"title":{},"body":{"controllers/SupportsController.html":{}}}],["this.supportsservice.remove(id",{"_index":1387,"title":{},"body":{"controllers/SupportsController.html":{}}}],["this.supportsservice.update(id",{"_index":1386,"title":{},"body":{"controllers/SupportsController.html":{}}}],["this.topicmodel(createtopicdto",{"_index":1508,"title":{},"body":{"injectables/TopicsService.html":{}}}],["this.topicmodel.find().exec",{"_index":1510,"title":{},"body":{"injectables/TopicsService.html":{}}}],["this.topicmodel.findbyidandupdate",{"_index":1512,"title":{},"body":{"injectables/TopicsService.html":{}}}],["this.topicmodel.findone",{"_index":1511,"title":{},"body":{"injectables/TopicsService.html":{}}}],["this.topicmodel.findoneanddelete",{"_index":1519,"title":{},"body":{"injectables/TopicsService.html":{}}}],["this.topicsseed.create(categoriesid",{"_index":215,"title":{},"body":{"injectables/AppSeed.html":{}}}],["this.topicsservice.create(createtopicdto",{"_index":1456,"title":{},"body":{"controllers/TopicsController.html":{}}}],["this.topicsservice.create(topic",{"_index":1492,"title":{},"body":{"injectables/TopicsSeed.html":{}}}],["this.topicsservice.findall",{"_index":1457,"title":{},"body":{"controllers/TopicsController.html":{}}}],["this.topicsservice.findone(id",{"_index":1458,"title":{},"body":{"controllers/TopicsController.html":{}}}],["this.topicsservice.incrementnumberofsupports(topicid",{"_index":1422,"title":{},"body":{"injectables/SupportsService.html":{}}}],["this.topicsservice.remove(id",{"_index":1460,"title":{},"body":{"controllers/TopicsController.html":{}}}],["this.topicsservice.update(id",{"_index":1459,"title":{},"body":{"controllers/TopicsController.html":{}}}],["this.update(id",{"_index":1516,"title":{},"body":{"injectables/TopicsService.html":{}}}],["this.usermodel(createuserdto",{"_index":1636,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":1638,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findbyidandupdate",{"_index":1640,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":1639,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findoneanddelete",{"_index":1642,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersseed.create(categoriesid",{"_index":211,"title":{},"body":{"injectables/AppSeed.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1574,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.create(user",{"_index":1619,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["this.usersservice.findall",{"_index":1575,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyemail(loginuserdto.email",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findone(id",{"_index":1576,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(user._doc._id",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(id",{"_index":1578,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(id",{"_index":1577,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":825,"title":{},"body":{"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/LocalStrategy.html":{}}}],["ticket",{"_index":478,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"miscellaneous/variables.html":{}}}],["tipográfica",{"_index":1486,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["tipográplesmente",{"_index":1485,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":479,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateTopicDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["topic",{"_index":934,"title":{"classes/Topic.html":{}},"body":{"classes/Like.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["topic.dto",{"_index":1454,"title":{},"body":{"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"classes/UpdateTopicDto.html":{}}}],["topic.dto.ts",{"_index":565,"title":{},"body":{"classes/CreateTopicDto.html":{},"classes/UpdateTopicDto.html":{},"coverage.html":{}}}],["topic.dto.ts:10",{"_index":580,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.dto.ts:11",{"_index":574,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.dto.ts:2",{"_index":572,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.dto.ts:3",{"_index":579,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.dto.ts:4",{"_index":571,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.dto.ts:5",{"_index":573,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.dto.ts:6",{"_index":578,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.dto.ts:7",{"_index":577,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.dto.ts:8",{"_index":575,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.dto.ts:9",{"_index":576,"title":{},"body":{"classes/CreateTopicDto.html":{}}}],["topic.name",{"_index":1467,"title":{},"body":{"modules/TopicsModule.html":{}}}],["topic.negativesupports",{"_index":1518,"title":{},"body":{"injectables/TopicsService.html":{}}}],["topic.positivesupports",{"_index":1517,"title":{},"body":{"injectables/TopicsService.html":{}}}],["topicdocument",{"_index":1441,"title":{},"body":{"classes/Topic.html":{},"injectables/TopicsService.html":{},"miscellaneous/typealiases.html":{}}}],["topicid",{"_index":507,"title":{},"body":{"classes/CreateLikeDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/Like.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"classes/Rejoinder.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"classes/Support.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"miscellaneous/variables.html":{}}}],["topicmodel",{"_index":1497,"title":{},"body":{"injectables/TopicsService.html":{}}}],["topics",{"_index":194,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["topics(categories",{"_index":1490,"title":{},"body":{"injectables/TopicsSeed.html":{}}}],["topics.controller",{"_index":1465,"title":{},"body":{"modules/TopicsModule.html":{}}}],["topics.length",{"_index":982,"title":{},"body":{"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"miscellaneous/variables.html":{}}}],["topics.map((topic",{"_index":1489,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["topics.service",{"_index":1453,"title":{},"body":{"controllers/TopicsController.html":{},"modules/TopicsModule.html":{}}}],["topics/topics.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/SupportsModule.html":{}}}],["topics/topics.service",{"_index":1396,"title":{},"body":{"modules/SupportsModule.html":{},"injectables/SupportsService.html":{},"injectables/TopicsSeed.html":{}}}],["topics[index",{"_index":981,"title":{},"body":{"injectables/LikesSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"miscellaneous/variables.html":{}}}],["topicschema",{"_index":1442,"title":{},"body":{"classes/Topic.html":{},"modules/TopicsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["topicschema.set('tojson",{"_index":1468,"title":{},"body":{"modules/TopicsModule.html":{}}}],["topicscontroller",{"_index":1444,"title":{"controllers/TopicsController.html":{}},"body":{"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"coverage.html":{}}}],["topicsid",{"_index":214,"title":{},"body":{"injectables/AppSeed.html":{}}}],["topicsmodule",{"_index":85,"title":{"modules/TopicsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules.html":{},"overview.html":{}}}],["topicsseed",{"_index":149,"title":{"injectables/TopicsSeed.html":{}},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{},"injectables/TopicsSeed.html":{},"coverage.html":{},"overview.html":{}}}],["topicsservice",{"_index":1395,"title":{"injectables/TopicsService.html":{}},"body":{"modules/SupportsModule.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"modules/TopicsModule.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"coverage.html":{},"overview.html":{}}}],["touch",{"_index":1765,"title":{},"body":{"index.html":{}}}],["transform",{"_index":302,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":737,"title":{},"body":{"classes/FileInfoVm.html":{},"dependencies.html":{}}}],["true",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppSeed.html":{},"injectables/MulterUtils.html":{},"injectables/SupportsSeed.html":{},"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":416,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"injectables/UsersSeed.html":{}}}],["twitter",{"_index":480,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":155,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateEventDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/CreateUserDto.html":{},"classes/CreatelocationDto.html":{},"classes/Event.html":{},"controllers/EventsController.html":{},"injectables/EventsSeed.html":{},"injectables/EventsService.html":{},"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{},"injectables/GridFsMulterConfigService.html":{},"injectables/JwtStrategy.html":{},"classes/Like.html":{},"controllers/LikesController.html":{},"injectables/LikesSeed.html":{},"injectables/LikesService.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"injectables/MulterUtils.html":{},"classes/Pin.html":{},"controllers/PinsController.html":{},"injectables/PinsSeed.html":{},"injectables/PinsService.html":{},"classes/Rejoinder.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersSeed.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesSeed.html":{},"injectables/RepliesService.html":{},"classes/Reply.html":{},"classes/Support.html":{},"controllers/SupportsController.html":{},"injectables/SupportsSeed.html":{},"injectables/SupportsService.html":{},"classes/Topic.html":{},"controllers/TopicsController.html":{},"injectables/TopicsSeed.html":{},"injectables/TopicsService.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1781,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":1526,"title":{},"body":{"classes/UpdateFileDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["types.enum",{"_index":801,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterUtils.html":{}}}],["types.enum.ts",{"_index":1707,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["types/multer",{"_index":1677,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1731,"title":{},"body":{"index.html":{}}}],["ui",{"_index":1698,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":1125,"title":{},"body":{"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["uma",{"_index":1480,"title":{},"body":{"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":1017,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":613,"title":{},"body":{"classes/Event.html":{},"classes/Like.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{}}}],["unit",{"_index":1745,"title":{},"body":{"index.html":{}}}],["update",{"_index":640,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["update(@param('id",{"_index":664,"title":{},"body":{"controllers/EventsController.html":{},"controllers/LikesController.html":{},"controllers/PinsController.html":{},"controllers/RejoindersController.html":{},"controllers/RepliesController.html":{},"controllers/SupportsController.html":{},"controllers/TopicsController.html":{},"controllers/UsersController.html":{}}}],["update(id",{"_index":649,"title":{},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"controllers/LikesController.html":{},"injectables/LikesService.html":{},"controllers/PinsController.html":{},"injectables/PinsService.html":{},"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateeventdto",{"_index":650,"title":{"classes/UpdateEventDto.html":{}},"body":{"controllers/EventsController.html":{},"injectables/EventsService.html":{},"classes/UpdateEventDto.html":{},"coverage.html":{}}}],["updateeventdto).exec",{"_index":717,"title":{},"body":{"injectables/EventsService.html":{}}}],["updatefiledto",{"_index":1523,"title":{"classes/UpdateFileDto.html":{}},"body":{"classes/UpdateFileDto.html":{},"coverage.html":{}}}],["updatelikedto",{"_index":951,"title":{"classes/UpdateLikeDto.html":{}},"body":{"controllers/LikesController.html":{},"injectables/LikesService.html":{},"classes/UpdateLikeDto.html":{},"coverage.html":{}}}],["updatelikedto).exec",{"_index":1007,"title":{},"body":{"injectables/LikesService.html":{}}}],["updatepindto",{"_index":1084,"title":{"classes/UpdatePinDto.html":{}},"body":{"controllers/PinsController.html":{},"injectables/PinsService.html":{},"classes/UpdatePinDto.html":{},"coverage.html":{}}}],["updatepindto).exec",{"_index":1203,"title":{},"body":{"injectables/PinsService.html":{}}}],["updaterejoinderdto",{"_index":1223,"title":{"classes/UpdateRejoinderDto.html":{}},"body":{"controllers/RejoindersController.html":{},"injectables/RejoindersService.html":{},"classes/UpdateRejoinderDto.html":{},"coverage.html":{}}}],["updaterejoinderdto).exec",{"_index":1279,"title":{},"body":{"injectables/RejoindersService.html":{}}}],["updatereplydto",{"_index":1289,"title":{"classes/UpdateReplyDto.html":{}},"body":{"controllers/RepliesController.html":{},"injectables/RepliesService.html":{},"classes/UpdateReplyDto.html":{},"coverage.html":{}}}],["updatereplydto).exec",{"_index":1340,"title":{},"body":{"injectables/RepliesService.html":{}}}],["updatesupportdto",{"_index":1376,"title":{"classes/UpdateSupportDto.html":{}},"body":{"controllers/SupportsController.html":{},"injectables/SupportsService.html":{},"classes/UpdateSupportDto.html":{},"coverage.html":{}}}],["updatesupportdto).exec",{"_index":1428,"title":{},"body":{"injectables/SupportsService.html":{}}}],["updatetopicdto",{"_index":1451,"title":{"classes/UpdateTopicDto.html":{}},"body":{"controllers/TopicsController.html":{},"injectables/TopicsService.html":{},"classes/UpdateTopicDto.html":{},"coverage.html":{}}}],["updatetopicdto).exec",{"_index":1513,"title":{},"body":{"injectables/TopicsService.html":{}}}],["updateuserdto",{"_index":1541,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["updateuserdto).exec",{"_index":1641,"title":{},"body":{"injectables/UsersService.html":{}}}],["upload",{"_index":750,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterUtils.html":{},"miscellaneous/enumerations.html":{}}}],["upload(@uploadedfiles",{"_index":809,"title":{},"body":{"controllers/FilesController.html":{}}}],["upload(files",{"_index":768,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploaddocs",{"_index":751,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploaddocs(@uploadedfiles",{"_index":819,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploaddocs(files",{"_index":775,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadedfiles",{"_index":784,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadimages",{"_index":752,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadimages(@uploadedfiles",{"_index":815,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadimages(files",{"_index":779,"title":{},"body":{"controllers/FilesController.html":{}}}],["uploadtypeenum",{"_index":1036,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["uploadtypesenum",{"_index":800,"title":{},"body":{"controllers/FilesController.html":{},"injectables/MulterUtils.html":{},"miscellaneous/enumerations.html":{}}}],["urbana",{"_index":320,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["uri",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["url",{"_index":900,"title":{},"body":{"injectables/GridFsMulterConfigService.html":{},"injectables/PinsService.html":{}}}],["useclass",{"_index":853,"title":{},"body":{"modules/FilesModule.html":{}}}],["usefactory",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{}}}],["useguards",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/FilesController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@delete(':id",{"_index":1568,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":1565,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@patch(':id",{"_index":1570,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":51,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":783,"title":{},"body":{"controllers/FilesController.html":{}}}],["useinterceptors(filesinterceptor('file",{"_index":807,"title":{},"body":{"controllers/FilesController.html":{}}}],["user",{"_index":253,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"classes/Event.html":{},"classes/Like.html":{},"injectables/LocalStrategy.html":{},"classes/Pin.html":{},"classes/Rejoinder.html":{},"classes/Reply.html":{},"classes/Support.html":{},"classes/Topic.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user._doc._id",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.comparepassword(loginuserdto.password",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.dto",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":583,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":592,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:2",{"_index":595,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["user.dto.ts:3",{"_index":597,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{}}}],["user.dto.ts:4",{"_index":594,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":598,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":596,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":590,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":593,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":591,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.get('password",{"_index":1596,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.ismodified('password",{"_index":1589,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.name",{"_index":1586,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.set",{"_index":1592,"title":{},"body":{"modules/UsersModule.html":{}}}],["userdocument",{"_index":1558,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":481,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreateLikeDto.html":{},"classes/CreatePinDto.html":{},"classes/CreateRejoinderDto.html":{},"classes/CreateReplyDto.html":{},"classes/CreateSupportDto.html":{},"classes/CreateTopicDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Like.html":{},"injectables/LikesSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"classes/Rejoinder.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"classes/Reply.html":{},"classes/Support.html":{},"injectables/SupportsSeed.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["usermodel",{"_index":1624,"title":{},"body":{"injectables/UsersService.html":{}}}],["usermodel:model",{"_index":1633,"title":{},"body":{"injectables/UsersService.html":{}}}],["usernamefield",{"_index":1018,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":188,"title":{},"body":{"injectables/AppSeed.html":{},"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users(categories",{"_index":1617,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["users.controller",{"_index":1583,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.length",{"_index":696,"title":{},"body":{"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["users.map((user",{"_index":1616,"title":{},"body":{"injectables/UsersSeed.html":{},"miscellaneous/variables.html":{}}}],["users.service",{"_index":1572,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["users/dto/login",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/users.module",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedsModule.html":{}}}],["users/users.service",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersSeed.html":{}}}],["users[index",{"_index":695,"title":{},"body":{"injectables/EventsSeed.html":{},"injectables/LikesSeed.html":{},"injectables/PinsSeed.html":{},"injectables/RejoindersSeed.html":{},"injectables/RepliesSeed.html":{},"injectables/SupportsSeed.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["userschema",{"_index":1559,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userschema.methods",{"_index":1593,"title":{},"body":{"modules/UsersModule.html":{}}}],["userschema.pre('save",{"_index":1587,"title":{},"body":{"modules/UsersModule.html":{}}}],["userschema.set('tojson",{"_index":1597,"title":{},"body":{"modules/UsersModule.html":{}}}],["userscontroller",{"_index":1561,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersid",{"_index":210,"title":{},"body":{"injectables/AppSeed.html":{}}}],["usersmodule",{"_index":86,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/SeedsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersseed",{"_index":146,"title":{"injectables/UsersSeed.html":{}},"body":{"injectables/AppSeed.html":{},"modules/SeedsModule.html":{},"injectables/UsersSeed.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":248,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["utils",{"_index":1022,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["utils.service",{"_index":799,"title":{},"body":{"controllers/FilesController.html":{}}}],["utils.service.ts",{"_index":1021,"title":{},"body":{"injectables/MulterUtils.html":{},"coverage.html":{}}}],["utils.service.ts:21",{"_index":1026,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["validate",{"_index":913,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":1014,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":915,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":246,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(loginuserdto",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":325,"title":{},"body":{"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1652,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1792,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["views",{"_index":570,"title":{},"body":{"classes/CreateTopicDto.html":{},"classes/Topic.html":{},"injectables/TopicsSeed.html":{},"miscellaneous/variables.html":{}}}],["visuais",{"_index":318,"title":{},"body":{"injectables/CategoriesSeed.html":{},"miscellaneous/variables.html":{}}}],["vm.model",{"_index":742,"title":{},"body":{"classes/FileResponseVm.html":{},"controllers/FilesController.html":{},"injectables/FilesService.html":{}}}],["vm.model.ts",{"_index":722,"title":{},"body":{"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{},"coverage.html":{}}}],["vm.model.ts:12",{"_index":729,"title":{},"body":{"classes/FileInfoVm.html":{}}}],["vm.model.ts:16",{"_index":731,"title":{},"body":{"classes/FileInfoVm.html":{}}}],["vm.model.ts:20",{"_index":733,"title":{},"body":{"classes/FileInfoVm.html":{}}}],["vm.model.ts:24",{"_index":730,"title":{},"body":{"classes/FileInfoVm.html":{}}}],["vm.model.ts:5",{"_index":741,"title":{},"body":{"classes/FileResponseVm.html":{}}}],["vm.model.ts:8",{"_index":732,"title":{},"body":{"classes/FileInfoVm.html":{},"classes/FileResponseVm.html":{}}}],["void",{"_index":1034,"title":{},"body":{"injectables/MulterUtils.html":{}}}],["watch",{"_index":1740,"title":{},"body":{"index.html":{}}}],["website",{"_index":1769,"title":{},"body":{"index.html":{}}}],["whatsapp",{"_index":482,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["world",{"_index":224,"title":{},"body":{"injectables/AppService.html":{}}}],["writeconcern",{"_index":632,"title":{},"body":{"classes/Event.html":{},"classes/User.html":{}}}],["yargs",{"_index":1700,"title":{},"body":{"dependencies.html":{}}}],["you'd",{"_index":1760,"title":{},"body":{"index.html":{}}}],["zipcode",{"_index":483,"title":{},"body":{"classes/CreateEventDto.html":{},"classes/CreatePinDto.html":{},"classes/Event.html":{},"injectables/EventsSeed.html":{},"classes/Pin.html":{},"injectables/PinsSeed.html":{},"miscellaneous/variables.html":{}}}],["zoom",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/EventsModule.html":{},"modules/FilesModule.html":{},"modules/LikesModule.html":{},"modules/PinsModule.html":{},"modules/RejoindersModule.html":{},"modules/RepliesModule.html":{},"modules/SeedsModule.html":{},"modules/SupportsModule.html":{},"modules/TopicsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getProfile\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getProfile\n                        \n                        \n                    \n                \n            \n            \n                \ngetProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Get, Post, UseGuards, Body } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { LocalAuthGuard } from './auth/local-auth.guard'\nimport { JwtAuthGuard } from './auth/jwt-auth.guard'\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService, private authService: AuthService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user)\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nLikesModule\n\nLikesModule\n\nAppModule -->\n\nLikesModule->AppModule\n\n\n\n\n\nPinsModule\n\nPinsModule\n\nAppModule -->\n\nPinsModule->AppModule\n\n\n\n\n\nRejoindersModule\n\nRejoindersModule\n\nAppModule -->\n\nRejoindersModule->AppModule\n\n\n\n\n\nRepliesModule\n\nRepliesModule\n\nAppModule -->\n\nRepliesModule->AppModule\n\n\n\n\n\nSeedsModule\n\nSeedsModule\n\nAppModule -->\n\nSeedsModule->AppModule\n\n\n\n\n\nSupportsModule\n\nSupportsModule\n\nAppModule -->\n\nSupportsModule->AppModule\n\n\n\n\n\nTopicsModule\n\nTopicsModule\n\nAppModule -->\n\nTopicsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CaslModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            LikesModule\n                        \n                        \n                            PinsModule\n                        \n                        \n                            RejoindersModule\n                        \n                        \n                            RepliesModule\n                        \n                        \n                            SeedsModule\n                        \n                        \n                            SupportsModule\n                        \n                        \n                            TopicsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CategoriesModule } from './categories/categories.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\nimport { FilesModule } from './files/files.module';\nimport { ConfigModule } from '@nestjs/config';\nimport { ConfigService } from '@nestjs/config';\nimport { CaslModule } from './casl/casl.module';\nimport { PinsModule } from './pins/pins.module';\nimport configuration from './config/configuration';\nimport { SeedsModule } from './seeds/seeds.module';\nimport { EventsModule } from './events/events.module';\nimport { TopicsModule } from './topics/topics.module';\nimport { SupportsModule } from './supports/supports.module';\nimport { RepliesModule } from './replies/replies.module';\nimport { LikesModule } from './likes/likes.module';\nimport { RejoindersModule } from './rejoinders/rejoinders.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { join } from 'path';\n\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'client'),\n    },\n    {\n      rootPath: join(__dirname, '..', 'documentation'),\n      serveRoot: '/documentation'\n    }),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n      serveRoot: '/documentation'\n    }),\n    ConfigModule.forRoot({\n      load: [configuration],\n      envFilePath: [\n        '.env.local',\n        '.env',\n        '.env.development.local',\n        '.env.development'\n      ],\n      isGlobal: true,\n    }),\n    MongooseModule.forRootAsync({\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('mongourl'),\n      }),\n      inject: [ConfigService],\n    }),\n    CategoriesModule,\n    UsersModule,\n    AuthModule,\n    FilesModule,\n    CaslModule,\n    PinsModule,\n    SeedsModule,\n    EventsModule,\n    TopicsModule,\n    SupportsModule,\n    RepliesModule,\n    LikesModule,\n    RejoindersModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppSeed.html":{"url":"injectables/AppSeed.html","title":"injectable - AppSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.app.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, categoriesSeed: CategoriesSeed, usersSeed: UsersSeed, pinsSeed: PinsSeed, eventsSeed: EventsSeed, topicsSeed: TopicsSeed, supportsSeed: SupportsSeed, repliesSeed: RepliesSeed, likesSeed: LikesSeed, rejoindersSeed: RejoindersSeed)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.app.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        categoriesSeed\n                                                  \n                                                        \n                                                                        CategoriesSeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersSeed\n                                                  \n                                                        \n                                                                        UsersSeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pinsSeed\n                                                  \n                                                        \n                                                                        PinsSeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventsSeed\n                                                  \n                                                        \n                                                                        EventsSeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        topicsSeed\n                                                  \n                                                        \n                                                                        TopicsSeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        supportsSeed\n                                                  \n                                                        \n                                                                        SupportsSeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repliesSeed\n                                                  \n                                                        \n                                                                        RepliesSeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        likesSeed\n                                                  \n                                                        \n                                                                        LikesSeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rejoindersSeed\n                                                  \n                                                        \n                                                                        RejoindersSeed\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'create:seeds', describe: 'create a app seeds', autoExit: true})\n                \n            \n\n            \n                \n                    Defined in src/seeds/seeds.app.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Command } from 'nestjs-command';\nimport { Injectable } from '@nestjs/common';\nimport { CategoriesSeed } from './seeds.categories';\nimport { UsersSeed } from './seeds.users';\nimport { PinsSeed } from './seeds.pins';\nimport * as mongoose from 'mongoose';\nimport { ConfigService } from '@nestjs/config';\nimport { EventsSeed } from './seeds.events';\nimport { TopicsSeed } from './seeds.topics';\nimport { SupportsSeed } from './seeds.supports';\nimport { RepliesSeed } from './seeds.replies';\nimport { LikesSeed } from './seeds.likes';\nimport { RejoindersSeed } from './seeds.rejoinders';\n\n\n@Injectable()\nexport class AppSeed {\n    constructor(\n        private readonly configService: ConfigService,\n        private readonly categoriesSeed: CategoriesSeed,\n        private readonly usersSeed: UsersSeed,\n        private readonly pinsSeed: PinsSeed,\n        private readonly eventsSeed: EventsSeed,\n        private readonly topicsSeed: TopicsSeed,\n        private readonly supportsSeed: SupportsSeed,\n        private readonly repliesSeed: RepliesSeed,\n        private readonly likesSeed: LikesSeed,\n        private readonly rejoindersSeed: RejoindersSeed,\n\n    ) { }\n\n    @Command({\n        command: 'create:seeds',\n        describe: 'create a app seeds',\n        autoExit: true\n    })\n    async create() {\n        await mongoose.connect(this.configService.get('mongourl'));\n        const db = mongoose.connection.db;\n        for (const collection of await db.listCollections().toArray())\n            switch (collection.name) {\n                case 'categories': await db.dropCollection('categories'); break;\n                case 'users': await db.dropCollection('users'); break;\n                case 'pins': await db.dropCollection('pins'); break;\n                case 'events': await db.dropCollection('events'); break;\n                case 'topics': await db.dropCollection('topics'); break;\n                case 'supports': await db.dropCollection('supports'); break;\n                case 'replies': await db.dropCollection('replies'); break;\n                case 'likes': await db.dropCollection('likes'); break;\n                case 'rejoinders': await db.dropCollection('rejoinders'); break;\n                default: console.log(`The ${collection.name} collection was maintained.`);\n            }\n        await mongoose.connection.close();\n        const categoriesId = await this.categoriesSeed.create();\n        const usersId = await this.usersSeed.create(categoriesId);\n        await this.pinsSeed.create(categoriesId, usersId);\n        await this.eventsSeed.create(categoriesId, usersId);\n        const topicsId = await this.topicsSeed.create(categoriesId, usersId);\n        // await this.supportsSeed.create(topicsId, usersId);\n        const repliesId = await this.repliesSeed.create(topicsId, usersId);\n        // await this.likesSeed.create(topicsId, repliesId, usersId);\n        await this.rejoindersSeed.create(topicsId, repliesId, usersId);\n\n\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigModule, ConfigService } from '@nestjs/config';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        secret: configService.get('supersecret'),\n        signOptions: { expiresIn: '2592000s' },\n      }),\n      inject: [ConfigService],\n    })\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(loginUserDto: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { LoginUserDto } from '../users/dto/login-user.dto';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService\n  ) { }\n\n  async validateUser(loginUserDto: LoginUserDto): Promise {\n    const user = await this.usersService.findByEmail(loginUserDto.email);\n    if (user && await user.comparePassword(loginUserDto.password)) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: any) {\n    const User = await this.usersService.findOne(user._doc._id);\n    return {\n      token: this.jwtService.sign({ id: user._doc._id }),\n      user: User\n    }\n    \n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CaslAbilityFactory.html":{"url":"classes/CaslAbilityFactory.html","title":"class - CaslAbilityFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CaslAbilityFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/casl/casl-ability.factory.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CaslAbilityFactory {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CaslModule.html":{"url":"modules/CaslModule.html","title":"module - CaslModule","body":"\n                   \n\n\n\n\n    Modules\n    CaslModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/casl/casl.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class CaslModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body } from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\n\n@Controller('categories')\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @Post()\n  async create(@Body() createCategoryDto: CreateCategoryDto) {\n    return (await this.categoriesService.create(createCategoryDto));\n  }\n\n  @Get()\n  findAll() {\n    return this.categoriesService.findAll();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoriesService \n\nCategoriesService \n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CategoriesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesController } from './categories.controller';\nimport { Category, CategorySchema } from './schemas/category.schema';\n\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Category.name,\n        useFactory: () => {\n          CategorySchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return CategorySchema;\n        },\n      },\n    ])\n  ],\n  controllers: [CategoriesController],\n  providers: [CategoriesService],\n  exports: [CategoriesService],\n})\nexport class CategoriesModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesSeed.html":{"url":"injectables/CategoriesSeed.html","title":"injectable - CategoriesSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.categories.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoriesService: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.categories.ts:134\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoriesService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in src/seeds/seeds.categories.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { CategoriesService } from '../categories/categories.service';\n\nexport const categories = [\n    {\n        label: \"Artes visuais, arte urbana e arte digital\",\n        color: \"#633D35\",\n        legend: \"a\",\n        value: 1,\n        icon: \"1.png\"\n    },\n    {\n        label: \"Escultura e Artesanato\",\n        color: \"#AA4245\",\n        legend: \"e\",\n        value: 2,\n        icon: \"2.png\"\n    },\n    {\n        label: \"Dança\",\n        color: \"#DF694A\",\n        legend: \"d\",\n        value: 3,\n        icon: \"3.png\"\n    },\n    {\n        label: \"Teatro e Circo\",\n        color: \"#E0BC68\",\n        legend: \"t\",\n        value: 4,\n        icon: \"4.png\"\n    },\n    {\n        label: \"Cinema e Audiovisual\",\n        color: \"#EFBC5E\",\n        legend: \"c\",\n        value: 5,\n        icon: \"5.png\"\n    },\n    {\n        label: \"Fotografia\",\n        color: \"#62A06B\",\n        legend: \"f\",\n        value: 6,\n        icon: \"6.png\"\n    },\n    {\n        label: \"Literatura\",\n        color: \"#528443\",\n        legend: \"l\",\n        value: 7,\n        icon: \"7.png\"\n    },\n    {\n        label: \"Design e Moda\",\n        color: \"#2C4A25\",\n        legend: \"d\",\n        value: 8,\n        icon: \"8.png\"\n    },\n    {\n        label: \"Música\",\n        color: \"#0E68D8\",\n        legend: \"m\",\n        value: 9,\n        icon: \"9.png\"\n    },\n    {\n        label: \"Patrimônio cultural e Museologia\",\n        color: \"#53A4DF\",\n        legend: \"p\",\n        value: 10,\n        icon: \"10.png\"\n    },\n    {\n        label: \"Cultura popular, Folclore e Capoeira\",\n        color: \"#95C6DC\",\n        legend: \"c\",\n        value: 11,\n        icon: \"11.png\"\n    },\n    {\n        label: \"Gastronomia\",\n        color: \"#D390A2\",\n        legend: \"g\",\n        value: 12,\n        icon: \"12.png\"\n    },\n    {\n        label: \"Cultura Afro-brasileira\",\n        color: \"#CC748C\",\n        legend: \"c\",\n        value: 13,\n        icon: \"13.png\"\n    },\n    {\n        label: \"Cultura Indígena\",\n        color: \"#C95676\",\n        legend: \"c\",\n        value: 14,\n        icon: \"15.png\"\n    },\n    {\n        label: \"Gestores Públicos\",\n        color: \"#BB7165\",\n        legend: \"g\",\n        value: 15,\n        icon: \"15.png\"\n    },\n    {\n        label: \"Produtor Cultural\",\n        color: \"#AA4245\",\n        legend: \"p\",\n        value: 16,\n        icon: \"16.png\"\n    },\n    {\n        label: \"Espaços culturais\",\n        color: \"#633D35\",\n        legend: \"e\",\n        value: 17,\n        icon: \"17.png\"\n    },\n    {\n        label: \"Espaços públicos\",\n        color: \"#DF694A\",\n        legend: \"e\",\n        value: 18,\n        icon: \"18.png\"\n    }\n];\n\n@Injectable()\nexport class CategoriesSeed {\n    constructor(private readonly categoriesService: CategoriesService) { }\n\n    async create() {\n        console.log(\"Seeding categories ...\");\n        const promiseArray = categories.map((category) => this.categoriesService.create(category));\n        try {\n            return (await Promise.all(promiseArray))\n                .map((response) => {\n                    console.log(response);\n                    return response;\n                });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Category, CategoryDocument } from './schemas/category.schema';\nimport { CreateCategoryDto } from './dto/create-category.dto';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(@InjectModel(Category.name) private categoryModel: Model) {}\n\n  async create(createCategoryDto: CreateCategoryDto): Promise {\n    const createdCategory = new this.categoryModel(createCategoryDto);\n    return (await createdCategory.save()).toJSON().id;\n  }\n\n  async findAll(): Promise {\n    return this.categoryModel.find().exec();\n  }\n\n  async remove(id: string): Promise{\n    return await this.categoryModel.findOneAndDelete({ _id: id }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/schemas/category.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                legend\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            legend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CategoryDocument = Category & Document;\n\n@Schema()\nexport class Category {\n  @Prop()\n  color: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  legend: string;\n\n  @Prop()\n  value: number;\n\n  @Prop()\n  icon: string;\n}\n\nexport const CategorySchema = SchemaFactory.createForClass(Category)\n  .set('toJSON', {\n    transform: function (doc, ret, options) {\n      ret.id = ret._id;\n      delete ret._id;\n      delete ret.__v;\n    }\n  });\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dto/create-category.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                legend\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            legend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCategoryDto {\n    color: string;\n    label: string;\n    legend: string;\n    value: number;\n    icon: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateEventDto.html":{"url":"classes/CreateEventDto.html","title":"class - CreateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/create-event.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                city\n                            \n                            \n                                date\n                            \n                            \n                                description\n                            \n                            \n                                facebook\n                            \n                            \n                                imageIds\n                            \n                            \n                                instagram\n                            \n                            \n                                neighborhood\n                            \n                            \n                                number\n                            \n                            \n                                street\n                            \n                            \n                                ticket\n                            \n                            \n                                title\n                            \n                            \n                                twitter\n                            \n                            \n                                userId\n                            \n                            \n                                whatsapp\n                            \n                            \n                                zipcode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebook\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instagram\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            neighborhood\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ticket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            whatsapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zipcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/events/dto/create-event.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateEventDto {\n    categoryId: string;\n    userId: string;\n    imageIds: string[];\n    title: string;\n    date: Date;\n    street: string;\n    neighborhood: string\n    city: string;\n    zipcode: number;\n    number: number;\n    ticket: number;\n    description: string;\n    facebook: string;\n    instagram: string;\n    whatsapp: string;\n    twitter: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateFileDto.html":{"url":"classes/CreateFileDto.html","title":"class - CreateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/create-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateFileDto {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateLikeDto.html":{"url":"classes/CreateLikeDto.html","title":"class - CreateLikeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateLikeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/likes/dto/create-like.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                replyId\n                            \n                            \n                                topicId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/likes/dto/create-like.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topicId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/likes/dto/create-like.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/likes/dto/create-like.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateLikeDto {\n    userId: string;\n    topicId: string;\n    replyId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePinDto.html":{"url":"classes/CreatePinDto.html","title":"class - CreatePinDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePinDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pins/dto/create-pin.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                city\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                facebook\n                            \n                            \n                                imageIds\n                            \n                            \n                                instagram\n                            \n                            \n                                lat\n                            \n                            \n                                long\n                            \n                            \n                                neighborhood\n                            \n                            \n                                number\n                            \n                            \n                                phone\n                            \n                            \n                                street\n                            \n                            \n                                title\n                            \n                            \n                                twitter\n                            \n                            \n                                userId\n                            \n                            \n                                whatsapp\n                            \n                            \n                                zipcode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebook\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instagram\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            neighborhood\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            whatsapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zipcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-pin.dto.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatePinDto {\n    categoryId: string;\n    userId: string;\n    imageIds: string[];\n    title: string;\n    email: string;\n    phone: number;\n    street: string;\n    number: number;\n    neighborhood: string;\n    city: string;\n    zipcode: number;\n    description: string;\n    lat: number;\n    long: number;\n    facebook: string;\n    instagram: string;\n    twitter: string;\n    whatsapp: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRejoinderDto.html":{"url":"classes/CreateRejoinderDto.html","title":"class - CreateRejoinderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRejoinderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rejoinders/dto/create-rejoinder.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                replyId\n                            \n                            \n                                topicId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/dto/create-rejoinder.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/dto/create-rejoinder.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/dto/create-rejoinder.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topicId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/dto/create-rejoinder.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/dto/create-rejoinder.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateRejoinderDto {\n    userId: string;\n    topicId: string;\n    replyId: string;\n    content: string;\n    createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReplyDto.html":{"url":"classes/CreateReplyDto.html","title":"class - CreateReplyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReplyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/replies/dto/create-reply.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                numberOfLikes\n                            \n                            \n                                topicId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/replies/dto/create-reply.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/replies/dto/create-reply.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfLikes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/replies/dto/create-reply.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topicId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/replies/dto/create-reply.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/replies/dto/create-reply.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateReplyDto {\n    userId: string;\n    topicId: string;\n    content: string;\n    numberOfLikes: number;\n    createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateSupportDto.html":{"url":"classes/CreateSupportDto.html","title":"class - CreateSupportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateSupportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supports/dto/create-support.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                topicId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/supports/dto/create-support.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topicId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/supports/dto/create-support.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/supports/dto/create-support.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateSupportDto {\n    userId: string;\n    topicId: string;\n    status: boolean;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTopicDto.html":{"url":"classes/CreateTopicDto.html","title":"class - CreateTopicDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTopicDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/topics/dto/create-topic.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriesTagged\n                            \n                            \n                                categoryId\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                negativeSupports\n                            \n                            \n                                numberOfReplies\n                            \n                            \n                                positiveSupports\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                views\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoriesTagged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            negativeSupports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfReplies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positiveSupports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/topics/dto/create-topic.dto.ts:10\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateTopicDto {\n    categoryId: string;\n    userId: string;\n    categoriesTagged: string[];\n    content: string;\n    title: string;\n    positiveSupports: number;\n    negativeSupports: number;\n    numberOfReplies: number;\n    views: number;\n    createdAt: Date;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ageRange\n                            \n                            \n                                avatarId\n                            \n                            \n                                categoryId\n                            \n                            \n                                education\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ageRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatarId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            education\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    gender: string;\n    ageRange: string;\n    education: string;\n    avatarId: string;\n    categoryId: string\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatelocationDto.html":{"url":"classes/CreatelocationDto.html","title":"class - CreatelocationDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatelocationDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pins/dto/create-location.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                city\n                            \n                            \n                                county\n                            \n                            \n                                number\n                            \n                            \n                                postalcode\n                            \n                            \n                                state\n                            \n                            \n                                street\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-location.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            county\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-location.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-location.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            postalcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-location.dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-location.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/pins/dto/create-location.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreatelocationDto {\n    street: string;\n    county: string;\n    city: string;\n    state: string;\n    number: number;\n    postalcode: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Event.html":{"url":"classes/Event.html","title":"class - Event","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Event\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/schemas/event.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                city\n                            \n                            \n                                date\n                            \n                            \n                                description\n                            \n                            \n                                facebook\n                            \n                            \n                                imageIds\n                            \n                            \n                                instagram\n                            \n                            \n                                neighborhood\n                            \n                            \n                                number\n                            \n                            \n                                street\n                            \n                            \n                                ticket\n                            \n                            \n                                title\n                            \n                            \n                                twitter\n                            \n                            \n                                userId\n                            \n                            \n                                whatsapp\n                            \n                            \n                                zipcode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Category'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebook\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instagram\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            neighborhood\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ticket\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:57\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'User'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            whatsapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zipcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/events/schemas/event.schema.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\nexport type EventDocument = Event & Document;\n\n@Schema({\n  writeConcern: {}\n})\nexport class Event {\n    \n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Category' })\n  categoryId: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n  userId: string;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'fs.files'}] })\n  imageIds: string[];\n  \n  @Prop()\n  title: string;\n\n  @Prop()\n  date: Date;\n\n  @Prop()\n  street: string;\n\n  @Prop()\n  neighborhood: string\n\n  @Prop()\n  city: string;\n\n  @Prop()\n  zipcode: number; \n\n  @Prop()\n  number: number;\n\n  @Prop()\n  ticket: number;\n\n  @Prop()\n  description: string;\n\n  @Prop()\n  facebook: string;\n\n  @Prop()\n  instagram: string;\n\n  @Prop()\n  whatsapp: string;\n\n  @Prop()\n  twitter: string;\n\n}\n\nexport const EventSchema = SchemaFactory.createForClass(Event);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EventsController.html":{"url":"controllers/EventsController.html","title":"controller - EventsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EventsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/events.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                events\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createEventDto: CreateEventDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDto\n                                    \n                                                CreateEventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateEventDto: UpdateEventDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/events/events.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEventDto\n                                    \n                                                UpdateEventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { EventsService } from './events.service';\nimport { CreateEventDto } from './dto/create-event.dto';\nimport { UpdateEventDto } from './dto/update-event.dto';\n\n@Controller('events')\nexport class EventsController {\n  constructor(private readonly eventsService: EventsService) {}\n\n  @Post()\n  create(@Body() createEventDto: CreateEventDto) {\n    return this.eventsService.create(createEventDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.eventsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.eventsService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateEventDto: UpdateEventDto) {\n    return this.eventsService.update(id, updateEventDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.eventsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EventsModule.html":{"url":"modules/EventsModule.html","title":"module - EventsModule","body":"\n                   \n\n\n\n\n    Modules\n    EventsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_EventsModule_providers\n\n\n\n\nEventsService \n\nEventsService \n\n\n\nEventsModule\n\nEventsModule\n\nEventsService  -->\n\nEventsModule->EventsService \n\n\n\n\n\nEventsService\n\nEventsService\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/events/events.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            EventsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            EventsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EventsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { EventsService } from './events.service';\nimport { EventsController } from './events.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Event, EventSchema } from './schemas/event.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Event.name,\n        useFactory: () => {\n          EventSchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return EventSchema;\n        },\n      },\n    ])\n  ],\n  controllers: [EventsController],\n  providers: [EventsService],\n  exports: [EventsService],\n\n})\nexport class EventsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsSeed.html":{"url":"injectables/EventsSeed.html","title":"injectable - EventsSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventsSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.events.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventsService: EventsService)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.events.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventsService\n                                                  \n                                                        \n                                                                        EventsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(categories, users)\n                \n            \n\n\n            \n                \n                    Defined in src/seeds/seeds.events.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    users\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { EventsService } from '../events/events.service';\n\nexport const events = (categories, users) => {\n    const events = [\n        {\n            title: \"Event 1\",\n            date: new Date(),\n            street: \"rua 1\",\n            neighborhood: \"bairro 1\",\n            city: 'cidade 1',\n            zipcode: 69303410,\n            number: 1,\n            ticket: 1,\n            description: \"descrição 1\",\n            facebook: \"https://www.facebook.com/\",\n            instagram: \"https://www.instagram.com/\",\n            whatsapp: \"https://www.whatsapp.com/\",\n            twitter: \"https://www.twitter.com/\"\n        },\n        {\n            title: \"Event 2\",\n            date: new Date(),\n            street: \"rua 2\",\n            neighborhood: \"bairro 2\",\n            city: 'cidade 2',\n            zipcode: 69303420,\n            number: 2,\n            ticket: 2,\n            description: \"descrição 2\",\n            facebook: \"https://www.facebook.com/\",\n            instagram: \"https://www.instagram.com/\",\n            whatsapp: \"https://www.whatsapp.com/\",\n            twitter: \"https://www.twitter.com/\"\n        }\n    ]\n    return events.map((event, index) => {\n        return {\n            ...event,\n            categoryId: categories[index % categories.length],\n            userId: users[index % users.length],\n            imageIds: ['60689bc939f8713cc87acb83']\n        }\n    })\n};\n\n@Injectable()\nexport class EventsSeed {\n    constructor(private readonly eventsService: EventsService) { }\n\n    async create(categories, users) {\n        console.log(\"Seeding events ...\");\n        const promiseArray = events(categories, users)\n            .map((event) => this.eventsService.create(event));\n        try {\n            return (await Promise.all(promiseArray))\n                .map((response) => {\n                    console.log(response);\n                    return response;\n                });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventsService.html":{"url":"injectables/EventsService.html","title":"injectable - EventsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EventsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/events.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/events/events.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createEventDto: CreateEventDto)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createEventDto\n                                    \n                                                CreateEventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateEventDto: UpdateEventDto)\n                \n            \n\n\n            \n                \n                    Defined in src/events/events.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateEventDto\n                                    \n                                                UpdateEventDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { CreateEventDto } from './dto/create-event.dto';\nimport { UpdateEventDto } from './dto/update-event.dto';\nimport { Event, EventDocument } from './schemas/event.schema';\n\n@Injectable()\nexport class EventsService {\n  constructor(\n    @InjectModel(Event.name) private readonly eventModel: Model\n  ) { }\n  async create(createEventDto: CreateEventDto): Promise {\n    const createdEvent = new this.eventModel(createEventDto);\n      return (await createdEvent.save()).toJSON().id;\n  }\n\n  findAll(): Promise {\n    return this.eventModel.find().exec();\n  }\n\n  async findOne(id: string): Promise {\n    return await this.eventModel.findOne({ _id: id });\n  }\n\n  update(id: string, updateEventDto: UpdateEventDto): Promise {\n    return this.eventModel.findByIdAndUpdate({ _id: id }, updateEventDto).exec();\n  }\n\n  async remove(id: string) {\n    return await this.eventModel.findOneAndDelete({ _id: id }).exec();\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/File.html":{"url":"classes/File.html","title":"class - File","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  File\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/entities/file.entity.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class File {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileInfoVm.html":{"url":"classes/FileInfoVm.html","title":"class - FileInfoVm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileInfoVm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/file-info-vm.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                chunkSize\n                            \n                            \n                                contentType\n                            \n                            \n                                filename\n                            \n                            \n                                length\n                            \n                            \n                                md5\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chunkSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/files/file-info-vm.model.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            contentType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/files/file-info-vm.model.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filename\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/files/file-info-vm.model.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            length\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/files/file-info-vm.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            md5\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()@Expose()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/files/file-info-vm.model.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\n\nexport class FileInfoVm {\n\n    @ApiProperty()\n    @Expose()\n    length: number;\n\n    @ApiProperty()\n    @Expose()\n    chunkSize: number;\n\n    @ApiProperty()\n    @Expose()\n    filename: string;    \n\n    @ApiProperty()\n    @Expose()\n    md5: string;\n\n    @ApiProperty()\n    @Expose()\n    contentType: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileResponseVm.html":{"url":"classes/FileResponseVm.html","title":"class - FileResponseVm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileResponseVm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/file-response-vm.model.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                file\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            file\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FileInfoVm\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({type: FileInfoVm})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/files/file-response-vm.model.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/files/file-response-vm.model.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { FileInfoVm } from './file-info-vm.model';\n\nexport class FileResponseVm {\n    @ApiProperty() message: string;\n\n    @ApiProperty({ type: FileInfoVm })\n    file: FileInfoVm;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/FilesController.html":{"url":"controllers/FilesController.html","title":"controller - FilesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  FilesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /attachment/files\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                downloadFile\n                            \n                            \n                                    Async\n                                getFile\n                            \n                            \n                                    Async\n                                getFileInfo\n                            \n                            \n                                upload\n                            \n                            \n                                uploadDocs\n                            \n                            \n                                uploadImages\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('delete/:id')@ApiBadRequestResponse({type: ApiException})@ApiCreatedResponse({type: FileResponseVm})\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            downloadFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    downloadFile(id: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('download/:id')@ApiBadRequestResponse({type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFile(id: string, res)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiBadRequestResponse({type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getFileInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFileInfo(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('info/:id')@ApiBadRequestResponse({type: ApiException})\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            upload\n                        \n                        \n                    \n                \n            \n            \n                \nupload(files)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('')@ApiConsumes('multipart/form-data')@ApiBody({description: 'Attachment Files'})@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadDocs\n                        \n                        \n                    \n                \n            \n            \n                \nuploadDocs(files)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('docs')@ApiConsumes('multipart/form-data')@ApiBody({description: 'Attachment Docs'})@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            uploadImages\n                        \n                        \n                    \n                \n            \n            \n                \nuploadImages(files)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('images')@ApiConsumes('multipart/form-data')@ApiBody({description: 'Attachment Images'})@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/files/files.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        \nimport { Post, Get, Param, Res, Controller, UseInterceptors, UseGuards, UploadedFiles, HttpException, HttpStatus } from '@nestjs/common';\nimport { ApiCreatedResponse, ApiConsumes, ApiBody, ApiBadRequestResponse, ApiTags } from '@nestjs/swagger';\nimport { FilesInterceptor } from '@nestjs/platform-express';\nimport { FilesService } from './files.service';\nimport { FileResponseVm } from './file-response-vm.model'\nimport { MulterUtils } from './multer-utils.service';\nimport { UploadTypesEnum } from './upload-types.enum';\n\nconst ApiException = () => class {\n    statusCode: HttpStatus;\n    message: any;\n    error: string;\n};\n\n@Controller('/attachment/files')\n@ApiTags('Attachments')\nexport class FilesController {\n    constructor(private filesService: FilesService) { }\n\n    @Post('')\n    @ApiConsumes('multipart/form-data')\n    @ApiBody({ description: 'Attachment Files' })\n    @UseInterceptors(FilesInterceptor('file', +3, MulterUtils.getConfig(UploadTypesEnum.ANY)))\n    upload(@UploadedFiles() files) {\n        return files.map(file => file.id);\n    }\n\n    @Post('images')\n    @ApiConsumes('multipart/form-data')\n    @ApiBody({ description: 'Attachment Images' })\n    @UseInterceptors(FilesInterceptor('file', +3, MulterUtils.getConfig(UploadTypesEnum.IMAGES)))\n    uploadImages(@UploadedFiles() files) {\n        return files.map(file => file.id);\n    }\n\n    @Post('docs')\n    @ApiConsumes('multipart/form-data')\n    @ApiBody({ description: 'Attachment Docs' })\n    @UseInterceptors(FilesInterceptor('file', +3, MulterUtils.getConfig(UploadTypesEnum.DOCS)))\n    uploadDocs(@UploadedFiles() files) {\n        return files.map(file => file.id);\n    }\n\n    @Get('info/:id')\n    @ApiBadRequestResponse({ type: ApiException })\n    async getFileInfo(@Param('id') id: string): Promise {\n        const file = await this.filesService.findInfo(id)\n        const filestream = await this.filesService.readStream(id)\n        if (!filestream) {\n            throw new HttpException('An error occurred while retrieving file info', HttpStatus.EXPECTATION_FAILED)\n        }\n        return {\n            message: 'File has been detected',\n            file: file\n        }\n    }\n\n    @Get(':id')\n    @ApiBadRequestResponse({ type: ApiException })\n    async getFile(@Param('id') id: string, @Res() res) {\n        const file = await this.filesService.findInfo(id)\n        const filestream = await this.filesService.readStream(id)\n        if (!filestream) {\n            throw new HttpException('An error occurred while retrieving file', HttpStatus.EXPECTATION_FAILED)\n        }\n        res.header('Content-Type', file.contentType);\n        return filestream.pipe(res)\n    }\n\n    @Get('download/:id')\n    @ApiBadRequestResponse({ type: ApiException })\n    async downloadFile(@Param('id') id: string, @Res() res) {\n        const file = await this.filesService.findInfo(id)\n        const filestream = await this.filesService.readStream(id)\n        if (!filestream) {\n            throw new HttpException('An error occurred while retrieving file', HttpStatus.EXPECTATION_FAILED)\n        }\n        res.header('Content-Type', file.contentType);\n        res.header('Content-Disposition', 'attachment; filename=' + file.filename);\n        return filestream.pipe(res)\n    }\n\n    @Get('delete/:id')\n    @ApiBadRequestResponse({ type: ApiException })\n    @ApiCreatedResponse({ type: FileResponseVm })\n    async deleteFile(@Param('id') id: string): Promise {\n        const file = await this.filesService.findInfo(id)\n        const filestream = await this.filesService.deleteFile(id)\n        if (!filestream) {\n            throw new HttpException('An error occurred during file deletion', HttpStatus.EXPECTATION_FAILED)\n        }\n        return {\n            message: 'File has been deleted',\n            file: file\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nFilesService\n\nFilesService\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nGridFsMulterConfigService\n\nGridFsMulterConfigService\n\nFilesModule -->\n\nGridFsMulterConfigService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FilesService\n                        \n                        \n                            GridFsMulterConfigService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            FilesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FilesService } from './files.service';\nimport { FilesController } from './files.controller';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { GridFsMulterConfigService } from './multer-config.service';\n\n@Module({\n  imports: [\n    MulterModule.registerAsync({\n      useClass: GridFsMulterConfigService,\n    }),\n  ],\n  controllers: [FilesController],\n  providers: [GridFsMulterConfigService, FilesService]\n})\nexport class FilesModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FilesService.html":{"url":"injectables/FilesService.html","title":"injectable - FilesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FilesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/files.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fileModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFile\n                            \n                            \n                                    Async\n                                findInfo\n                            \n                            \n                                    Async\n                                readStream\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in src/files/files.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteFile\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteFile(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findInfo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findInfo(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            readStream\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    readStream(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/files/files.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            fileModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MongoGridFS\n\n                        \n                    \n                        \n                            \n                                    Defined in src/files/files.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from '@nestjs/common';\nimport { InjectConnection } from '@nestjs/mongoose'\nimport { Connection } from 'mongoose'\nimport { MongoGridFS } from 'mongo-gridfs'\nimport { GridFSBucketReadStream } from 'mongodb'\nimport { FileInfoVm } from './file-info-vm.model'\n\n@Injectable()\nexport class FilesService {\n  private fileModel: MongoGridFS;\n\n  constructor(@InjectConnection() private readonly connection: Connection) {\n    this.fileModel = new MongoGridFS(this.connection.db, 'fs');\n  }\n\n  async readStream(id: string): Promise {\n    return await this.fileModel.readFileStream(id);\n  }\n\n  async findInfo(id: string): Promise {\n    const result = await this.fileModel\n      .findById(id).catch( err => {throw new HttpException('File not found', HttpStatus.NOT_FOUND)} )\n      .then(result => result)\n    return{\n      filename: result.filename,\n      length: result.length,\n      chunkSize: result.chunkSize,\n      md5: result.md5,\n      contentType: result.contentType      \n    }\n  }\n\n  async deleteFile(id: string): Promise{\n    return await this.fileModel.delete(id)\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GridFsMulterConfigService.html":{"url":"injectables/GridFsMulterConfigService.html","title":"injectable - GridFsMulterConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GridFsMulterConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer-config.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                gridFsStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createMulterOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/files/multer-config.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createMulterOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateMulterOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer-config.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     MulterModuleOptions\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gridFsStorage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GridFsStorage\n\n                        \n                    \n                        \n                            \n                                    Defined in src/files/multer-config.service.ts:8\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { MulterModuleOptions, MulterOptionsFactory } from '@nestjs/platform-express';\nimport * as GridFsStorage from 'multer-gridfs-storage';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class GridFsMulterConfigService implements MulterOptionsFactory {\n    gridFsStorage: GridFsStorage;\n    constructor(\n        private configService: ConfigService\n    ) {\n        this.gridFsStorage = new GridFsStorage({\n            url: this.configService.get('mongourl'),\n            file: (req, file) => {\n                return new Promise((resolve, reject) => {\n                    const filename = file.originalname.trim();\n                    const fileInfo = {\n                      filename: filename\n                    };\n                    resolve(fileInfo);\n                });\n              }\n        });\n    }\n\n    createMulterOptions(): MulterModuleOptions {\n        return {\n            storage: this.gridFsStorage,\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    private configService: ConfigService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('supersecret'),\n    });\n  }\n\n  async validate(payload: any) {\n    return payload.id;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Like.html":{"url":"classes/Like.html","title":"class - Like","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Like\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/likes/schemas/like.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                replyId\n                            \n                            \n                                topicId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Reply'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/likes/schemas/like.schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topicId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Topic'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/likes/schemas/like.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'User'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/likes/schemas/like.schema.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\n\nexport type LikeDocument = Like & Document;\n\n@Schema()\nexport class Like {\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n  userId: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Topic' })\n  topicId: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Reply' })\n  replyId: string;\n\n}\n\n\nexport const LikeSchema = SchemaFactory.createForClass(Like);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LikesController.html":{"url":"controllers/LikesController.html","title":"controller - LikesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LikesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/likes/likes.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                likes\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByTopicId\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createLikeDto: CreateLikeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/likes/likes.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLikeDto\n                                    \n                                                CreateLikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/likes/likes.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByTopicId\n                        \n                        \n                    \n                \n            \n            \n                \nfindByTopicId(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('topic/:id')\n                \n            \n\n            \n                \n                    Defined in src/likes/likes.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/likes/likes.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/likes/likes.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateLikeDto: UpdateLikeDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/likes/likes.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLikeDto\n                                    \n                                                UpdateLikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { LikesService } from './likes.service';\nimport { CreateLikeDto } from './dto/create-like.dto';\nimport { UpdateLikeDto } from './dto/update-like.dto';\n\n@Controller('likes')\nexport class LikesController {\n  constructor(private readonly likesService: LikesService) {}\n\n  @Post()\n  create(@Body() createLikeDto: CreateLikeDto) {\n    return this.likesService.create(createLikeDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.likesService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.likesService.findOne(id);\n  }\n\n  @Get('topic/:id')\n  findByTopicId(@Param('id') id: string) {\n    return this.likesService.finByTopicId(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateLikeDto: UpdateLikeDto) {\n    return this.likesService.update(id, updateLikeDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.likesService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LikesModule.html":{"url":"modules/LikesModule.html","title":"module - LikesModule","body":"\n                   \n\n\n\n\n    Modules\n    LikesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LikesModule\n\n\n\ncluster_LikesModule_exports\n\n\n\ncluster_LikesModule_providers\n\n\n\n\nLikesService \n\nLikesService \n\n\n\nLikesModule\n\nLikesModule\n\nLikesService  -->\n\nLikesModule->LikesService \n\n\n\n\n\nLikesService\n\nLikesService\n\nLikesModule -->\n\nLikesService->LikesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/likes/likes.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LikesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LikesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LikesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { LikesService } from './likes.service';\nimport { LikesController } from './likes.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Like, LikeSchema } from './schemas/like.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Like.name,\n        useFactory: () => {\n          LikeSchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return LikeSchema;\n        },\n      },\n    ])\n  ],\n  controllers: [LikesController],\n  providers: [LikesService],\n  exports: [LikesService]\n})\nexport class LikesModule {} \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LikesSeed.html":{"url":"injectables/LikesSeed.html","title":"injectable - LikesSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LikesSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.likes.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(likesService: LikesService)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.likes.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        likesService\n                                                  \n                                                        \n                                                                        LikesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(topics, replies, users)\n                \n            \n\n\n            \n                \n                    Defined in src/seeds/seeds.likes.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    topics\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replies\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    users\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { LikesService } from '../likes/likes.service';\n\nexport const likes = (topics, replies, users) => {\n    const likes = [\n        {}, {}, {}, {}, {}, {}, {}, {}\n    ]\n    return likes.map((like, index) => {\n        return { \n            ...like,\n            replyId: replies[index % replies.length],\n            topicId: topics[index % topics.length],\n            userId: users[index % users.length],\n        }\n    })\n};\n\n@Injectable()\nexport class LikesSeed {\n    constructor(private readonly likesService: LikesService) { }\n\n    async create(topics,replies, users) {\n        console.log(\"Seeding likes ...\");\n        const promiseArray = likes(topics, replies, users)\n            .map((like) => this.likesService.create(like));\n        try {\n            return (await Promise.all(promiseArray))\n                .map((response) => {\n                    console.log(response);\n                    return response;\n                });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LikesService.html":{"url":"injectables/LikesService.html","title":"injectable - LikesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LikesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/likes/likes.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                finByTopicId\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(likeModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/likes/likes.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        likeModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createLikeDto: CreateLikeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/likes/likes.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createLikeDto\n                                    \n                                                CreateLikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            finByTopicId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    finByTopicId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/likes/likes.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/likes/likes.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/likes/likes.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/likes/likes.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateLikeDto: UpdateLikeDto)\n                \n            \n\n\n            \n                \n                    Defined in src/likes/likes.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateLikeDto\n                                    \n                                                UpdateLikeDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateLikeDto } from './dto/create-like.dto';\nimport { UpdateLikeDto } from './dto/update-like.dto';\nimport { Like, LikeDocument } from './schemas/like.schema';\n\n@Injectable()\nexport class LikesService {\n  constructor(\n    @InjectModel(Like.name) private readonly likeModel: Model\n  ){}\n\n  async create(createLikeDto: CreateLikeDto): Promise {\n    const createdLike = new this.likeModel(createLikeDto);\n    return (await createdLike.save()).toJSON().id;\n  }\n\n  findAll(): Promise {\n    return this.likeModel.find().exec();\n  }\n\n  async findOne(id: string): Promise {\n    return await this.likeModel.findOne({ _id: id });\n  }\n\n  async finByTopicId(id: string): Promise {\n    return await this.likeModel.find({ topicId: id });\n  }\n\n  async update(id: string, updateLikeDto: UpdateLikeDto): Promise {\n    return this.likeModel.findByIdAndUpdate({ _id: id }, updateLikeDto).exec();\n  }\n\n  async remove(id: string): Promise {\n    return await this.likeModel.findOneAndDelete({ _id: id }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser({ email, password });\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/login-user.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/login-user.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MulterUtils.html":{"url":"injectables/MulterUtils.html","title":"injectable - MulterUtils","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MulterUtils\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/multer-utils.service.ts\n        \n\n            \n                Description\n            \n            \n                Multer utils\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getConfig\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getConfig(filesAllowed: UploadTypesEnum)\n                \n            \n\n\n            \n                \n                    Defined in src/files/multer-utils.service.ts:21\n                \n            \n\n\n            \n                \n                    Config for allowed files\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filesAllowed\n                                    \n                                                UploadTypesEnum\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { limits: { fileSize: number; }; fileFilter: (req: any, file: any, cb: any) => void; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { extname } from 'path';\nimport { UploadTypesEnum } from './upload-types.enum';\n\n/**\n * Multer utils\n *\n * @export\n * @class MulterUtils\n */\n@Injectable()\nexport class MulterUtils {\n    /**\n     * Config for allowed files\n     *\n     * @static\n     * @param {UploadTypeEnum} filesAllowed\n     * @returns\n     * @memberof MulterUtils\n     */\n    static getConfig(filesAllowed: UploadTypesEnum) {\n        return {\n            // Enable file size limits\n            limits: {\n                fileSize: 5 * 1024 * 1024,\n            },\n            // Check the mimetypes to allow for upload\n            fileFilter: (req: any, file: any, cb: any) => {\n                if (file.mimetype.match(`/(${filesAllowed})$`)) {\n                    // Allow storage of file\n                    cb(null, true);\n                } else {\n                    // Reject file\n                    cb(new HttpException(`Unsupported file type ${extname(file.originalname)}`, HttpStatus.BAD_REQUEST), false);\n                }\n            }\n        };\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pin.html":{"url":"classes/Pin.html","title":"class - Pin","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pin\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pins/schemas/pin.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoryId\n                            \n                            \n                                city\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                facebook\n                            \n                            \n                                imageIds\n                            \n                            \n                                instagram\n                            \n                            \n                                lat\n                            \n                            \n                                long\n                            \n                            \n                                neighborhood\n                            \n                            \n                                number\n                            \n                            \n                                phone\n                            \n                            \n                                street\n                            \n                            \n                                title\n                            \n                            \n                                twitter\n                            \n                            \n                                userId\n                            \n                            \n                                whatsapp\n                            \n                            \n                                zipcode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Category'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            city\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            facebook\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageIds\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instagram\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lat\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            long\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            neighborhood\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            number\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            phone\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            street\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            twitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'User'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            whatsapp\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:61\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            zipcode\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/pins/schemas/pin.schema.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\n\nexport type PinDocument = Pin & Document;\n\n@Schema()\nexport class Pin {\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Category' })\n  categoryId: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n  userId: string;\n\n  @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'fs.files'}] })\n  imageIds: string[];\n\n  @Prop()\n  title: string;\n\n  @Prop()\n  email: string;\n  \n  @Prop()\n  phone: number;\n  \n  @Prop()\n  street: string;\n  \n  @Prop()\n  number: number;\n  \n  @Prop()\n  neighborhood: string;\n  \n  @Prop()\n  city: string;\n  \n  @Prop()\n  zipcode: number;\n  \n  @Prop()\n  description: string;\n  \n  @Prop()\n  lat: number;\n  \n  @Prop()\n  long: number;\n  \n  @Prop()\n  facebook: string;\n  \n  @Prop()\n  instagram: string;\n  \n  @Prop()\n  twitter: string;\n  \n  @Prop()\n  whatsapp: string;\n\n}\n\nexport const PinSchema = SchemaFactory.createForClass(Pin);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PinsController.html":{"url":"controllers/PinsController.html","title":"controller - PinsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PinsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pins/pins.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                pins\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                getlocation\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createPinDto: CreatePinDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/pins/pins.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPinDto\n                                    \n                                                CreatePinDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/pins/pins.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/pins/pins.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getlocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetlocation(createlocationDto: CreatelocationDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('location')\n                \n            \n\n            \n                \n                    Defined in src/pins/pins.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createlocationDto\n                                    \n                                                CreatelocationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/pins/pins.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePinDto: UpdatePinDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/pins/pins.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePinDto\n                                    \n                                                UpdatePinDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { PinsService } from './pins.service';\nimport { CreatePinDto } from './dto/create-pin.dto';\nimport { UpdatePinDto } from './dto/update-pin.dto';\nimport { CreatelocationDto } from './dto/create-location.dto';\n\n@Controller('pins')\nexport class PinsController {\n  constructor(private readonly pinsService: PinsService) {}\n\n  @Post()\n  create(@Body() createPinDto: CreatePinDto) {\n    return this.pinsService.create(createPinDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.pinsService.findAll();\n  }\n\n  @Get('location')\n  getlocation(@Body() createlocationDto: CreatelocationDto ) {\n    return this.pinsService.getLocation(createlocationDto);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.pinsService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updatePinDto: UpdatePinDto) {\n    return this.pinsService.update(id, updatePinDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.pinsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PinsModule.html":{"url":"modules/PinsModule.html","title":"module - PinsModule","body":"\n                   \n\n\n\n\n    Modules\n    PinsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PinsModule\n\n\n\ncluster_PinsModule_providers\n\n\n\ncluster_PinsModule_exports\n\n\n\n\nPinsService \n\nPinsService \n\n\n\nPinsModule\n\nPinsModule\n\nPinsService  -->\n\nPinsModule->PinsService \n\n\n\n\n\nPinsService\n\nPinsService\n\nPinsModule -->\n\nPinsService->PinsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/pins/pins.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PinsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PinsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PinsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from '@nestjs/common';\nimport { PinsService } from './pins.service';\nimport { PinsController } from './pins.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Pin, PinSchema } from './schemas/pin.schema';\n\n@Module({\n  imports: [\n    HttpModule,\n    MongooseModule.forFeatureAsync([\n      {\n        name: Pin.name,\n        useFactory: () => {\n          PinSchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return PinSchema;\n        },\n      },\n    ])\n  ],\n  controllers: [PinsController],\n  providers: [PinsService],\n  exports: [PinsService]\n}) \nexport class PinsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PinsSeed.html":{"url":"injectables/PinsSeed.html","title":"injectable - PinsSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PinsSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.pins.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pinsService: PinsService)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.pins.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pinsService\n                                                  \n                                                        \n                                                                        PinsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(categories, users)\n                \n            \n\n\n            \n                \n                    Defined in src/seeds/seeds.pins.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    users\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PinsService } from '../pins/pins.service';\n\nexport const pins = (categories, users) => {\n    const pins = [\n        {\n            title: 'Brava',\n            email: 'brava@email.com',\n            phone: 6732533795,\n            street: 'Av Calógeras',\n            number: 3100,\n            neighborhood: 'Centro',\n            city: 'Campo Crande',\n            zipcode: 79004381,\n            description: 'Muito mais que um bar, um Bar',\n            lat: -20.453422,\n            long: -54.620065,\n            facebook: 'https://www.facebook.com/brava3100',\n            instagram: 'https://www.instagram.com/brava3100/',\n            twitter: 'https://twitter.com',\n            whatsapp: 'https://whatsapp.com'\n          },\n          {\n            title: 'Casa Colonial',\n            email: 'casacolonial@email.com',\n            phone: 6333833207,\n            street: 'Av. Afonso Pena',\n            number: 3997,\n            neighborhood: 'Centro',\n            city: 'Campo Crande',\n            zipcode: 79020000,\n            description: 'á la carte fino com destaque ao galeto, costelinha e talharim, com arquitetura e decoração de estilo colonial',\n            lat: -20.460178,\n            long: -54.598564,\n            facebook: 'https://www.facebook.com/CasaColonialCG',\n            instagram: 'https://www.instagram.com/casacolonialcg/',\n            twitter: 'https://twitter.com',\n            whatsapp: 'https://whatsapp.com'\n          }\n    ]\n    return pins.map((pin, index) => {\n        return { \n            ...pin, \n            categoryId: categories[index % categories.length],\n            userId: users[index % users.length],\n            imageIds: ['60689bc939f8713cc87acb83', '6068a568b884f04dbc47e976']\n        }\n    })\n};\n\n@Injectable()\nexport class PinsSeed {\n    constructor(private readonly pinsService: PinsService) { }\n\n    async create(categories, users) {\n        console.log(\"Seeding pins ...\");\n        const promiseArray = pins(categories, users)\n            .map((pin) => this.pinsService.create(pin));\n        try {\n            return (await Promise.all(promiseArray))\n                .map((response) => {\n                    console.log(response.id);\n                    return response.id;\n                });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PinsService.html":{"url":"injectables/PinsService.html","title":"injectable - PinsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PinsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pins/pins.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getLocation\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(pinModel: Model, httpService: HttpService, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/pins/pins.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pinModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createPinDto: CreatePinDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pins/pins.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createPinDto\n                                    \n                                                CreatePinDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/pins/pins.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pins/pins.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocation(createlocationDto: CreatelocationDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pins/pins.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createlocationDto\n                                    \n                                                CreatelocationDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/pins/pins.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePinDto: UpdatePinDto)\n                \n            \n\n\n            \n                \n                    Defined in src/pins/pins.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePinDto\n                                    \n                                                UpdatePinDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpService, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { parse } from 'node:url';\nimport { CreatelocationDto } from './dto/create-location.dto';\nimport { CreatePinDto } from './dto/create-pin.dto';\nimport { UpdatePinDto } from './dto/update-pin.dto';\nimport { Pin, PinDocument } from './schemas/pin.schema';\n\n@Injectable()\nexport class PinsService {\n  constructor(\n    @InjectModel(Pin.name) private pinModel: Model,\n    private httpService: HttpService,\n    private configService: ConfigService\n  ) { }\n\n  async create(createPinDto: CreatePinDto): Promise {\n    const {street, city, number} = createPinDto;\n    const address = {\n      street,\n      city,\n      county: \"campo grande\",\n      state: \"mato grosso do sul\",\n      number,\n      postalcode: createPinDto.zipcode\n    }\n    createPinDto = {...createPinDto, ...(await this.getLocation(address))};\n    const createdPin = new this.pinModel(createPinDto);\n    const {id , lat , long} = (await createdPin.save()).toJSON();\n    return { id, lat, long };\n  }\n\n  findAll(): Promise {\n    return this.pinModel.find().exec();\n  }\n\n  async getLocation(createlocationDto: CreatelocationDto): Promise {\n    const { street, number, county, city, state, postalcode } = createlocationDto;\n    const streetAndNumber = street + ', ' + number.toString();\n    const data = {\n      params: {\n        street: streetAndNumber,\n        county: county,\n        city: city,\n        state: state,\n        postalcode: postalcode.toString()\n      }\n    }\n    const url = `https://us1.locationiq.com/v1/search.php?key=${this.configService.get('privatetoken')}&format=json`\n    return await this.httpService.get(url, data).toPromise()\n      .then(res => {\n        return {\n          lat: parseFloat(res.data[0].lat),\n          long: parseFloat(res.data[0].lon)\n        }\n      })\n      .catch(err => err)\n  }\n\n  async findOne(id: string): Promise {\n    return await this.pinModel.findOne({ _id: id });\n  }\n\n  async update(id: string, updatePinDto: UpdatePinDto): Promise {\n    return this.pinModel.findByIdAndUpdate({ _id: id }, updatePinDto).exec();\n  }\n\n  async remove(id: string): Promise {\n    return await this.pinModel.findOneAndDelete({ _id: id }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Rejoinder.html":{"url":"classes/Rejoinder.html","title":"class - Rejoinder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Rejoinder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rejoinders/schemas/rejoinders.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                replyId\n                            \n                            \n                                topicId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/schemas/rejoinders.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/schemas/rejoinders.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replyId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Reply'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/schemas/rejoinders.schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topicId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Topic'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/schemas/rejoinders.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'User'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/rejoinders/schemas/rejoinders.schema.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\n\nexport type RejoinderDocument = Rejoinder & Document;\n\n@Schema()\nexport class Rejoinder {\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n    userId: string;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Topic' })\n    topicId: string;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Reply' })\n    replyId: string;\n\n    @Prop()\n    content: string;\n\n    @Prop()\n    createdAt: Date;\n\n}\n\nexport const RejoinderSchema = SchemaFactory.createForClass(Rejoinder);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RejoindersController.html":{"url":"controllers/RejoindersController.html","title":"controller - RejoindersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RejoindersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rejoinders/rejoinders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                rejoinders\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByTopicId\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createRejoinderDto: CreateRejoinderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/rejoinders/rejoinders.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRejoinderDto\n                                    \n                                                CreateRejoinderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/rejoinders/rejoinders.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByTopicId\n                        \n                        \n                    \n                \n            \n            \n                \nfindByTopicId(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('topic/:id')\n                \n            \n\n            \n                \n                    Defined in src/rejoinders/rejoinders.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/rejoinders/rejoinders.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/rejoinders/rejoinders.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateRejoinderDto: UpdateRejoinderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/rejoinders/rejoinders.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRejoinderDto\n                                    \n                                                UpdateRejoinderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { RejoindersService } from './rejoinders.service';\nimport { CreateRejoinderDto } from './dto/create-rejoinder.dto';\nimport { UpdateRejoinderDto } from './dto/update-rejoinder.dto';\n\n@Controller('rejoinders')\nexport class RejoindersController {\n  constructor(private readonly rejoindersService: RejoindersService) {}\n\n  @Post()\n  create(@Body() createRejoinderDto: CreateRejoinderDto) {\n    return this.rejoindersService.create(createRejoinderDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.rejoindersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.rejoindersService.findOne(id);\n  }\n\n  @Get('topic/:id')\n  findByTopicId(@Param('id') id: string) {\n    return this.rejoindersService.findByTopicId(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateRejoinderDto: UpdateRejoinderDto) {\n    return this.rejoindersService.update(id, updateRejoinderDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.rejoindersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RejoindersModule.html":{"url":"modules/RejoindersModule.html","title":"module - RejoindersModule","body":"\n                   \n\n\n\n\n    Modules\n    RejoindersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RejoindersModule\n\n\n\ncluster_RejoindersModule_exports\n\n\n\ncluster_RejoindersModule_providers\n\n\n\n\nRejoindersService \n\nRejoindersService \n\n\n\nRejoindersModule\n\nRejoindersModule\n\nRejoindersService  -->\n\nRejoindersModule->RejoindersService \n\n\n\n\n\nRejoindersService\n\nRejoindersService\n\nRejoindersModule -->\n\nRejoindersService->RejoindersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/rejoinders/rejoinders.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RejoindersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RejoindersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RejoindersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RejoindersService } from './rejoinders.service';\nimport { RejoindersController } from './rejoinders.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Rejoinder, RejoinderSchema } from './schemas/rejoinders.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Rejoinder.name,\n        useFactory: () => {\n          RejoinderSchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return RejoinderSchema;\n        },\n      },\n    ])\n  ],\n  controllers: [RejoindersController],\n  providers: [RejoindersService],\n  exports:[RejoindersService]\n})\nexport class RejoindersModule {} \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RejoindersSeed.html":{"url":"injectables/RejoindersSeed.html","title":"injectable - RejoindersSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RejoindersSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.rejoinders.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rejoindersService: RejoindersService)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.rejoinders.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rejoindersService\n                                                  \n                                                        \n                                                                        RejoindersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(topics, replies, users)\n                \n            \n\n\n            \n                \n                    Defined in src/seeds/seeds.rejoinders.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    topics\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    replies\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    users\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { RejoindersService } from '../rejoinders/rejoinders.service';\n\nexport const rejoinders = (topics, replies, users) => {\n    const rejoinders = [\n        {}, {}, {}, {}, {}, {}, {}, {}\n    ]\n    return rejoinders.map((like, index) => {\n        return { \n            ...like,\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            replyId: replies[index % replies.length],\n            topicId: topics[index % topics.length],\n            userId: users[index % users.length],\n            createdAt: new Date()\n        }\n    })\n};\n\n@Injectable()\nexport class RejoindersSeed {\n    constructor(private readonly rejoindersService: RejoindersService) { }\n\n    async create(topics,replies, users) {\n        console.log(\"Seeding rejoinders ...\");\n        const promiseArray = rejoinders(topics, replies, users)\n            .map((rejoinder) => this.rejoindersService.create(rejoinder));\n        try {\n            return (await Promise.all(promiseArray))\n                .map((response) => {\n                    console.log(response);\n                    return response;\n                });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RejoindersService.html":{"url":"injectables/RejoindersService.html","title":"injectable - RejoindersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RejoindersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rejoinders/rejoinders.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findByTopicId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rejoinderModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/rejoinders/rejoinders.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rejoinderModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRejoinderDto: CreateRejoinderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rejoinders/rejoinders.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRejoinderDto\n                                    \n                                                CreateRejoinderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/rejoinders/rejoinders.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByTopicId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByTopicId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rejoinders/rejoinders.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rejoinders/rejoinders.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/rejoinders/rejoinders.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRejoinderDto: UpdateRejoinderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/rejoinders/rejoinders.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRejoinderDto\n                                    \n                                                UpdateRejoinderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateRejoinderDto } from './dto/create-rejoinder.dto';\nimport { UpdateRejoinderDto } from './dto/update-rejoinder.dto';\nimport { Rejoinder, RejoinderDocument } from './schemas/rejoinders.schema';\n\n@Injectable()\nexport class RejoindersService {\n  constructor(\n    @InjectModel(Rejoinder.name) private readonly rejoinderModel: Model\n  ){}\n\n  async create(createRejoinderDto: CreateRejoinderDto): Promise {\n    const createdRejoinder = new this.rejoinderModel(createRejoinderDto);\n    return (await createdRejoinder.save()).toJSON().id;\n  }\n\n  findAll(): Promise {\n    return this.rejoinderModel.find().exec();\n\n  } \n\n  async findOne(id: string): Promise {\n    return await this.rejoinderModel.findOne({ _id: id });\n  }\n\n  async findByTopicId(id: string): Promise {\n    return await this.rejoinderModel.find({ topicId: id });\n  }\n\n  async update(id: string, updateRejoinderDto: UpdateRejoinderDto): Promise {\n    return this.rejoinderModel.findByIdAndUpdate({ _id: id }, updateRejoinderDto).exec();\n\n  }\n\n  async remove(id: string): Promise {\n    return await this.rejoinderModel.findOneAndDelete({ _id: id }).exec();\n\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RepliesController.html":{"url":"controllers/RepliesController.html","title":"controller - RepliesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RepliesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/replies/replies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                replies\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByTopicId\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createReplyDto: CreateReplyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/replies/replies.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReplyDto\n                                    \n                                                CreateReplyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/replies/replies.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByTopicId\n                        \n                        \n                    \n                \n            \n            \n                \nfindByTopicId(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('topic/:id')\n                \n            \n\n            \n                \n                    Defined in src/replies/replies.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/replies/replies.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/replies/replies.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateReplyDto: UpdateReplyDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/replies/replies.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReplyDto\n                                    \n                                                UpdateReplyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { RepliesService } from './replies.service';\nimport { CreateReplyDto } from './dto/create-reply.dto';\nimport { UpdateReplyDto } from './dto/update-reply.dto';\n\n@Controller('replies')\nexport class RepliesController {\n  constructor(private readonly repliesService: RepliesService) {}\n\n  @Post()\n  create(@Body() createReplyDto: CreateReplyDto) {\n    return this.repliesService.create(createReplyDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.repliesService.findAll();\n  }\n  \n  @Get('topic/:id')\n  findByTopicId(@Param('id') id: string) {\n    return this.repliesService.findByTopicId(id);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.repliesService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateReplyDto: UpdateReplyDto) {\n    return this.repliesService.update(id, updateReplyDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.repliesService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RepliesModule.html":{"url":"modules/RepliesModule.html","title":"module - RepliesModule","body":"\n                   \n\n\n\n\n    Modules\n    RepliesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RepliesModule\n\n\n\ncluster_RepliesModule_exports\n\n\n\ncluster_RepliesModule_providers\n\n\n\n\nRepliesService \n\nRepliesService \n\n\n\nRepliesModule\n\nRepliesModule\n\nRepliesService  -->\n\nRepliesModule->RepliesService \n\n\n\n\n\nRepliesService\n\nRepliesService\n\nRepliesModule -->\n\nRepliesService->RepliesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/replies/replies.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RepliesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RepliesController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RepliesService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RepliesService } from './replies.service';\nimport { RepliesController } from './replies.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Reply, ReplySchema } from './schemas/reply.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Reply.name,\n        useFactory: () => {\n          ReplySchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return ReplySchema;\n        },\n      },\n    ])\n  ],\n  controllers: [RepliesController],\n  providers: [RepliesService],\n  exports: [RepliesService]\n})\nexport class RepliesModule {} \n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepliesSeed.html":{"url":"injectables/RepliesSeed.html","title":"injectable - RepliesSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RepliesSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.replies.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repliesService: RepliesService)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.replies.ts:57\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repliesService\n                                                  \n                                                        \n                                                                        RepliesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(topics, users)\n                \n            \n\n\n            \n                \n                    Defined in src/seeds/seeds.replies.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    topics\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    users\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { RepliesService } from '../replies/replies.service';\n\nexport const replies = (topics, users) => {\n    const replies = [\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        }\n    ]\n    return replies.map((support, index) => {\n        return {\n            ...support,\n            topicId: topics[index % topics.length],\n            userId: users[index % users.length],\n        }\n    })\n};\n\n@Injectable()\nexport class RepliesSeed {\n    constructor(private readonly repliesService: RepliesService) { }\n\n    async create(topics, users) {\n        console.log(\"Seeding replies ...\");\n        const promiseArray = replies(topics, users)\n            .map((reply) => this.repliesService.create(reply));\n        try {\n            return (await Promise.all(promiseArray))\n                .map((response) => {\n                    console.log(response);\n                    return response;\n                });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RepliesService.html":{"url":"injectables/RepliesService.html","title":"injectable - RepliesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  RepliesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/replies/replies.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByTopicId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(replyModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/replies/replies.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        replyModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createReplyDto: CreateReplyDto)\n                \n            \n\n\n            \n                \n                    Defined in src/replies/replies.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReplyDto\n                                    \n                                                CreateReplyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/replies/replies.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByTopicId\n                        \n                        \n                    \n                \n            \n            \n                \nfindByTopicId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/replies/replies.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/replies/replies.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/replies/replies.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateReplyDto: UpdateReplyDto)\n                \n            \n\n\n            \n                \n                    Defined in src/replies/replies.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateReplyDto\n                                    \n                                                UpdateReplyDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateReplyDto } from './dto/create-reply.dto';\nimport { UpdateReplyDto } from './dto/update-reply.dto';\nimport { Reply, ReplyDocument } from './schemas/reply.schema';\n\n@Injectable()\nexport class RepliesService {\n  constructor(\n    @InjectModel(Reply.name) private readonly replyModel: Model\n  ) { }\n\n  async create(createReplyDto: CreateReplyDto): Promise {\n    const createdReply = new this.replyModel(createReplyDto);\n    return (await createdReply.save()).toJSON().id;\n  }\n\n  findAll(): Promise {\n    return this.replyModel.find().exec();\n  }\n\n  findByTopicId(id: string): Promise{\n    return this.replyModel.find({ topicId: id }).exec();\n  }\n\n  async findOne(id: string): Promise {\n    return await this.replyModel.findOne({ _id: id });\n  }\n\n  async update(id: string, updateReplyDto: UpdateReplyDto): Promise {\n    return this.replyModel.findByIdAndUpdate({ _id: id }, updateReplyDto).exec();\n\n  }\n\n  async remove(id: string): Promise {\n    return await this.replyModel.findOneAndDelete({ _id: id }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Reply.html":{"url":"classes/Reply.html","title":"class - Reply","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Reply\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/replies/schemas/reply.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                numberOfLikes\n                            \n                            \n                                topicId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/replies/schemas/reply.schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/replies/schemas/reply.schema.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfLikes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/replies/schemas/reply.schema.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topicId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Topic'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/replies/schemas/reply.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'User'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/replies/schemas/reply.schema.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\n\nexport type ReplyDocument = Reply & Document;\n\n@Schema()\nexport class Reply {\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n  userId: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Topic' })\n  topicId: string;\n\n  @Prop()\n  content: string;\n\n  @Prop()\n  createdAt: Date;\n\n  @Prop()\n  numberOfLikes: number;\n  \n}\n\nexport const ReplySchema = SchemaFactory.createForClass(Reply);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeedsModule.html":{"url":"modules/SeedsModule.html","title":"module - SeedsModule","body":"\n                   \n\n\n\n\n    Modules\n    SeedsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SeedsModule\n\n\n\ncluster_SeedsModule_imports\n\n\n\ncluster_SeedsModule_providers\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\n\n\nSeedsModule\n\nSeedsModule\n\nSeedsModule -->\n\nCategoriesModule->SeedsModule\n\n\n\n\n\nEventsModule\n\nEventsModule\n\nSeedsModule -->\n\nEventsModule->SeedsModule\n\n\n\n\n\nLikesModule\n\nLikesModule\n\nSeedsModule -->\n\nLikesModule->SeedsModule\n\n\n\n\n\nPinsModule\n\nPinsModule\n\nSeedsModule -->\n\nPinsModule->SeedsModule\n\n\n\n\n\nRejoindersModule\n\nRejoindersModule\n\nSeedsModule -->\n\nRejoindersModule->SeedsModule\n\n\n\n\n\nRepliesModule\n\nRepliesModule\n\nSeedsModule -->\n\nRepliesModule->SeedsModule\n\n\n\n\n\nSupportsModule\n\nSupportsModule\n\nSeedsModule -->\n\nSupportsModule->SeedsModule\n\n\n\n\n\nTopicsModule\n\nTopicsModule\n\nSeedsModule -->\n\nTopicsModule->SeedsModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nSeedsModule -->\n\nUsersModule->SeedsModule\n\n\n\n\n\nAppSeed\n\nAppSeed\n\nSeedsModule -->\n\nAppSeed->SeedsModule\n\n\n\n\n\nCategoriesSeed\n\nCategoriesSeed\n\nSeedsModule -->\n\nCategoriesSeed->SeedsModule\n\n\n\n\n\nEventsSeed\n\nEventsSeed\n\nSeedsModule -->\n\nEventsSeed->SeedsModule\n\n\n\n\n\nLikesSeed\n\nLikesSeed\n\nSeedsModule -->\n\nLikesSeed->SeedsModule\n\n\n\n\n\nPinsSeed\n\nPinsSeed\n\nSeedsModule -->\n\nPinsSeed->SeedsModule\n\n\n\n\n\nRejoindersSeed\n\nRejoindersSeed\n\nSeedsModule -->\n\nRejoindersSeed->SeedsModule\n\n\n\n\n\nRepliesSeed\n\nRepliesSeed\n\nSeedsModule -->\n\nRepliesSeed->SeedsModule\n\n\n\n\n\nSupportsSeed\n\nSupportsSeed\n\nSeedsModule -->\n\nSupportsSeed->SeedsModule\n\n\n\n\n\nTopicsSeed\n\nTopicsSeed\n\nSeedsModule -->\n\nTopicsSeed->SeedsModule\n\n\n\n\n\nUsersSeed\n\nUsersSeed\n\nSeedsModule -->\n\nUsersSeed->SeedsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/seeds/seeds.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppSeed\n                        \n                        \n                            CategoriesSeed\n                        \n                        \n                            EventsSeed\n                        \n                        \n                            LikesSeed\n                        \n                        \n                            PinsSeed\n                        \n                        \n                            RejoindersSeed\n                        \n                        \n                            RepliesSeed\n                        \n                        \n                            SupportsSeed\n                        \n                        \n                            TopicsSeed\n                        \n                        \n                            UsersSeed\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CategoriesModule\n                        \n                        \n                            EventsModule\n                        \n                        \n                            LikesModule\n                        \n                        \n                            PinsModule\n                        \n                        \n                            RejoindersModule\n                        \n                        \n                            RepliesModule\n                        \n                        \n                            SupportsModule\n                        \n                        \n                            TopicsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppSeed } from './seeds.app';\nimport { CategoriesSeed } from './seeds.categories';\nimport { UsersSeed } from './seeds.users';\nimport { SupportsSeed } from './seeds.supports';\nimport { EventsSeed } from './seeds.events';\nimport { CategoriesModule } from '../categories/categories.module';\nimport { UsersModule } from '../users/users.module';\nimport { PinsModule } from '../pins/pins.module';\nimport { EventsModule } from '../events/events.module';\nimport { TopicsModule } from 'src/topics/topics.module';\nimport { TopicsSeed } from './seeds.topics';\nimport { SupportsModule } from 'src/supports/supports.module';\nimport { PinsSeed } from './seeds.pins';\nimport { RepliesModule } from 'src/replies/replies.module';\nimport { RepliesSeed } from './seeds.replies';\nimport { CommandModule } from 'nestjs-command';\nimport { LikesModule } from 'src/likes/likes.module';\nimport { LikesSeed } from './seeds.likes';\nimport { RejoindersModule } from 'src/rejoinders/rejoinders.module';\nimport { RejoindersSeed } from './seeds.rejoinders';\n\n@Module({\n    imports: [\n        CommandModule,\n        CategoriesModule,\n        UsersModule,\n        PinsModule,\n        EventsModule,\n        TopicsModule,\n        SupportsModule,\n        RepliesModule,\n        LikesModule,\n        RejoindersModule\n    ],\n    providers: [\n        AppSeed,\n        CategoriesSeed,\n        UsersSeed,\n        PinsSeed,\n        EventsSeed,\n        TopicsSeed,\n        SupportsSeed,\n        RepliesSeed,\n        LikesSeed,\n        RejoindersSeed\n    ],\n})\nexport class SeedsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Support.html":{"url":"classes/Support.html","title":"class - Support","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Support\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supports/schemas/support.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                status\n                            \n                            \n                                topicId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/supports/schemas/support.schema.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            topicId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Topic'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/supports/schemas/support.schema.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'User'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/supports/schemas/support.schema.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\n\nexport type SupportDocument = Support & Document;\n\n@Schema()\nexport class Support {\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n  userId: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Topic' })\n  topicId: string;\n\n  @Prop()\n  status: boolean;\n  \n}\n\nexport const SupportSchema = SchemaFactory.createForClass(Support);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SupportsController.html":{"url":"controllers/SupportsController.html","title":"controller - SupportsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SupportsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supports/supports.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                supports\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByTopicId\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createSupportDto: CreateSupportDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/supports/supports.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSupportDto\n                                    \n                                                CreateSupportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/supports/supports.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByTopicId\n                        \n                        \n                    \n                \n            \n            \n                \nfindByTopicId(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('topics/:id')\n                \n            \n\n            \n                \n                    Defined in src/supports/supports.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/supports/supports.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/supports/supports.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateSupportDto: UpdateSupportDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/supports/supports.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSupportDto\n                                    \n                                                UpdateSupportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { SupportsService } from './supports.service';\nimport { CreateSupportDto } from './dto/create-support.dto';\nimport { UpdateSupportDto } from './dto/update-support.dto';\n\n@Controller('supports')\nexport class SupportsController {\n  constructor(private readonly supportsService: SupportsService) {}\n\n  @Post()\n  create(@Body() createSupportDto: CreateSupportDto) {\n    return this.supportsService.create(createSupportDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.supportsService.findAll();\n  }\n\n  @Get('topics/:id')\n  findByTopicId(@Param('id') id: string) {\n    return this.supportsService.findByTopicId(id);\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.supportsService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateSupportDto: UpdateSupportDto) {\n    return this.supportsService.update(id, updateSupportDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.supportsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SupportsModule.html":{"url":"modules/SupportsModule.html","title":"module - SupportsModule","body":"\n                   \n\n\n\n\n    Modules\n    SupportsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SupportsModule\n\n\n\ncluster_SupportsModule_imports\n\n\n\ncluster_SupportsModule_providers\n\n\n\ncluster_SupportsModule_exports\n\n\n\n\nTopicsModule\n\nTopicsModule\n\n\n\nSupportsModule\n\nSupportsModule\n\nSupportsModule -->\n\nTopicsModule->SupportsModule\n\n\n\n\n\nSupportsService \n\nSupportsService \n\nSupportsService  -->\n\nSupportsModule->SupportsService \n\n\n\n\n\nSupportsService\n\nSupportsService\n\nSupportsModule -->\n\nSupportsService->SupportsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/supports/supports.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SupportsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            SupportsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TopicsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SupportsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SupportsService } from './supports.service';\nimport { SupportsController } from './supports.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Support, SupportSchema } from './schemas/support.schema';\nimport { TopicsService } from '../topics/topics.service';\nimport { TopicsModule } from '../topics/topics.module';\n\n\n@Module({\n  imports: [\n    TopicsModule,\n    MongooseModule.forFeatureAsync([\n      {\n        name: Support.name,\n        useFactory: () => {\n          SupportSchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return SupportSchema;\n        },\n      },\n    ])\n  ],\n  controllers: [SupportsController],\n  providers: [SupportsService],\n  exports: [SupportsService]\n})\nexport class SupportsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupportsSeed.html":{"url":"injectables/SupportsSeed.html","title":"injectable - SupportsSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SupportsSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.supports.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supportsService: SupportsService)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.supports.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supportsService\n                                                  \n                                                        \n                                                                        SupportsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(categories, users)\n                \n            \n\n\n            \n                \n                    Defined in src/seeds/seeds.supports.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    users\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { SupportsService } from '../supports/supports.service';\n\nexport const supports = (topics, users) => {\n    const supports = [\n        {\n            status: true,\n        },\n        {\n            status: false,\n        },\n        {\n            status: true,\n        },\n        {\n            status: false,\n        }\n    ]\n    return supports.map((support, index) => {\n        return { \n            ...support, \n            topicId: topics[index % topics.length],\n            userId: users[index % users.length],\n        }\n    })\n};\n\n@Injectable()\nexport class SupportsSeed {\n    constructor(private readonly supportsService: SupportsService) { }\n\n    async create(categories, users) {\n        console.log(\"Seeding supports ...\");\n        const promiseArray = supports(categories, users)\n            .map((support) => this.supportsService.create(support));\n        try {\n            return (await Promise.all(promiseArray))\n                .map((response) => {\n                    console.log(response);\n                    return response;\n                });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SupportsService.html":{"url":"injectables/SupportsService.html","title":"injectable - SupportsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SupportsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supports/supports.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findByTopicId\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(supportModel: Model, topicsService: TopicsService)\n                    \n                \n                        \n                            \n                                Defined in src/supports/supports.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        supportModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        topicsService\n                                                  \n                                                        \n                                                                        TopicsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createSupportDto: CreateSupportDto)\n                \n            \n\n\n            \n                \n                    Defined in src/supports/supports.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createSupportDto\n                                    \n                                                CreateSupportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/supports/supports.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findByTopicId\n                        \n                        \n                    \n                \n            \n            \n                \nfindByTopicId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/supports/supports.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/supports/supports.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/supports/supports.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateSupportDto: UpdateSupportDto)\n                \n            \n\n\n            \n                \n                    Defined in src/supports/supports.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateSupportDto\n                                    \n                                                UpdateSupportDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { CreateSupportDto } from './dto/create-support.dto';\nimport { UpdateSupportDto } from './dto/update-support.dto';\nimport { Support, SupportDocument } from './schemas/support.schema'\nimport { TopicsService } from '../topics/topics.service';\n\n\n@Injectable()\nexport class SupportsService {\n  constructor(\n    @InjectModel(Support.name) private readonly supportModel: Model,\n    private readonly topicsService: TopicsService,\n  ) { }\n\n  async create(createSupportDto: CreateSupportDto ): Promise {\n    const createdSupport = new this.supportModel(createSupportDto);\n    const support = await createdSupport.save()\n    const { _id, topicId , status } =  support;\n    await this.topicsService.incrementNumberOfSupports(topicId, status);\n    return _id;\n  }\n\n  findAll(): Promise {\n    return this.supportModel.find().exec();\n  }\n\n  findByTopicId(id: string): Promise {\n    return this.supportModel.find({ topicId: id }).exec();\n  }\n\n  async findOne(id: string):Promise {\n    return await this.supportModel.findOne({ _id: id });\n  }\n\n  async update(id: string, updateSupportDto: UpdateSupportDto): Promise {\n    return this.supportModel.findByIdAndUpdate({ _id: id }, updateSupportDto).exec();\n  }\n\n  async remove(id: string): Promise {\n    return await this.supportModel.findOneAndDelete({ _id: id }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Topic.html":{"url":"classes/Topic.html","title":"class - Topic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Topic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/topics/schemas/topic.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                categoriesTagged\n                            \n                            \n                                categoryId\n                            \n                            \n                                content\n                            \n                            \n                                createdAt\n                            \n                            \n                                negativeSupports\n                            \n                            \n                                numberOfReplies\n                            \n                            \n                                positiveSupports\n                            \n                            \n                                title\n                            \n                            \n                                userId\n                            \n                            \n                                views\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoriesTagged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Category'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            content\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            negativeSupports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            numberOfReplies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            positiveSupports\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'User'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            views\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/topics/schemas/topic.schema.ts:34\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\n\nexport type TopicDocument = Topic & Document;\n\n@Schema()\nexport class Topic {\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Category' })\n    categoryId: string;\n\n    @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'User' })\n    userId: string;\n\n    @Prop({ type: [{ type: mongoose.Schema.Types.ObjectId, ref: 'Category' }] })\n    categoriesTagged: string[];\n\n    @Prop()\n    content: string;\n\n    @Prop()\n    title: string;\n\n    @Prop()\n    positiveSupports: number;\n\n    @Prop()\n    negativeSupports: number;\n\n    @Prop()\n    numberOfReplies: number;\n\n    @Prop()\n    views: number;\n\n    @Prop()\n    createdAt: Date;\n}\n\nexport const TopicSchema = SchemaFactory.createForClass(Topic);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TopicsController.html":{"url":"controllers/TopicsController.html","title":"controller - TopicsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TopicsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/topics/topics.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                topics\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            create\n                        \n                        \n                    \n                \n            \n            \n                \ncreate(createTopicDto: CreateTopicDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/topics/topics.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTopicDto\n                                    \n                                                CreateTopicDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/topics/topics.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/topics/topics.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/topics/topics.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTopicDto: UpdateTopicDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/topics/topics.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTopicDto\n                                    \n                                                UpdateTopicDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete } from '@nestjs/common';\nimport { TopicsService } from './topics.service';\nimport { CreateTopicDto } from './dto/create-topic.dto';\nimport { UpdateTopicDto } from './dto/update-topic.dto';\n\n@Controller('topics')\nexport class TopicsController {\n  constructor(private readonly topicsService: TopicsService) { }\n\n  @Post()\n  create(@Body() createTopicDto: CreateTopicDto) {\n    return this.topicsService.create(createTopicDto);\n  }\n\n  @Get()\n  findAll() {\n    return this.topicsService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.topicsService.findOne(id);\n  }\n\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateTopicDto: UpdateTopicDto) {\n    return this.topicsService.update(id, updateTopicDto);\n  }\n\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.topicsService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TopicsModule.html":{"url":"modules/TopicsModule.html","title":"module - TopicsModule","body":"\n                   \n\n\n\n\n    Modules\n    TopicsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TopicsModule\n\n\n\ncluster_TopicsModule_exports\n\n\n\ncluster_TopicsModule_providers\n\n\n\n\nTopicsService \n\nTopicsService \n\n\n\nTopicsModule\n\nTopicsModule\n\nTopicsService  -->\n\nTopicsModule->TopicsService \n\n\n\n\n\nTopicsService\n\nTopicsService\n\nTopicsModule -->\n\nTopicsService->TopicsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/topics/topics.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TopicsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TopicsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TopicsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TopicsService } from './topics.service';\nimport { TopicsController } from './topics.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Topic, TopicSchema } from './schemas/topic.schema';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: Topic.name,\n        useFactory: () => {\n          TopicSchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n            }\n          });\n          return TopicSchema;\n        },\n      },\n    ])\n  ],\n  controllers: [TopicsController],\n  providers: [TopicsService],\n  exports: [TopicsService],\n})\nexport class TopicsModule {}\n \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TopicsSeed.html":{"url":"injectables/TopicsSeed.html","title":"injectable - TopicsSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TopicsSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.topics.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(topicsService: TopicsService)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.topics.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        topicsService\n                                                  \n                                                        \n                                                                        TopicsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(categories, users)\n                \n            \n\n\n            \n                \n                    Defined in src/seeds/seeds.topics.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    users\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TopicsService } from '../topics/topics.service';\n\nexport const topics = (categories, users) => {\n    const topics = [\n        {\n            title: \"Dance Fest 1\",\n            positiveSupports: 0,\n            negativeSupports: 0,\n            numberOfReplies: 0,\n            content: \"pula fogueira Lorem Ipsum é simplesmente uma simulação de texto da indústria tipográplesmente uma simulação de texto da indústria tipográfica ede impressos,\",\n            views: 0,\n            createdAt: new Date()\n          },\n          {\n            title: \"Dance Fest 2\",\n            positiveSupports: 0,\n            negativeSupports: 0,\n            numberOfReplies: 0,\n            content: \"pula fogueira Lorem Ipsum é simplesmente uma simulação de texto da indústria tipográplesmente uma simulação de texto da indústria tipográfica ede impressos,\",\n            views: 0,\n            createdAt: new Date()\n          },\n    ]\n    return topics.map((topic, index) => {\n        const category = categories[index % categories.length];\n        return { \n            ...topic,\n            userId: users[index % users.length],\n            categoryId: category,\n            categoriesTagged: [category, category]\n        }\n    })\n};\n\n@Injectable()\nexport class TopicsSeed {\n    constructor(private readonly topicsService: TopicsService) { }\n\n    async create(categories, users) {\n        console.log(\"Seeding topics ...\");\n        const promiseArray = topics(categories, users)\n            .map((topic) => this.topicsService.create(topic));\n        try {\n            return (await Promise.all(promiseArray))\n                .map((response) => {\n                    console.log(response);\n                    return response;\n                });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TopicsService.html":{"url":"injectables/TopicsService.html","title":"injectable - TopicsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TopicsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/topics/topics.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                incrementNumberOfSupports\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(topicModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/topics/topics.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        topicModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTopicDto: CreateTopicDto)\n                \n            \n\n\n            \n                \n                    Defined in src/topics/topics.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTopicDto\n                                    \n                                                CreateTopicDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/topics/topics.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/topics/topics.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            incrementNumberOfSupports\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    incrementNumberOfSupports(id: string, status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/topics/topics.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/topics/topics.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateTopicDto: UpdateTopicDto)\n                \n            \n\n\n            \n                \n                    Defined in src/topics/topics.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTopicDto\n                                    \n                                                UpdateTopicDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { topics } from 'src/seeds/seeds.topics';\nimport { CreateTopicDto } from './dto/create-topic.dto';\nimport { UpdateTopicDto } from './dto/update-topic.dto';\nimport { Topic, TopicDocument } from './schemas/topic.schema';\n\n@Injectable()\nexport class TopicsService {\n  constructor(\n    @InjectModel(Topic.name) private readonly topicModel: Model\n  ) { }\n\n  async create(createTopicDto: CreateTopicDto): Promise {\n    const createdTopic = new this.topicModel(createTopicDto)\n    return (await createdTopic.save()).toJSON().id;\n  }\n\n  findAll(): Promise{\n    return this.topicModel.find().exec();\n  }\n\n  async findOne(id: string) {\n    return await this.topicModel.findOne({ _id: id });\n  }\n\n  async update(id: string, updateTopicDto: UpdateTopicDto): Promise {\n    return this.topicModel.findByIdAndUpdate({ _id: id }, updateTopicDto).exec();\n  }\n\n  async incrementNumberOfSupports(id: string, status: boolean): Promise {\n    const topic = await this.findOne(id);\n    if(status){\n      return this.update(id , { positiveSupports: topic.positiveSupports + 1 })\n    }\n    return this.update(id , { negativeSupports: topic.negativeSupports + 1 })\n\n  }\n\n  async remove(id: string): Promise {\n    return await this.topicModel.findOneAndDelete({ _id: id }).exec();\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateEventDto.html":{"url":"classes/UpdateEventDto.html","title":"class - UpdateEventDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateEventDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/events/dto/update-event.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateEventDto } from './create-event.dto';\n\nexport class UpdateEventDto extends PartialType(CreateEventDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateFileDto.html":{"url":"classes/UpdateFileDto.html","title":"class - UpdateFileDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateFileDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/files/dto/update-file.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateFileDto } from './create-file.dto';\n\nexport class UpdateFileDto extends PartialType(CreateFileDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateLikeDto.html":{"url":"classes/UpdateLikeDto.html","title":"class - UpdateLikeDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateLikeDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/likes/dto/update-like.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateLikeDto } from './create-like.dto';\n\nexport class UpdateLikeDto extends PartialType(CreateLikeDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePinDto.html":{"url":"classes/UpdatePinDto.html","title":"class - UpdatePinDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePinDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/pins/dto/update-pin.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePinDto } from './create-pin.dto';\n\nexport class UpdatePinDto extends PartialType(CreatePinDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRejoinderDto.html":{"url":"classes/UpdateRejoinderDto.html","title":"class - UpdateRejoinderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRejoinderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/rejoinders/dto/update-rejoinder.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateRejoinderDto } from './create-rejoinder.dto';\n\nexport class UpdateRejoinderDto extends PartialType(CreateRejoinderDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateReplyDto.html":{"url":"classes/UpdateReplyDto.html","title":"class - UpdateReplyDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateReplyDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/replies/dto/update-reply.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateReplyDto } from './create-reply.dto';\n\nexport class UpdateReplyDto extends PartialType(CreateReplyDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateSupportDto.html":{"url":"classes/UpdateSupportDto.html","title":"class - UpdateSupportDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateSupportDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/supports/dto/update-support.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateSupportDto } from './create-support.dto';\n\nexport class UpdateSupportDto extends PartialType(CreateSupportDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTopicDto.html":{"url":"classes/UpdateTopicDto.html","title":"class - UpdateTopicDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTopicDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/topics/dto/update-topic.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateTopicDto } from './create-topic.dto';\n\nexport class UpdateTopicDto extends PartialType(CreateTopicDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ageRange\n                            \n                            \n                                avatarId\n                            \n                            \n                                categoryId\n                            \n                            \n                                comparePassword\n                            \n                            \n                                education\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                isAdmin\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ageRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatarId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'fs.files'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Category'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            comparePassword\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Function\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            education\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isAdmin\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\nexport type UserDocument = User & Document;\n\n@Schema({\n  writeConcern: {}\n})\nexport class User {\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Category' })\n  categoryId: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'fs.files' })\n  avatarId: string;\n\n  @Prop()\n  firstName: string;\n\n  @Prop()\n  lastName: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  ageRange: string;\n\n  @Prop()\n  education: string;\n\n  @Prop()\n  isAdmin: boolean;\n\n  comparePassword: Function;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User);\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard'\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  async create(@Body() createUserDto: CreateUserDto) {\n    return await (this.usersService.create(createUserDto));\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(id, updateUserDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { User, UserSchema } from './schemas/user.schema';\nimport * as bcrypt from 'bcrypt';\n\n@Module({\n  imports: [\n    MongooseModule.forFeatureAsync([\n      {\n        name: User.name,\n        useFactory: () => {\n          UserSchema.pre('save', async function (next: Function) {\n            const user = this;\n            if (!user.isModified('password')) return next();\n            const hashedPassword = await bcrypt.hash(user.get('password'), 10);\n            user.set({ password: hashedPassword });\n            next();\n          });\n\n          UserSchema.methods = {\n              comparePassword: async function (plainPassword) {\n              const user = this;\n              return await bcrypt.compare(plainPassword, user.get('password'));\n            },\n          }\n\n          UserSchema.set('toJSON', {\n            transform: function (doc, ret, options) {\n              ret.id = ret._id;\n              delete ret._id;\n              delete ret.__v;\n              delete ret.password;\n            }\n          });\n\n          return UserSchema;\n        },\n      },\n    ])\n  ],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersSeed.html":{"url":"injectables/UsersSeed.html","title":"injectable - UsersSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/seeds/seeds.users.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/seeds/seeds.users.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(categories)\n                \n            \n\n\n            \n                \n                    Defined in src/seeds/seeds.users.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    categories\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\n\nexport const users = (categories) => {\n    const users = [\n        {\n            firstName: \"Aarão\",\n            lastName: \"Melo\",\n            email: \"aarao@mail.com\",\n            password: \"12345678\",\n            gender: \"Masculino\",\n            ageRange: \"Entre 20 e 30 anos\",\n            education: \"Superior completo\",\n            isAdmin: true,\n        },\n        {\n            firstName: \"Joe\",\n            lastName: \"Lopes\",\n            email: \"joe@mail.com\",\n            password: \"12345678\",\n            gender: \"Masculino\",\n            ageRange: \"Entre 20 e 30 anos\",\n            education: \"Superior completo\",\n            isAdmin: false,\n        }\n    ]\n    return users.map((user, index) => {\n        return {\n            ...user,\n            categoryId: categories[index % categories.length],\n            avatarId: '60689bc939f8713cc87acb83',\n        }\n    })\n};\n\n@Injectable()\nexport class UsersSeed {\n    constructor(private readonly usersService: UsersService) { }\n\n    async create(categories) {\n        console.log(\"Seeding users ...\");\n        const promiseArray = users(categories)\n            .map((user) => this.usersService.create(user));\n        try {\n            return (await Promise.all(promiseArray))\n                .map((response) => {\n                    console.log(response);\n                    return response;\n                });\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schemas/user.schema';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private userModel:Model) {}\n\n  async create(createUserDto: CreateUserDto):Promise {\n      const createdUser = new this.userModel(createUserDto);\n      return (await createdUser.save()).toJSON().id;\n  }\n\n  findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async findOne(id: string): Promise {\n    return await this.userModel.findOne({ _id: id });\n  }\n\n  async findByEmail(email: string):Promise {\n    return await this.userModel.findOne({ email });\n  }\n\n  async update(id: string, updateUserDto: UpdateUserDto): Promise {\n    return this.userModel.findByIdAndUpdate({ _id: id }, updateUserDto).exec();\n  }\n\n  async remove(id: string): Promise{\n    return await this.userModel.findOneAndDelete({ _id: id }).exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/casl/casl-ability.factory.ts\n            \n            class\n            CaslAbilityFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/categories/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/schemas/category.schema.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/schemas/category.schema.ts\n            \n            variable\n            CategorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cli.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events/dto/create-event.dto.ts\n            \n            class\n            CreateEventDto\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/events/dto/update-event.dto.ts\n            \n            class\n            UpdateEventDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/events/events.controller.ts\n            \n            controller\n            EventsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/events/events.service.ts\n            \n            injectable\n            EventsService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/events/schemas/event.schema.ts\n            \n            class\n            Event\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/events/schemas/event.schema.ts\n            \n            variable\n            EventSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/create-file.dto.ts\n            \n            class\n            CreateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/dto/update-file.dto.ts\n            \n            class\n            UpdateFileDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/entities/file.entity.ts\n            \n            class\n            File\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/file-info-vm.model.ts\n            \n            class\n            FileInfoVm\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/file-response-vm.model.ts\n            \n            class\n            FileResponseVm\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            controller\n            FilesController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/files/files.controller.ts\n            \n            variable\n            ApiException\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/files/files.service.ts\n            \n            injectable\n            FilesService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/files/multer-config.service.ts\n            \n            injectable\n            GridFsMulterConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/files/multer-utils.service.ts\n            \n            injectable\n            MulterUtils\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/likes/dto/create-like.dto.ts\n            \n            class\n            CreateLikeDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/likes/dto/update-like.dto.ts\n            \n            class\n            UpdateLikeDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/likes/likes.controller.ts\n            \n            controller\n            LikesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/likes/likes.service.ts\n            \n            injectable\n            LikesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/likes/schemas/like.schema.ts\n            \n            class\n            Like\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/likes/schemas/like.schema.ts\n            \n            variable\n            LikeSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pins/dto/create-location.dto.ts\n            \n            class\n            CreatelocationDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/pins/dto/create-pin.dto.ts\n            \n            class\n            CreatePinDto\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/pins/dto/update-pin.dto.ts\n            \n            class\n            UpdatePinDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/pins/pins.controller.ts\n            \n            controller\n            PinsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/pins/pins.service.ts\n            \n            injectable\n            PinsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/pins/schemas/pin.schema.ts\n            \n            class\n            Pin\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/pins/schemas/pin.schema.ts\n            \n            variable\n            PinSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rejoinders/dto/create-rejoinder.dto.ts\n            \n            class\n            CreateRejoinderDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/rejoinders/dto/update-rejoinder.dto.ts\n            \n            class\n            UpdateRejoinderDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/rejoinders/rejoinders.controller.ts\n            \n            controller\n            RejoindersController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/rejoinders/rejoinders.service.ts\n            \n            injectable\n            RejoindersService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/rejoinders/schemas/rejoinders.schema.ts\n            \n            class\n            Rejoinder\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/rejoinders/schemas/rejoinders.schema.ts\n            \n            variable\n            RejoinderSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/replies/dto/create-reply.dto.ts\n            \n            class\n            CreateReplyDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/replies/dto/update-reply.dto.ts\n            \n            class\n            UpdateReplyDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/replies/replies.controller.ts\n            \n            controller\n            RepliesController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/replies/replies.service.ts\n            \n            injectable\n            RepliesService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/replies/schemas/reply.schema.ts\n            \n            class\n            Reply\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/replies/schemas/reply.schema.ts\n            \n            variable\n            ReplySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeds/seeds.app.ts\n            \n            injectable\n            AppSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.categories.ts\n            \n            injectable\n            CategoriesSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.categories.ts\n            \n            variable\n            categories\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeds/seeds.events.ts\n            \n            injectable\n            EventsSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.events.ts\n            \n            variable\n            events\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeds/seeds.likes.ts\n            \n            injectable\n            LikesSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.likes.ts\n            \n            variable\n            likes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeds/seeds.pins.ts\n            \n            injectable\n            PinsSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.pins.ts\n            \n            variable\n            pins\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeds/seeds.rejoinders.ts\n            \n            injectable\n            RejoindersSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.rejoinders.ts\n            \n            variable\n            rejoinders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeds/seeds.replies.ts\n            \n            injectable\n            RepliesSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.replies.ts\n            \n            variable\n            replies\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeds/seeds.supports.ts\n            \n            injectable\n            SupportsSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.supports.ts\n            \n            variable\n            supports\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeds/seeds.topics.ts\n            \n            injectable\n            TopicsSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.topics.ts\n            \n            variable\n            topics\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/seeds/seeds.users.ts\n            \n            injectable\n            UsersSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/seeds/seeds.users.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/supports/dto/create-support.dto.ts\n            \n            class\n            CreateSupportDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/supports/dto/update-support.dto.ts\n            \n            class\n            UpdateSupportDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/supports/schemas/support.schema.ts\n            \n            class\n            Support\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/supports/schemas/support.schema.ts\n            \n            variable\n            SupportSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/supports/supports.controller.ts\n            \n            controller\n            SupportsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/supports/supports.service.ts\n            \n            injectable\n            SupportsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/topics/dto/create-topic.dto.ts\n            \n            class\n            CreateTopicDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/topics/dto/update-topic.dto.ts\n            \n            class\n            UpdateTopicDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/topics/schemas/topic.schema.ts\n            \n            class\n            Topic\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/topics/schemas/topic.schema.ts\n            \n            variable\n            TopicSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/topics/topics.controller.ts\n            \n            controller\n            TopicsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/topics/topics.service.ts\n            \n            injectable\n            TopicsService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @casl/ability : ^5.2.2\n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/config : ^0.6.3\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.8.0\n        \n            @types/multer-gridfs-storage : ^4.0.1\n        \n            axios : ^0.21.1\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.4.0\n        \n            mongo-gridfs : ^1.1.0\n        \n            mongoose : ^5.12.3\n        \n            multer-gridfs-storage : ^4.2.0\n        \n            nestjs-command : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            swagger-ui-express : ^4.1.6\n        \n            yargs : ^16.2.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Action   (src/.../action.enum.ts)\n                        \n                        \n                            UploadTypesEnum   (src/.../upload-types.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/casl/action.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        Action\n                    \n                \n                    \n                        \n                            Upload types enum\n\n                        \n                    \n                        \n                            \n                                 Manage\n                            \n                        \n                        \n                            \n                                Value : manage\n                            \n                        \n                        \n                            \n                                 Create\n                            \n                        \n                        \n                            \n                                Value : create\n                            \n                        \n                        \n                            \n                                 Read\n                            \n                        \n                        \n                            \n                                Value : read\n                            \n                        \n                        \n                            \n                                 Update\n                            \n                        \n                        \n                            \n                                Value : update\n                            \n                        \n                        \n                            \n                                 Delete\n                            \n                        \n                        \n                            \n                                Value : delete\n                            \n                        \n            \n        \n\n    src/files/upload-types.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        UploadTypesEnum\n                    \n                \n                    \n                        \n                            Upload types enum\n\n                        \n                    \n                        \n                            \n                                 ANY\n                            \n                        \n                        \n                            \n                                Value : jpg|jpeg|png|gif|pdf|docx|doc|xlsx|xls\n                            \n                        \n                        \n                            \n                                 IMAGES\n                            \n                        \n                        \n                            \n                                Value : jpg|jpeg|png|gif\n                            \n                        \n                        \n                            \n                                 DOCS\n                            \n                        \n                        \n                            \n                                Value : pdf|docx|doc|xlsx|xls\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../cli.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CaslModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EventsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LikesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PinsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RejoindersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RepliesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeedsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SupportsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TopicsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_exports\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_EventsModule\n\n\n\ncluster_EventsModule_exports\n\n\n\ncluster_EventsModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_LikesModule\n\n\n\ncluster_LikesModule_exports\n\n\n\ncluster_LikesModule_providers\n\n\n\ncluster_PinsModule\n\n\n\ncluster_PinsModule_exports\n\n\n\ncluster_PinsModule_providers\n\n\n\ncluster_RejoindersModule\n\n\n\ncluster_RejoindersModule_exports\n\n\n\ncluster_RejoindersModule_providers\n\n\n\ncluster_RepliesModule\n\n\n\ncluster_RepliesModule_exports\n\n\n\ncluster_RepliesModule_providers\n\n\n\ncluster_SeedsModule\n\n\n\ncluster_SeedsModule_providers\n\n\n\ncluster_SupportsModule\n\n\n\ncluster_SupportsModule_exports\n\n\n\ncluster_SupportsModule_providers\n\n\n\ncluster_TopicsModule\n\n\n\ncluster_TopicsModule_exports\n\n\n\ncluster_TopicsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCaslModule\n\nCaslModule\n\nAppModule -->\n\nCaslModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\n\n\nSeedsModule\n\nSeedsModule\n\nSeedsModule -->\n\nCategoriesModule->SeedsModule\n\n\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nCategoriesService \n\nCategoriesService \n\nCategoriesService  -->\n\nCategoriesModule->CategoriesService \n\n\n\n\n\nEventsModule\n\nEventsModule\n\nSeedsModule -->\n\nEventsModule->SeedsModule\n\n\n\nAppModule -->\n\nEventsModule->AppModule\n\n\n\n\n\nEventsService \n\nEventsService \n\nEventsService  -->\n\nEventsModule->EventsService \n\n\n\n\n\nFilesModule\n\nFilesModule\n\nAppModule -->\n\nFilesModule->AppModule\n\n\n\n\n\nLikesModule\n\nLikesModule\n\nSeedsModule -->\n\nLikesModule->SeedsModule\n\n\n\nAppModule -->\n\nLikesModule->AppModule\n\n\n\n\n\nLikesService \n\nLikesService \n\nLikesService  -->\n\nLikesModule->LikesService \n\n\n\n\n\nPinsModule\n\nPinsModule\n\nSeedsModule -->\n\nPinsModule->SeedsModule\n\n\n\nAppModule -->\n\nPinsModule->AppModule\n\n\n\n\n\nPinsService \n\nPinsService \n\nPinsService  -->\n\nPinsModule->PinsService \n\n\n\n\n\nRejoindersModule\n\nRejoindersModule\n\nSeedsModule -->\n\nRejoindersModule->SeedsModule\n\n\n\nAppModule -->\n\nRejoindersModule->AppModule\n\n\n\n\n\nRejoindersService \n\nRejoindersService \n\nRejoindersService  -->\n\nRejoindersModule->RejoindersService \n\n\n\n\n\nRepliesModule\n\nRepliesModule\n\nSeedsModule -->\n\nRepliesModule->SeedsModule\n\n\n\nAppModule -->\n\nRepliesModule->AppModule\n\n\n\n\n\nRepliesService \n\nRepliesService \n\nRepliesService  -->\n\nRepliesModule->RepliesService \n\n\n\nAppModule -->\n\nSeedsModule->AppModule\n\n\n\n\n\nSupportsModule\n\nSupportsModule\n\nSeedsModule -->\n\nSupportsModule->SeedsModule\n\n\n\nAppModule -->\n\nSupportsModule->AppModule\n\n\n\n\n\nSupportsService \n\nSupportsService \n\nSupportsService  -->\n\nSupportsModule->SupportsService \n\n\n\n\n\nTopicsModule\n\nTopicsModule\n\nSeedsModule -->\n\nTopicsModule->SeedsModule\n\n\n\nSupportsModule -->\n\nTopicsModule->SupportsModule\n\n\n\nAppModule -->\n\nTopicsModule->AppModule\n\n\n\n\n\nTopicsService \n\nTopicsService \n\nTopicsService  -->\n\nTopicsModule->TopicsService \n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nSeedsModule -->\n\nUsersModule->SeedsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nEventsService\n\nEventsService\n\nEventsModule -->\n\nEventsService->EventsModule\n\n\n\n\n\nFilesService\n\nFilesService\n\nFilesModule -->\n\nFilesService->FilesModule\n\n\n\n\n\nGridFsMulterConfigService\n\nGridFsMulterConfigService\n\nFilesModule -->\n\nGridFsMulterConfigService->FilesModule\n\n\n\n\n\nLikesService\n\nLikesService\n\nLikesModule -->\n\nLikesService->LikesModule\n\n\n\n\n\nPinsService\n\nPinsService\n\nPinsModule -->\n\nPinsService->PinsModule\n\n\n\n\n\nRejoindersService\n\nRejoindersService\n\nRejoindersModule -->\n\nRejoindersService->RejoindersModule\n\n\n\n\n\nRepliesService\n\nRepliesService\n\nRepliesModule -->\n\nRepliesService->RepliesModule\n\n\n\n\n\nAppSeed\n\nAppSeed\n\nSeedsModule -->\n\nAppSeed->SeedsModule\n\n\n\n\n\nCategoriesSeed\n\nCategoriesSeed\n\nSeedsModule -->\n\nCategoriesSeed->SeedsModule\n\n\n\n\n\nEventsSeed\n\nEventsSeed\n\nSeedsModule -->\n\nEventsSeed->SeedsModule\n\n\n\n\n\nLikesSeed\n\nLikesSeed\n\nSeedsModule -->\n\nLikesSeed->SeedsModule\n\n\n\n\n\nPinsSeed\n\nPinsSeed\n\nSeedsModule -->\n\nPinsSeed->SeedsModule\n\n\n\n\n\nRejoindersSeed\n\nRejoindersSeed\n\nSeedsModule -->\n\nRejoindersSeed->SeedsModule\n\n\n\n\n\nRepliesSeed\n\nRepliesSeed\n\nSeedsModule -->\n\nRepliesSeed->SeedsModule\n\n\n\n\n\nSupportsSeed\n\nSupportsSeed\n\nSeedsModule -->\n\nSupportsSeed->SeedsModule\n\n\n\n\n\nTopicsSeed\n\nTopicsSeed\n\nSeedsModule -->\n\nTopicsSeed->SeedsModule\n\n\n\n\n\nUsersSeed\n\nUsersSeed\n\nSeedsModule -->\n\nUsersSeed->SeedsModule\n\n\n\n\n\nSupportsService\n\nSupportsService\n\nSupportsModule -->\n\nSupportsService->SupportsModule\n\n\n\n\n\nTopicsService\n\nTopicsService\n\nTopicsModule -->\n\nTopicsService->TopicsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    28 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    34 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoryDocument   (src/.../category.schema.ts)\n                        \n                        \n                            EventDocument   (src/.../event.schema.ts)\n                        \n                        \n                            LikeDocument   (src/.../like.schema.ts)\n                        \n                        \n                            PinDocument   (src/.../pin.schema.ts)\n                        \n                        \n                            RejoinderDocument   (src/.../rejoinders.schema.ts)\n                        \n                        \n                            ReplyDocument   (src/.../reply.schema.ts)\n                        \n                        \n                            SupportDocument   (src/.../support.schema.ts)\n                        \n                        \n                            TopicDocument   (src/.../topic.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/categories/schemas/category.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CategoryDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/events/schemas/event.schema.ts\n    \n    \n        \n            \n                \n                    \n                    EventDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/likes/schemas/like.schema.ts\n    \n    \n        \n            \n                \n                    \n                    LikeDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/pins/schemas/pin.schema.ts\n    \n    \n        \n            \n                \n                    \n                    PinDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/rejoinders/schemas/rejoinders.schema.ts\n    \n    \n        \n            \n                \n                    \n                    RejoinderDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/replies/schemas/reply.schema.ts\n    \n    \n        \n            \n                \n                    \n                    ReplyDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/supports/schemas/support.schema.ts\n    \n    \n        \n            \n                \n                    \n                    SupportDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/topics/schemas/topic.schema.ts\n    \n    \n        \n            \n                \n                    \n                    TopicDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ApiException   (src/.../files.controller.ts)\n                        \n                        \n                            categories   (src/.../seeds.categories.ts)\n                        \n                        \n                            CategorySchema   (src/.../category.schema.ts)\n                        \n                        \n                            events   (src/.../seeds.events.ts)\n                        \n                        \n                            EventSchema   (src/.../event.schema.ts)\n                        \n                        \n                            likes   (src/.../seeds.likes.ts)\n                        \n                        \n                            LikeSchema   (src/.../like.schema.ts)\n                        \n                        \n                            pins   (src/.../seeds.pins.ts)\n                        \n                        \n                            PinSchema   (src/.../pin.schema.ts)\n                        \n                        \n                            rejoinders   (src/.../seeds.rejoinders.ts)\n                        \n                        \n                            RejoinderSchema   (src/.../rejoinders.schema.ts)\n                        \n                        \n                            replies   (src/.../seeds.replies.ts)\n                        \n                        \n                            ReplySchema   (src/.../reply.schema.ts)\n                        \n                        \n                            supports   (src/.../seeds.supports.ts)\n                        \n                        \n                            SupportSchema   (src/.../support.schema.ts)\n                        \n                        \n                            topics   (src/.../seeds.topics.ts)\n                        \n                        \n                            TopicSchema   (src/.../topic.schema.ts)\n                        \n                        \n                            users   (src/.../seeds.users.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/files/files.controller.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ApiException\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => class {\n    statusCode: HttpStatus;\n    message: any;\n    error: string;\n}\n                        \n                    \n\n\n            \n        \n\n    src/seeds/seeds.categories.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            categories\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    {\n        label: \"Artes visuais, arte urbana e arte digital\",\n        color: \"#633D35\",\n        legend: \"a\",\n        value: 1,\n        icon: \"1.png\"\n    },\n    {\n        label: \"Escultura e Artesanato\",\n        color: \"#AA4245\",\n        legend: \"e\",\n        value: 2,\n        icon: \"2.png\"\n    },\n    {\n        label: \"Dança\",\n        color: \"#DF694A\",\n        legend: \"d\",\n        value: 3,\n        icon: \"3.png\"\n    },\n    {\n        label: \"Teatro e Circo\",\n        color: \"#E0BC68\",\n        legend: \"t\",\n        value: 4,\n        icon: \"4.png\"\n    },\n    {\n        label: \"Cinema e Audiovisual\",\n        color: \"#EFBC5E\",\n        legend: \"c\",\n        value: 5,\n        icon: \"5.png\"\n    },\n    {\n        label: \"Fotografia\",\n        color: \"#62A06B\",\n        legend: \"f\",\n        value: 6,\n        icon: \"6.png\"\n    },\n    {\n        label: \"Literatura\",\n        color: \"#528443\",\n        legend: \"l\",\n        value: 7,\n        icon: \"7.png\"\n    },\n    {\n        label: \"Design e Moda\",\n        color: \"#2C4A25\",\n        legend: \"d\",\n        value: 8,\n        icon: \"8.png\"\n    },\n    {\n        label: \"Música\",\n        color: \"#0E68D8\",\n        legend: \"m\",\n        value: 9,\n        icon: \"9.png\"\n    },\n    {\n        label: \"Patrimônio cultural e Museologia\",\n        color: \"#53A4DF\",\n        legend: \"p\",\n        value: 10,\n        icon: \"10.png\"\n    },\n    {\n        label: \"Cultura popular, Folclore e Capoeira\",\n        color: \"#95C6DC\",\n        legend: \"c\",\n        value: 11,\n        icon: \"11.png\"\n    },\n    {\n        label: \"Gastronomia\",\n        color: \"#D390A2\",\n        legend: \"g\",\n        value: 12,\n        icon: \"12.png\"\n    },\n    {\n        label: \"Cultura Afro-brasileira\",\n        color: \"#CC748C\",\n        legend: \"c\",\n        value: 13,\n        icon: \"13.png\"\n    },\n    {\n        label: \"Cultura Indígena\",\n        color: \"#C95676\",\n        legend: \"c\",\n        value: 14,\n        icon: \"15.png\"\n    },\n    {\n        label: \"Gestores Públicos\",\n        color: \"#BB7165\",\n        legend: \"g\",\n        value: 15,\n        icon: \"15.png\"\n    },\n    {\n        label: \"Produtor Cultural\",\n        color: \"#AA4245\",\n        legend: \"p\",\n        value: 16,\n        icon: \"16.png\"\n    },\n    {\n        label: \"Espaços culturais\",\n        color: \"#633D35\",\n        legend: \"e\",\n        value: 17,\n        icon: \"17.png\"\n    },\n    {\n        label: \"Espaços públicos\",\n        color: \"#DF694A\",\n        legend: \"e\",\n        value: 18,\n        icon: \"18.png\"\n    }\n]\n                        \n                    \n\n\n            \n        \n\n    src/categories/schemas/category.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategorySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Category)\n  .set('toJSON', {\n    transform: function (doc, ret, options) {\n      ret.id = ret._id;\n      delete ret._id;\n      delete ret.__v;\n    }\n  })\n                        \n                    \n\n\n            \n        \n\n    src/seeds/seeds.events.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            events\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (categories, users) => {\n    const events = [\n        {\n            title: \"Event 1\",\n            date: new Date(),\n            street: \"rua 1\",\n            neighborhood: \"bairro 1\",\n            city: 'cidade 1',\n            zipcode: 69303410,\n            number: 1,\n            ticket: 1,\n            description: \"descrição 1\",\n            facebook: \"https://www.facebook.com/\",\n            instagram: \"https://www.instagram.com/\",\n            whatsapp: \"https://www.whatsapp.com/\",\n            twitter: \"https://www.twitter.com/\"\n        },\n        {\n            title: \"Event 2\",\n            date: new Date(),\n            street: \"rua 2\",\n            neighborhood: \"bairro 2\",\n            city: 'cidade 2',\n            zipcode: 69303420,\n            number: 2,\n            ticket: 2,\n            description: \"descrição 2\",\n            facebook: \"https://www.facebook.com/\",\n            instagram: \"https://www.instagram.com/\",\n            whatsapp: \"https://www.whatsapp.com/\",\n            twitter: \"https://www.twitter.com/\"\n        }\n    ]\n    return events.map((event, index) => {\n        return {\n            ...event,\n            categoryId: categories[index % categories.length],\n            userId: users[index % users.length],\n            imageIds: ['60689bc939f8713cc87acb83']\n        }\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/events/schemas/event.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EventSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Event)\n                        \n                    \n\n\n            \n        \n\n    src/seeds/seeds.likes.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            likes\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (topics, replies, users) => {\n    const likes = [\n        {}, {}, {}, {}, {}, {}, {}, {}\n    ]\n    return likes.map((like, index) => {\n        return { \n            ...like,\n            replyId: replies[index % replies.length],\n            topicId: topics[index % topics.length],\n            userId: users[index % users.length],\n        }\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/likes/schemas/like.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LikeSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Like)\n                        \n                    \n\n\n            \n        \n\n    src/seeds/seeds.pins.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pins\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (categories, users) => {\n    const pins = [\n        {\n            title: 'Brava',\n            email: 'brava@email.com',\n            phone: 6732533795,\n            street: 'Av Calógeras',\n            number: 3100,\n            neighborhood: 'Centro',\n            city: 'Campo Crande',\n            zipcode: 79004381,\n            description: 'Muito mais que um bar, um Bar',\n            lat: -20.453422,\n            long: -54.620065,\n            facebook: 'https://www.facebook.com/brava3100',\n            instagram: 'https://www.instagram.com/brava3100/',\n            twitter: 'https://twitter.com',\n            whatsapp: 'https://whatsapp.com'\n          },\n          {\n            title: 'Casa Colonial',\n            email: 'casacolonial@email.com',\n            phone: 6333833207,\n            street: 'Av. Afonso Pena',\n            number: 3997,\n            neighborhood: 'Centro',\n            city: 'Campo Crande',\n            zipcode: 79020000,\n            description: 'á la carte fino com destaque ao galeto, costelinha e talharim, com arquitetura e decoração de estilo colonial',\n            lat: -20.460178,\n            long: -54.598564,\n            facebook: 'https://www.facebook.com/CasaColonialCG',\n            instagram: 'https://www.instagram.com/casacolonialcg/',\n            twitter: 'https://twitter.com',\n            whatsapp: 'https://whatsapp.com'\n          }\n    ]\n    return pins.map((pin, index) => {\n        return { \n            ...pin, \n            categoryId: categories[index % categories.length],\n            userId: users[index % users.length],\n            imageIds: ['60689bc939f8713cc87acb83', '6068a568b884f04dbc47e976']\n        }\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/pins/schemas/pin.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PinSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Pin)\n                        \n                    \n\n\n            \n        \n\n    src/seeds/seeds.rejoinders.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            rejoinders\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (topics, replies, users) => {\n    const rejoinders = [\n        {}, {}, {}, {}, {}, {}, {}, {}\n    ]\n    return rejoinders.map((like, index) => {\n        return { \n            ...like,\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            replyId: replies[index % replies.length],\n            topicId: topics[index % topics.length],\n            userId: users[index % users.length],\n            createdAt: new Date()\n        }\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/rejoinders/schemas/rejoinders.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RejoinderSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Rejoinder)\n                        \n                    \n\n\n            \n        \n\n    src/seeds/seeds.replies.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            replies\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (topics, users) => {\n    const replies = [\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        },\n        {\n            content: 'Aperiam minima autem aliquam alias consequuntur quas magnam?',\n            numberOfLikes: 0,\n            createdAt: new Date()\n        }\n    ]\n    return replies.map((support, index) => {\n        return {\n            ...support,\n            topicId: topics[index % topics.length],\n            userId: users[index % users.length],\n        }\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/replies/schemas/reply.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ReplySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Reply)\n                        \n                    \n\n\n            \n        \n\n    src/seeds/seeds.supports.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            supports\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (topics, users) => {\n    const supports = [\n        {\n            status: true,\n        },\n        {\n            status: false,\n        },\n        {\n            status: true,\n        },\n        {\n            status: false,\n        }\n    ]\n    return supports.map((support, index) => {\n        return { \n            ...support, \n            topicId: topics[index % topics.length],\n            userId: users[index % users.length],\n        }\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/supports/schemas/support.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            SupportSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Support)\n                        \n                    \n\n\n            \n        \n\n    src/seeds/seeds.topics.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            topics\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (categories, users) => {\n    const topics = [\n        {\n            title: \"Dance Fest 1\",\n            positiveSupports: 0,\n            negativeSupports: 0,\n            numberOfReplies: 0,\n            content: \"pula fogueira Lorem Ipsum é simplesmente uma simulação de texto da indústria tipográplesmente uma simulação de texto da indústria tipográfica ede impressos,\",\n            views: 0,\n            createdAt: new Date()\n          },\n          {\n            title: \"Dance Fest 2\",\n            positiveSupports: 0,\n            negativeSupports: 0,\n            numberOfReplies: 0,\n            content: \"pula fogueira Lorem Ipsum é simplesmente uma simulação de texto da indústria tipográplesmente uma simulação de texto da indústria tipográfica ede impressos,\",\n            views: 0,\n            createdAt: new Date()\n          },\n    ]\n    return topics.map((topic, index) => {\n        const category = categories[index % categories.length];\n        return { \n            ...topic,\n            userId: users[index % users.length],\n            categoryId: category,\n            categoriesTagged: [category, category]\n        }\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/topics/schemas/topic.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TopicSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Topic)\n                        \n                    \n\n\n            \n        \n\n    src/seeds/seeds.users.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (categories) => {\n    const users = [\n        {\n            firstName: \"Aarão\",\n            lastName: \"Melo\",\n            email: \"aarao@mail.com\",\n            password: \"12345678\",\n            gender: \"Masculino\",\n            ageRange: \"Entre 20 e 30 anos\",\n            education: \"Superior completo\",\n            isAdmin: true,\n        },\n        {\n            firstName: \"Joe\",\n            lastName: \"Lopes\",\n            email: \"joe@mail.com\",\n            password: \"12345678\",\n            gender: \"Masculino\",\n            ageRange: \"Entre 20 e 30 anos\",\n            education: \"Superior completo\",\n            isAdmin: false,\n        }\n    ]\n    return users.map((user, index) => {\n        return {\n            ...user,\n            categoryId: categories[index % categories.length],\n            avatarId: '60689bc939f8713cc87acb83',\n        }\n    })\n}\n                        \n                    \n\n\n            \n        \n\n    src/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
