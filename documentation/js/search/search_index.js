var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.497,1,2.023]],["body/controllers/AppController.html",[0,2.044,1,2.764,2,1.503,3,0.32,4,0.277,5,0.277,6,2.642,7,0.461,8,1.442,9,4.379,10,1.784,11,3.118,12,2.044,13,0.033,14,0.933,15,3.171,16,1.442,17,1.57,18,3.171,19,3.171,20,3.171,21,1.155,22,0.974,23,1.155,24,4.312,25,0.765,26,3.171,27,2.293,28,2.642,29,2.293,30,0.568,31,2.551,32,2.642,33,2.033,34,3.171,35,2.642,36,2.322,37,3.171,38,0.32,39,0.05,40,1.652,41,1.825,42,2.033,43,1.711,44,3.171,45,3.171,46,3.171,47,3.171,48,3.171,49,0.016,50,0.022,51,0.016]],["title/modules/AppModule.html",[52,1.253,53,2.023]],["body/modules/AppModule.html",[1,2.992,2,1.919,3,0.292,4,0.253,5,0.253,13,0.033,25,0.84,30,0.518,31,2.872,32,2.411,38,0.292,39,0.045,49,0.015,50,0.021,51,0.015,52,1.853,53,3.886,54,1.372,55,1.372,56,1.253,57,1.665,58,1.372,59,2.686,60,1.665,61,2.411,62,2.411,63,2.411,64,3.173,65,3.173,66,2.872,67,2.329,68,1.665,69,1.665,70,2.894,71,2.595,72,4.048,73,1.855,74,1.855,75,2.092,76,1.253,77,2.894,78,2.894,79,2.411,80,2.894,81,2.894,82,2.894]],["title/injectables/AppService.html",[31,1.644,83,0.41]],["body/injectables/AppService.html",[3,0.412,4,0.357,5,0.357,7,0.595,8,1.701,9,4.827,13,0.032,14,0.884,16,1.366,17,1.852,25,0.595,30,0.732,31,2.649,38,0.412,39,0.064,43,1.621,49,0.021,50,0.026,51,0.021,83,0.661,84,1.366,85,3.404,86,4.086,87,4.086,88,4.086]],["title/modules/AuthModule.html",[52,1.253,64,1.816]],["body/modules/AuthModule.html",[3,0.28,4,0.242,5,0.242,13,0.033,25,0.831,30,0.496,36,2.852,38,0.28,39,0.043,49,0.014,50,0.02,51,0.014,52,1.81,54,1.314,55,1.314,56,1.201,57,1.595,58,1.314,59,2.624,60,2.624,64,3.491,66,2.832,67,2.26,68,1.595,69,1.595,71,2.517,79,2.31,89,2.31,90,2.772,91,2.31,92,2.31,93,3.129,94,3.129,95,2.772,96,2.31,97,2.772,98,2.772,99,3.927,100,1.444,101,2.772,102,2.005,103,1.777,104,2.31,105,2.772,106,2.31,107,2.31,108,2.772,109,2.772,110,2.772]],["title/injectables/AuthService.html",[36,1.497,83,0.41]],["body/injectables/AuthService.html",[3,0.266,4,0.23,5,0.23,7,0.383,8,1.266,10,1.947,11,2.738,13,0.033,14,0.96,16,1.266,21,1.614,22,1.362,23,1.614,25,0.705,30,0.472,36,1.795,38,0.266,39,0.041,42,2.427,43,1.759,49,0.023,50,0.019,51,0.014,83,0.492,84,0.881,102,1.905,111,2.194,112,3.787,113,1.795,114,2.194,115,2.316,116,5.508,117,2.634,118,0.874,119,3.787,120,2.634,121,2.298,122,3.787,123,2.955,124,2.634,125,2.427,126,2.634,127,2.634,128,1.689,129,1.92,130,1.141,131,2.634,132,2.634,133,2.634,134,1.372,135,2.634,136,2.194,137,2.194,138,2.634,139,2.634,140,2.634,141,2.634,142,2.634]],["title/controllers/CategoriesController.html",[0,1.497,143,2.023]],["body/controllers/CategoriesController.html",[0,1.54,2,1.54,3,0.328,4,0.284,5,0.284,7,0.473,8,1.466,10,1.806,12,2.078,13,0.033,14,0.949,16,1.466,21,1.183,22,0.998,23,1.183,25,0.722,27,3.587,29,2.349,30,0.582,38,0.328,39,0.051,40,1.692,41,1.87,43,1.739,49,0.017,50,0.023,51,0.017,118,0.641,130,1.407,143,2.81,144,2.707,145,2.707,146,2.707,147,2.078,148,3.403,149,2.707,150,3.287,151,3.249,152,3.249,153,2.351,154,2.349,155,2.083,156,2.707,157,3.249,158,2.707,159,3.249,160,3.249]],["title/modules/CategoriesModule.html",[52,1.253,65,1.816]],["body/modules/CategoriesModule.html",[2,2.066,3,0.325,4,0.281,5,0.281,13,0.033,22,0.99,25,0.829,30,0.577,38,0.325,39,0.051,49,0.017,50,0.022,51,0.017,52,1.96,54,1.528,55,1.528,56,1.396,57,1.854,58,1.528,59,2.842,60,1.854,65,3.41,67,2.508,68,1.854,69,1.854,71,2.066,75,2.33,76,1.396,143,3.166,153,2.701,154,2.33,161,2.685,162,2.685,163,3.279,164,3.223,165,3.223,166,1.679,167,2.794,168,2.685,169,3.223,170,2.685,171,3.223,172,2.066]],["title/injectables/CategoriesSeed.html",[83,0.41,163,1.816]],["body/injectables/CategoriesSeed.html",[3,0.158,4,0.136,5,0.136,7,0.227,8,0.848,10,1.165,12,0.74,13,0.033,14,0.549,16,0.522,21,0.569,22,0.48,23,0.569,25,0.466,30,0.28,38,0.158,39,0.024,40,0.813,41,0.898,49,0.008,50,0.013,51,0.008,56,2.463,73,1.001,74,2.361,83,0.329,84,0.522,113,0.74,118,0.308,129,1.098,130,0.676,146,2.666,147,2.057,153,2.057,154,1.129,163,1.459,173,1.301,174,1.561,175,1.561,176,1.301,177,2.535,178,2.112,179,2.112,180,2.112,181,1.561,182,1.301,183,1.301,184,4.112,185,1.561,186,1.561,187,2.535,188,1.561,189,4.213,190,1.561,191,4.112,192,2.535,193,3.645,194,1.561,195,4.112,196,1.561,197,1.561,198,1.561,199,2.535,200,1.561,201,1.561,202,1.561,203,2.535,204,2.535,205,1.301,206,1.561,207,1.561,208,1.561,209,1.561,210,1.561,211,1.301,212,1.561,213,1.561,214,1.561,215,1.561,216,3.683,217,1.561,218,1.561,219,1.561,220,1.561,221,1.561,222,1.301,223,1.561,224,1.561,225,1.561,226,1.561,227,1.561,228,1.561,229,1.561,230,1.561,231,1.561,232,1.561,233,1.561,234,1.561,235,1.561,236,1.561,237,1.561,238,1.561,239,1.561,240,2.535,241,1.561,242,1.561,243,2.535,244,1.301,245,1.561,246,3.2,247,1.561,248,1.561,249,1.561,250,1.561,251,1.561,252,1.561,253,1.561,254,1.561,255,2.535,256,1.561,257,1.561,258,1.561,259,1.561,260,1.561,261,1.561,262,1.561,263,1.561,264,1.561,265,1.561,266,2.535,267,1.561,268,2.535,269,1.561,270,1.561,271,1.561,272,1.561,273,1.561,274,2.535,275,1.561,276,1.561,277,1.561,278,1.561,279,1.561,280,1.301,281,1.561,282,1.561,283,1.301,284,1.301,285,1.301,286,1.301,287,1.301,288,1.301,289,1.301]],["title/injectables/CategoriesService.html",[83,0.41,153,1.497]],["body/injectables/CategoriesService.html",[3,0.3,4,0.259,5,0.259,7,0.432,8,1.378,10,2.024,13,0.033,14,1.024,16,1.378,21,1.501,22,1.266,23,1.501,25,0.782,30,0.532,38,0.3,39,0.047,42,1.903,43,1.635,49,0.015,50,0.021,51,0.015,76,1.286,83,0.536,84,0.993,113,1.408,118,0.813,125,3.277,129,1.286,130,1.286,147,1.954,148,3.277,149,3.433,150,3.091,153,1.954,155,1.903,156,2.474,166,1.547,168,2.474,290,2.474,291,2.969,292,4.259,293,2.969,294,4.121,295,2.969,296,2.969,297,1.709,298,2.474,299,2.147,300,2.969,301,2.969,302,1.903,303,2.969,304,2.969,305,2.969]],["title/classes/Category.html",[39,0.05,166,1.644]],["body/classes/Category.html",[3,0.286,4,0.247,5,0.247,7,0.412,12,2.502,13,0.033,14,1.142,17,2.091,25,0.58,38,0.465,39,0.044,49,0.015,50,0.021,51,0.015,56,1.999,76,1.227,118,1.08,129,1.227,166,2.403,167,1.815,172,2.555,184,3.336,191,3.336,193,2.958,195,3.336,297,1.629,299,2.048,306,1.342,307,1.815,308,2.294,309,4.985,310,2.832,311,2.832,312,2.832,313,2.832,314,2.883,315,2.832,316,2.359,317,3.321,318,2.359,319,2.048,320,2.048,321,1.815,322,2.048,323,2.048,324,2.048,325,2.048,326,2.883,327,2.555,328,2.048]],["title/classes/CreateCategoryDto.html",[39,0.05,150,1.816]],["body/classes/CreateCategoryDto.html",[3,0.357,4,0.309,5,0.309,7,0.515,13,0.031,14,1.234,17,2.203,38,0.357,39,0.056,49,0.018,50,0.024,51,0.018,56,2.242,118,1.125,150,2.67,184,3.743,191,3.743,193,3.318,195,3.743,306,1.678,308,2.67,314,3.355,329,4.875,330,2.948,331,3.539,332,3.539,333,3.539,334,3.539,335,3.539]],["title/classes/CreateUserDto.html",[39,0.05,336,1.644]],["body/classes/CreateUserDto.html",[3,0.303,4,0.262,5,0.262,7,0.437,13,0.032,14,1.281,17,2.293,38,0.303,39,0.047,49,0.015,50,0.021,51,0.015,118,1.167,134,2.48,306,1.424,308,2.39,336,2.163,337,4.989,338,1.925,339,3.443,340,3.443,341,3.443,342,3.443,343,2.48,344,3.443,345,3.443,346,3.443,347,3.003,348,3.003,349,3.003,350,3.003,351,3.003,352,3.003,353,3.003,354,3.003,355,3.003]],["title/injectables/JwtAuthGuard.html",[83,0.41,356,2.023]],["body/injectables/JwtAuthGuard.html",[3,0.437,4,0.378,5,0.378,13,0.032,25,0.767,30,0.775,38,0.437,39,0.068,49,0.022,50,0.027,51,0.022,83,0.685,84,1.448,100,2.256,356,3.379,357,3.608,358,3.132,359,3.608,360,2.492,361,4.331]],["title/injectables/JwtStrategy.html",[83,0.41,93,1.816]],["body/injectables/JwtStrategy.html",[3,0.333,4,0.288,5,0.288,7,0.481,8,1.482,10,1.821,13,0.033,14,0.959,16,1.105,21,1.203,22,1.015,23,1.203,25,0.778,30,0.591,38,0.333,39,0.052,43,1.311,49,0.017,50,0.023,51,0.017,83,0.576,84,1.105,93,2.55,100,1.72,103,2.117,104,2.752,107,2.752,113,2.371,118,0.651,136,2.752,137,2.752,360,1.901,362,2.752,363,3.692,364,3.303,365,4.432,366,3.303,367,3.303,368,2.752,369,2.389,370,2.752,371,2.752,372,2.752,373,2.752,374,3.303,375,3.303,376,3.303,377,3.303,378,3.303,379,3.303,380,3.303,381,3.303]],["title/injectables/LocalAuthGuard.html",[33,2.023,83,0.41]],["body/injectables/LocalAuthGuard.html",[3,0.437,4,0.378,5,0.378,13,0.032,25,0.767,30,0.775,33,3.379,38,0.437,39,0.068,49,0.022,50,0.027,51,0.022,83,0.685,84,1.448,100,2.256,358,3.132,359,3.608,360,2.492,382,3.608,383,4.331]],["title/injectables/LocalStrategy.html",[83,0.41,94,1.816]],["body/injectables/LocalStrategy.html",[3,0.302,4,0.261,5,0.261,7,0.435,8,1.385,10,1.73,13,0.033,14,0.897,16,1,17,2.029,21,1.509,22,1.272,23,1.509,25,0.746,30,0.536,36,2.641,38,0.302,39,0.047,40,1.558,43,1.187,49,0.015,50,0.021,51,0.015,83,0.538,84,1,94,2.384,96,2.492,100,1.558,113,1.418,118,0.817,121,2.253,125,2.655,129,1.296,130,1.296,134,2.672,302,1.918,343,2.475,360,1.722,363,3.451,368,2.492,369,2.163,371,2.492,372,2.492,373,2.492,384,2.492,385,2.992,386,2.992,387,4.143,388,2.992,389,2.492,390,4.143,391,2.992,392,2.992,393,2.992]],["title/classes/LoginUserDto.html",[39,0.05,123,1.816]],["body/classes/LoginUserDto.html",[3,0.412,4,0.357,5,0.357,7,0.595,13,0.031,14,1.101,17,2.11,38,0.412,39,0.064,49,0.021,50,0.026,51,0.021,118,1.003,123,2.926,134,2.884,306,1.937,308,2.926,338,2.619,343,2.884,394,4.613,395,4.086,396,4.086]],["title/classes/UpdateUserDto.html",[39,0.05,397,1.816]],["body/classes/UpdateUserDto.html",[3,0.435,4,0.376,5,0.376,13,0.032,25,0.764,38,0.435,39,0.068,49,0.022,50,0.027,51,0.022,128,2.761,147,2.042,306,2.042,336,2.243,338,2.761,360,2.479,397,3.023,398,3.588,399,4.307,400,3.588,401,3.588,402,4.307]],["title/classes/User.html",[39,0.05,121,1.497]],["body/classes/User.html",[3,0.229,4,0.198,5,0.198,7,0.331,12,2.62,13,0.033,14,1.196,17,2.184,25,0.657,38,0.411,39,0.036,49,0.012,50,0.017,51,0.012,76,0.984,118,1.127,121,1.929,129,0.984,134,2.12,166,2.518,172,2.178,297,2.342,306,1.077,308,1.955,309,5.057,316,1.893,317,2.83,319,1.643,320,1.643,321,1.456,322,1.643,323,1.643,324,1.643,325,1.643,326,2.457,327,2.178,328,1.643,339,2.943,340,2.943,341,2.943,342,2.943,343,2.12,344,2.943,345,2.943,346,2.943,403,1.456,404,2.272,405,2.272,406,2.272,407,2.272,408,3.398,409,2.272,410,2.272,411,2.272,412,2.272,413,2.272,414,2.272,415,2.272,416,2.272,417,1.643,418,2.272,419,1.456,420,1.893]],["title/controllers/UsersController.html",[0,1.497,421,2.023]],["body/controllers/UsersController.html",[0,1.071,2,1.071,3,0.228,4,0.197,5,0.197,7,0.329,8,1.131,10,1.477,12,2.286,13,0.033,14,1.044,16,1.613,17,2.009,21,1.64,22,1.383,23,1.64,25,0.702,27,2.933,28,1.882,29,2.446,30,0.405,35,1.882,38,0.228,39,0.035,40,1.177,41,1.3,43,1.914,49,0.012,50,0.017,51,0.012,115,1.757,118,0.888,128,2.169,130,0.979,145,1.882,147,1.604,148,2.887,155,1.448,158,1.882,327,1.448,336,2.637,356,1.448,397,3.106,421,2.169,422,1.882,423,1.882,424,2.818,425,2.818,426,2.818,427,1.882,428,2.259,429,2.259,430,2.259,431,1.882,432,2.259,433,2.259,434,4.217,435,1.882,436,2.259,437,2.259,438,1.882,439,2.259,440,2.259,441,2.259,442,2.259,443,1.634,444,1.882,445,2.259,446,2.259,447,2.259,448,4.503,449,2.259,450,2.259,451,2.259,452,2.259,453,2.259,454,2.259,455,2.259,456,2.259,457,2.259,458,2.259]],["title/modules/UsersModule.html",[52,1.253,66,1.644]],["body/modules/UsersModule.html",[2,2.006,3,0.311,4,0.269,5,0.269,13,0.033,22,0.948,25,0.818,30,0.552,38,0.311,39,0.048,49,0.016,50,0.022,51,0.016,52,1.916,54,1.462,55,1.462,56,1.336,57,1.775,58,1.462,59,2.779,60,2.779,66,3.099,67,2.435,68,1.775,69,1.775,71,1.977,75,2.231,76,1.336,115,2.655,121,1.462,170,2.57,172,1.977,419,2.712,421,3.096,443,2.231,459,2.57,460,2.57,461,2.57,462,3.236,463,3.085,464,3.085,465,2.57,466,3.085,467,3.085]],["title/injectables/UsersSeed.html",[83,0.41,462,1.816]],["body/injectables/UsersSeed.html",[3,0.276,4,0.239,5,0.239,7,0.398,8,1.3,10,1.648,12,1.296,13,0.033,14,0.842,16,0.914,21,0.996,22,0.84,23,0.996,25,0.659,30,0.49,38,0.276,39,0.043,40,1.424,41,1.573,49,0.014,50,0.02,51,0.014,73,1.753,74,3.16,83,0.505,84,0.914,113,1.296,114,2.278,115,2.345,118,0.539,129,1.685,130,1.184,134,1.424,147,2.566,176,2.278,178,3.24,179,3.24,180,3.24,182,2.278,183,2.278,189,2.278,280,2.278,283,2.278,284,2.278,285,2.278,286,2.278,287,2.278,288,2.278,289,2.278,339,1.977,340,1.977,341,1.977,342,1.977,343,1.424,344,1.977,345,1.977,346,1.977,423,3.771,443,1.977,462,2.238,468,2.278,469,2.734,470,3.889,471,2.734,472,2.734,473,2.734,474,2.734,475,2.734,476,2.734,477,2.734,478,2.734,479,2.734,480,2.734,481,2.734,482,2.734,483,2.734,484,2.734,485,2.734,486,2.734]],["title/injectables/UsersService.html",[83,0.41,115,1.367]],["body/injectables/UsersService.html",[3,0.205,4,0.177,5,0.177,7,0.295,8,1.042,10,1.949,11,2.254,13,0.033,14,1.095,16,1.624,17,1.675,21,1.768,22,1.491,23,1.768,25,0.736,30,0.363,38,0.205,39,0.032,42,1.3,43,1.927,49,0.01,50,0.016,51,0.01,76,0.879,83,0.405,84,0.678,113,0.962,115,1.35,118,0.958,121,1.8,123,2.452,125,3.112,128,2.434,129,0.879,130,1.645,147,1.478,148,2.732,155,1.3,292,3.55,297,1.167,298,1.69,302,1.3,314,3.511,336,2.22,343,1.056,397,2.91,417,1.467,424,2.597,425,2.597,426,2.597,427,2.597,431,2.597,434,4.045,435,2.597,438,2.597,444,1.69,465,1.69,487,1.69,488,2.028,489,2.028,490,3.117,491,2.028,492,2.028,493,2.028,494,3.117,495,2.028,496,2.028,497,2.028,498,2.028,499,2.028,500,2.028,501,2.028,502,2.028,503,2.028,504,2.028,505,3.117,506,2.028,507,2.028,508,2.028,509,2.028,510,3.117,511,2.028,512,2.028]],["title/coverage.html",[513,3.108]],["body/coverage.html",[0,2.037,1,1.598,5,0.218,6,2.077,13,0.033,31,1.299,33,1.598,36,1.182,39,0.082,49,0.013,50,0.019,51,0.013,58,1.725,83,0.748,85,2.077,93,1.435,94,1.435,103,1.598,111,2.077,115,1.08,118,0.492,121,1.182,123,1.435,143,1.598,144,2.077,150,1.435,153,1.182,163,1.435,166,1.299,167,1.598,173,2.077,290,2.077,302,1.598,307,2.333,321,2.333,329,2.077,330,2.077,336,1.299,337,2.077,338,2.755,356,1.598,357,2.077,358,2.632,362,2.077,382,2.077,384,2.077,394,2.077,397,1.435,398,2.077,403,2.333,419,1.598,421,1.598,422,2.077,462,1.435,468,2.077,487,2.077,513,1.803,514,2.493,515,2.493,516,2.493,517,6.287,518,5.417,519,2.493,520,3.639,521,2.077,522,4.297,523,5.553,524,4.297,525,2.077,526,2.077,527,3.639,528,2.493,529,2.493,530,2.493]],["title/dependencies.html",[55,1.799,531,2.641]],["body/dependencies.html",[13,0.033,30,0.663,49,0.019,50,0.025,51,0.019,55,1.756,73,2.374,74,2.374,76,1.605,100,1.929,102,2.679,297,2.131,369,3.826,370,3.086,389,3.086,400,3.086,401,3.086,532,5.291,533,3.704,534,3.704,535,3.704,536,3.704,537,3.704,538,3.704,539,3.704,540,3.704,541,3.704,542,3.704,543,3.704,544,3.704,545,3.704,546,3.704,547,3.704,548,3.704,549,3.704,550,3.704,551,3.704,552,3.704]],["title/miscellaneous/functions.html",[553,1.376,554,3.161]],["body/miscellaneous/functions.html",[7,0.67,13,0.028,49,0.024,50,0.028,51,0.024,58,2.964,525,3.838,526,3.838,553,2.4,554,3.838,555,4.608,556,4.608]],["title/index.html",[7,0.384,557,2.641,558,2.641]],["body/index.html",[4,0.276,13,0.032,49,0.016,50,0.022,51,0.016,513,2.284,559,3.159,560,3.159,561,4.3,562,3.159,563,3.159,564,3.159,565,3.159,566,3.159,567,3.159,568,3.159,569,4.889,570,3.159,571,3.159,572,3.159,573,3.159,574,5.796,575,3.159,576,3.159,577,3.159,578,5.664,579,3.159,580,3.159,581,4.3,582,3.159,583,3.159,584,3.159,585,3.159,586,4.3,587,4.3,588,3.159,589,3.159,590,3.159,591,4.3,592,4.3,593,3.159,594,3.159,595,3.159,596,3.159,597,3.159,598,2.631,599,3.159,600,3.159,601,3.159,602,3.159,603,3.159,604,3.159,605,3.159,606,3.159,607,3.159,608,3.159,609,3.159,610,3.159,611,3.159,612,3.159,613,3.159,614,3.159,615,3.159,616,3.159]],["title/modules.html",[54,2.038]],["body/modules.html",[13,0.027,49,0.023,50,0.027,51,0.023,53,2.822,54,2.087,64,2.534,65,2.534,66,2.293,598,4.954,617,5.946,618,5.946,619,5.946]],["title/overview.html",[620,3.581]],["body/overview.html",[2,1.372,13,0.032,31,2.431,36,2.683,49,0.015,50,0.021,51,0.015,52,1.148,53,3.81,54,1.372,55,1.372,56,1.253,57,1.665,58,1.372,59,1.665,60,1.665,61,2.411,62,2.411,63,2.411,64,3.488,65,3.257,66,3.056,67,2.329,68,1.665,69,1.665,84,0.968,89,2.411,91,2.411,92,2.411,93,2.686,94,2.686,115,2.452,153,2.213,161,2.411,162,2.411,163,2.686,205,2.411,211,2.411,222,2.411,244,2.411,306,1.372,459,2.411,460,2.411,461,2.411,462,2.686,620,2.411]],["title/miscellaneous/typealiases.html",[553,1.376,621,3.794]],["body/miscellaneous/typealiases.html",[7,0.674,13,0.028,49,0.024,50,0.028,51,0.024,118,0.914,299,3.97,307,2.971,403,2.971,417,3.97,553,2.414,622,4.634,623,3.861,624,3.861]],["title/miscellaneous/variables.html",[553,1.376,625,3.161]],["body/miscellaneous/variables.html",[7,0.51,13,0.033,49,0.018,50,0.024,51,0.018,103,2.956,106,2.922,118,0.692,167,2.956,193,3.303,307,2.248,318,2.922,319,3.335,320,3.335,321,2.956,322,3.335,323,3.335,324,3.335,325,3.335,326,3.959,327,3.509,328,3.335,403,2.248,419,2.956,420,2.922,521,2.922,553,1.827,623,2.922,624,2.922,625,2.922,626,3.508,627,5.153,628,3.508,629,3.508]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":517,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":523,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":527,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":519,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":518,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":520,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":524,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":528,"title":{},"body":{"coverage.html":{}}}],["0e68d8",{"_index":235,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["1",{"_index":194,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["1.0.0",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["1.png",{"_index":196,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["10",{"_index":244,"title":{},"body":{"injectables/CategoriesSeed.html":{},"overview.html":{}}}],["10.png",{"_index":245,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["11",{"_index":251,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["11.png",{"_index":252,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["12",{"_index":256,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["12.png",{"_index":257,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["12345678",{"_index":475,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["13",{"_index":261,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["13.png",{"_index":262,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["14",{"_index":265,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["15",{"_index":270,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["15.png",{"_index":266,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["16",{"_index":272,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["16.2.0",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["16.png",{"_index":273,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["17",{"_index":276,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["17.png",{"_index":277,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["18",{"_index":278,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["18.png",{"_index":279,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["2",{"_index":200,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["2.0.0",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["2.png",{"_index":201,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["20",{"_index":478,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["2c4a25",{"_index":231,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["3",{"_index":205,"title":{},"body":{"injectables/CategoriesSeed.html":{},"overview.html":{}}}],["3.0.2",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["3.png",{"_index":206,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["30",{"_index":479,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["4",{"_index":211,"title":{},"body":{"injectables/CategoriesSeed.html":{},"overview.html":{}}}],["4.0.0",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["4.png",{"_index":212,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["5",{"_index":217,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["5.12.3",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["5.png",{"_index":218,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["528443",{"_index":225,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["53a4df",{"_index":242,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["6",{"_index":222,"title":{},"body":{"injectables/CategoriesSeed.html":{},"overview.html":{}}}],["6.6.6",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["6.png",{"_index":223,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["60000s",{"_index":110,"title":{},"body":{"modules/AuthModule.html":{}}}],["606766011076582ae8314c2c",{"_index":484,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["62a06b",{"_index":220,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["633d35",{"_index":192,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["7",{"_index":227,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["7.1.5",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["7.2.4",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["7.6.15",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["7.png",{"_index":228,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["8",{"_index":232,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["8.png",{"_index":233,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["9",{"_index":237,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["9.png",{"_index":238,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["95c6dc",{"_index":250,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["_id",{"_index":506,"title":{},"body":{"injectables/UsersService.html":{}}}],["aa4245",{"_index":199,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["aarao@mail.com",{"_index":474,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["aarão",{"_index":472,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["access_token",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":510,"title":{},"body":{"injectables/UsersService.html":{}}}],["afro",{"_index":258,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["agerange",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{}}}],["aliases",{"_index":622,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":599,"title":{},"body":{"index.html":{}}}],["anos",{"_index":480,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["app",{"_index":576,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":567,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":53,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":31,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arte",{"_index":187,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["artes",{"_index":185,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["artesanato",{"_index":198,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["async",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["audiovisual",{"_index":214,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["auth.guard",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":358,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.service",{"_index":96,"title":{},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/auth.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":445,"title":{},"body":{"controllers/UsersController.html":{}}}],["auth/local",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["authguard",{"_index":359,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":361,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":383,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":64,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":609,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":36,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["autoexit",{"_index":179,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["avatar",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{}}}],["await",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["backers",{"_index":600,"title":{},"body":{"index.html":{}}}],["bb7165",{"_index":269,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["body",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["brasileira",{"_index":259,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["browse",{"_index":619,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":617,"title":{},"body":{"modules.html":{}}}],["building",{"_index":562,"title":{},"body":{"index.html":{}}}],["c",{"_index":216,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["c95676",{"_index":264,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["capoeira",{"_index":249,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["catch",{"_index":287,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["categories",{"_index":146,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{}}}],["categories.controller",{"_index":165,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.map((category",{"_index":281,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["categories.seed",{"_index":169,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categories.service",{"_index":154,"title":{},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{}}}],["categories/categories.module",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["categories/schemas/category.schema",{"_index":416,"title":{},"body":{"classes/User.html":{}}}],["categoriescontroller",{"_index":143,"title":{"controllers/CategoriesController.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"coverage.html":{}}}],["categoriesmodule",{"_index":65,"title":{"modules/CategoriesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules.html":{},"overview.html":{}}}],["categoriesseed",{"_index":163,"title":{"injectables/CategoriesSeed.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"coverage.html":{},"overview.html":{}}}],["categoriesservice",{"_index":153,"title":{"injectables/CategoriesService.html":{}},"body":{"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"coverage.html":{},"overview.html":{}}}],["category",{"_index":166,"title":{"classes/Category.html":{}},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/User.html":{},"coverage.html":{}}}],["category.dto",{"_index":156,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["category.dto.ts",{"_index":330,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:2",{"_index":331,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:3",{"_index":333,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:4",{"_index":334,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:5",{"_index":335,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.dto.ts:6",{"_index":332,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.name",{"_index":171,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["categorydocument",{"_index":299,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"miscellaneous/typealiases.html":{}}}],["categoryid",{"_index":341,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{}}}],["categorymodel",{"_index":294,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["categoryschema",{"_index":167,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cc748c",{"_index":260,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["chavemuitosecreta",{"_index":629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cinema",{"_index":213,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["circo",{"_index":208,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["class",{"_index":39,"title":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["classes",{"_index":306,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":89,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":91,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":90,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":92,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule",{"_index":161,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_categoriesmodule_providers",{"_index":162,"title":{},"body":{"modules/CategoriesModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":459,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":461,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":460,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["color",{"_index":191,"title":{},"body":{"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{}}}],["command",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{},"dependencies.html":{}}}],["command({command",{"_index":176,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["commandmodule",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["completo",{"_index":482,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["console.error(error",{"_index":289,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["console.log('sr",{"_index":508,"title":{},"body":{"injectables/UsersService.html":{}}}],["console.log(response",{"_index":286,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["const",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["constants",{"_index":104,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":113,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["constructor(@injectmodel(category.name",{"_index":300,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(@injectmodel(user.name",{"_index":499,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":385,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(categoriesservice",{"_index":174,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["constructor(categorymodel",{"_index":291,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["constructor(private",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{}}}],["constructor(usermodel",{"_index":488,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(usersservice",{"_index":114,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersSeed.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('categories",{"_index":157,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["controller('users",{"_index":446,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":513,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":147,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["create(@body",{"_index":158,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/UsersController.html":{}}}],["create(createcategorydto",{"_index":149,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{}}}],["create(createuserdto",{"_index":427,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["create:categories",{"_index":177,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["create:users",{"_index":470,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["createcategorydto",{"_index":150,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["createdcategory",{"_index":301,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["createdcategory.save()).tojson().id",{"_index":304,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["createduser",{"_index":501,"title":{},"body":{"injectables/UsersService.html":{}}}],["createduser.save()).tojson().id",{"_index":503,"title":{},"body":{"injectables/UsersService.html":{}}}],["createuserdto",{"_index":336,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["createuserdto):promise",{"_index":500,"title":{},"body":{"injectables/UsersService.html":{}}}],["cultura",{"_index":246,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["culturais",{"_index":275,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["cultural",{"_index":240,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["d",{"_index":204,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["d390a2",{"_index":254,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["dança",{"_index":202,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["declarations",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{}}}],["default",{"_index":627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["default.png",{"_index":483,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["defined",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":327,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":456,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":55,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["describe",{"_index":178,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["description",{"_index":568,"title":{},"body":{"index.html":{}}}],["design",{"_index":229,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["development",{"_index":577,"title":{},"body":{"index.html":{}}}],["df694a",{"_index":203,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["digital",{"_index":190,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["doc",{"_index":322,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["document",{"_index":317,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{}}}],["documentation",{"_index":514,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":155,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/login",{"_index":498,"title":{},"body":{"injectables/UsersService.html":{}}}],["dto/update",{"_index":444,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e",{"_index":189,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["e0bc68",{"_index":209,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["e2e",{"_index":588,"title":{},"body":{"index.html":{}}}],["education",{"_index":342,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{}}}],["efbc5e",{"_index":215,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["efficient",{"_index":563,"title":{},"body":{"index.html":{}}}],["email",{"_index":343,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["entre",{"_index":477,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["error",{"_index":288,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["escultura",{"_index":197,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["espaços",{"_index":274,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["expiresin",{"_index":109,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":360,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":367,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":375,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f",{"_index":221,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["false",{"_index":377,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findall",{"_index":148,"title":{},"body":{"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone",{"_index":424,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(@param('id",{"_index":451,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(id",{"_index":431,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["firstname",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{}}}],["folclore",{"_index":248,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["fotografia",{"_index":219,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["framework",{"_index":561,"title":{},"body":{"index.html":{}}}],["function",{"_index":321,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":554,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":255,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["gastronomia",{"_index":253,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["gender",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{}}}],["gestores",{"_index":267,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["get(':id",{"_index":450,"title":{},"body":{"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":557,"title":{"index.html":{}},"body":{}}],["grow",{"_index":595,"title":{},"body":{"index.html":{}}}],["hello",{"_index":87,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":606,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":613,"title":{},"body":{"index.html":{}}}],["icon",{"_index":195,"title":{},"body":{"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{}}}],["id",{"_index":434,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":515,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":376,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["import",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indígena",{"_index":263,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":83,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":84,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectmodel",{"_index":298,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/UsersService.html":{}}}],["installation",{"_index":573,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":575,"title":{},"body":{"index.html":{}}}],["join",{"_index":602,"title":{},"body":{"index.html":{}}}],["jwt",{"_index":370,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":98,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":356,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"injectables/JwtAuthGuard.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":103,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":107,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":374,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":101,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":105,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":93,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":610,"title":{},"body":{"index.html":{}}}],["l",{"_index":226,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["label",{"_index":184,"title":{},"body":{"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{}}}],["lastname",{"_index":346,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{}}}],["legend",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":616,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":592,"title":{},"body":{"index.html":{}}}],["literatura",{"_index":224,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["local",{"_index":389,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":97,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":33,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localstrategy",{"_index":94,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["login(@request",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["login(loginuserdto",{"_index":494,"title":{},"body":{"injectables/UsersService.html":{}}}],["login(req",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{}}}],["loginuserdto",{"_index":123,"title":{"classes/LoginUserDto.html":{}},"body":{"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["loginuserdto):promise",{"_index":507,"title":{},"body":{"injectables/UsersService.html":{}}}],["loginuserdto.email",{"_index":509,"title":{},"body":{"injectables/UsersService.html":{}}}],["loginuserdto.password",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{}}}],["m",{"_index":236,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["map((response",{"_index":285,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["masculino",{"_index":476,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["matching",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["melo",{"_index":473,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["metadata",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":553,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":591,"title":{},"body":{"index.html":{}}}],["moda",{"_index":230,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["mode",{"_index":581,"title":{},"body":{"index.html":{}}}],["model",{"_index":292,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/UsersService.html":{}}}],["module",{"_index":52,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":54,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":297,"title":{},"body":{"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["mongoose.schema.types.objectid",{"_index":418,"title":{},"body":{"classes/User.html":{}}}],["mongoosemodule",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":170,"title":{},"body":{"modules/CategoriesModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot('mongodb+srv://root:vmecpzmp2bwrco2h@gettingstarted",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":605,"title":{},"body":{"index.html":{}}}],["museologia",{"_index":241,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["myśliwiec",{"_index":611,"title":{},"body":{"index.html":{}}}],["música",{"_index":234,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["name",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["nd9xn.mongodb.net/test?retrywrites=true&w=majority",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["nest",{"_index":569,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":615,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":102,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":400,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":100,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":302,"title":{},"body":{"injectables/CategoriesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":560,"title":{},"body":{"index.html":{}}}],["npm",{"_index":574,"title":{},"body":{"index.html":{}}}],["null",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":314,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["open",{"_index":593,"title":{},"body":{"index.html":{}}}],["option",{"_index":183,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["optional",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":324,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":620,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":243,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["package",{"_index":531,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":442,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["partialtype",{"_index":399,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(createuserdto",{"_index":402,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["passport",{"_index":369,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":99,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":371,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":372,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{},"injectables/UsersSeed.html":{}}}],["patch",{"_index":441,"title":{},"body":{"controllers/UsersController.html":{}}}],["patch(':id",{"_index":453,"title":{},"body":{"controllers/UsersController.html":{}}}],["patrimônio",{"_index":239,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["payload",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":381,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":380,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["please",{"_index":603,"title":{},"body":{"index.html":{}}}],["popular",{"_index":247,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["positional",{"_index":182,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["post",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"controllers/UsersController.html":{}}}],["post('auth/login",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["prefix",{"_index":145,"title":{},"body":{"controllers/CategoriesController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":583,"title":{},"body":{"index.html":{}}}],["produtor",{"_index":271,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["progressive",{"_index":559,"title":{},"body":{"index.html":{}}}],["project",{"_index":594,"title":{},"body":{"index.html":{}}}],["promise",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CategoriesService.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{}}}],["promise.all(promisearray",{"_index":284,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["promisearray",{"_index":280,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["prop",{"_index":309,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{}}}],["prop({type",{"_index":406,"title":{},"body":{"classes/User.html":{}}}],["properties",{"_index":308,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{}}}],["providers",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["públicos",{"_index":268,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["read",{"_index":604,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{}}}],["ref",{"_index":408,"title":{},"body":{"classes/User.html":{}}}],["reflect",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["remove",{"_index":425,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["remove(@param('id",{"_index":457,"title":{},"body":{"controllers/UsersController.html":{}}}],["remove(id",{"_index":435,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["removes",{"_index":512,"title":{},"body":{"injectables/UsersService.html":{}}}],["repository",{"_index":572,"title":{},"body":{"index.html":{}}}],["req",{"_index":24,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["reset",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["result",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["ret",{"_index":323,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["ret.__v",{"_index":328,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["ret._id",{"_index":326,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["ret.id",{"_index":325,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{}}}],["rimraf",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":578,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":564,"title":{},"body":{"index.html":{}}}],["schema",{"_index":172,"title":{},"body":{"modules/CategoriesModule.html":{},"classes/Category.html":{},"classes/User.html":{},"modules/UsersModule.html":{}}}],["schemafactory",{"_index":316,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{}}}],["schemafactory.createforclass(category",{"_index":318,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["schemafactory.createforclass(user",{"_index":420,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["schemas/category.schema",{"_index":168,"title":{},"body":{"modules/CategoriesModule.html":{},"injectables/CategoriesService.html":{}}}],["schemas/user.schema",{"_index":465,"title":{},"body":{"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["secret",{"_index":106,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":378,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":565,"title":{},"body":{"index.html":{}}}],["set('tojson",{"_index":319,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":566,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":108,"title":{},"body":{"modules/AuthModule.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"modules/CategoriesModule.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":597,"title":{},"body":{"index.html":{}}}],["src/.../category.schema.ts",{"_index":623,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../cli.ts",{"_index":555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../constants.ts",{"_index":626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../user.schema.ts",{"_index":624,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:18",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":85,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":86,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.module.ts",{"_index":95,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:13",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:22",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:7",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":521,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":357,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":362,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":366,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":364,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":382,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":384,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":388,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":386,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/categories/categories.controller.ts",{"_index":144,"title":{},"body":{"controllers/CategoriesController.html":{},"coverage.html":{}}}],["src/categories/categories.controller.ts:10",{"_index":151,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.controller.ts:15",{"_index":152,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["src/categories/categories.module.ts",{"_index":164,"title":{},"body":{"modules/CategoriesModule.html":{}}}],["src/categories/categories.seed.ts",{"_index":173,"title":{},"body":{"injectables/CategoriesSeed.html":{},"coverage.html":{}}}],["src/categories/categories.seed.ts:14",{"_index":181,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["src/categories/categories.seed.ts:6",{"_index":175,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["src/categories/categories.service.ts",{"_index":290,"title":{},"body":{"injectables/CategoriesService.html":{},"coverage.html":{}}}],["src/categories/categories.service.ts:11",{"_index":295,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:16",{"_index":296,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/categories.service.ts:8",{"_index":293,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["src/categories/dto/create",{"_index":329,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/categories/schemas/category.schema.ts",{"_index":307,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/categories/schemas/category.schema.ts:12",{"_index":312,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/schemas/category.schema.ts:15",{"_index":313,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/schemas/category.schema.ts:18",{"_index":315,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/schemas/category.schema.ts:21",{"_index":311,"title":{},"body":{"classes/Category.html":{}}}],["src/categories/schemas/category.schema.ts:9",{"_index":310,"title":{},"body":{"classes/Category.html":{}}}],["src/cli.ts",{"_index":525,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/main.ts",{"_index":526,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/login",{"_index":394,"title":{},"body":{"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":398,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/schemas/user.schema.ts",{"_index":403,"title":{},"body":{"classes/User.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/users/schemas/user.schema.ts:10",{"_index":412,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:13",{"_index":414,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:16",{"_index":411,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:19",{"_index":415,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:22",{"_index":413,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:25",{"_index":404,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:28",{"_index":410,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:31",{"_index":405,"title":{},"body":{"classes/User.html":{}}}],["src/users/schemas/user.schema.ts:34",{"_index":409,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":422,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:12",{"_index":428,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:18",{"_index":430,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:24",{"_index":433,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:30",{"_index":440,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:36",{"_index":437,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":463,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.seed.ts",{"_index":468,"title":{},"body":{"injectables/UsersSeed.html":{},"coverage.html":{}}}],["src/users/users.seed.ts:14",{"_index":471,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["src/users/users.seed.ts:6",{"_index":469,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["src/users/users.service.ts",{"_index":487,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:10",{"_index":489,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:13",{"_index":491,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:18",{"_index":492,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:22",{"_index":493,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:26",{"_index":495,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:32",{"_index":497,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:36",{"_index":496,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":579,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":582,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":584,"title":{},"body":{"index.html":{}}}],["started",{"_index":558,"title":{"index.html":{}},"body":{}}],["starter",{"_index":571,"title":{},"body":{"index.html":{}}}],["statements",{"_index":516,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":607,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":368,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["sub",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":373,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["superior",{"_index":481,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["support",{"_index":598,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":618,"title":{},"body":{"modules.html":{}}}],["t",{"_index":210,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["table",{"_index":530,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":529,"title":{},"body":{"coverage.html":{}}}],["teatro",{"_index":207,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["test",{"_index":587,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":590,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":589,"title":{},"body":{"index.html":{}}}],["tests",{"_index":586,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":596,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(req.user",{"_index":48,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser",{"_index":392,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.categoriesservice.create(category",{"_index":282,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["this.categoriesservice.create(createcategorydto",{"_index":159,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categoriesservice.findall",{"_index":160,"title":{},"body":{"controllers/CategoriesController.html":{}}}],["this.categorymodel(createcategorydto",{"_index":303,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.categorymodel.find().exec",{"_index":305,"title":{},"body":{"injectables/CategoriesService.html":{}}}],["this.jwtservice.sign(payload",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usermodel(createuserdto",{"_index":502,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.find().exec",{"_index":504,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usermodel.findone",{"_index":505,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":447,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.create(user",{"_index":486,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["this.usersservice.findall",{"_index":449,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findone(id",{"_index":452,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.login(loginuserdto",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.remove(+id",{"_index":458,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.update(+id",{"_index":455,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":393,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["touch",{"_index":608,"title":{},"body":{"index.html":{}}}],["transform",{"_index":320,"title":{},"body":{"classes/Category.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":180,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["try",{"_index":283,"title":{},"body":{"injectables/CategoriesSeed.html":{},"injectables/UsersSeed.html":{}}}],["twitter",{"_index":614,"title":{},"body":{"index.html":{}}}],["type",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{},"controllers/CategoriesController.html":{},"injectables/CategoriesSeed.html":{},"injectables/CategoriesService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/LoginUserDto.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":621,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":401,"title":{},"body":{"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":570,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":390,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":407,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":585,"title":{},"body":{"index.html":{}}}],["update",{"_index":426,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["update(@param('id",{"_index":454,"title":{},"body":{"controllers/UsersController.html":{}}}],["update(id",{"_index":438,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updates",{"_index":511,"title":{},"body":{"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":397,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["urbana",{"_index":188,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["useguards",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauthguard",{"_index":448,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@delete(':id",{"_index":436,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get",{"_index":429,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@get(':id",{"_index":432,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauthguard)@patch(':id",{"_index":439,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(localauthguard",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["user",{"_index":121,"title":{"classes/User.html":{}},"body":{"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.dto",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:11",{"_index":348,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:12",{"_index":349,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:2",{"_index":395,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:3",{"_index":396,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["user.dto.ts:4",{"_index":352,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":354,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:6",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:7",{"_index":355,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":353,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":347,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.name",{"_index":467,"title":{},"body":{"modules/UsersModule.html":{}}}],["user.password",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.userid",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{}}}],["userdocument",{"_index":417,"title":{},"body":{"classes/User.html":{},"injectables/UsersService.html":{},"miscellaneous/typealiases.html":{}}}],["userid",{"_index":379,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["usermodel",{"_index":490,"title":{},"body":{"injectables/UsersService.html":{}}}],["username",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["usernamefield",{"_index":391,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["users",{"_index":423,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersSeed.html":{}}}],["users.controller",{"_index":464,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.map((user",{"_index":485,"title":{},"body":{"injectables/UsersSeed.html":{}}}],["users.seed",{"_index":466,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":443,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{}}}],["users/dto/login",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{}}}],["users/users.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["users/users.service",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{}}}],["userschema",{"_index":419,"title":{},"body":{"classes/User.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":421,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":66,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersseed",{"_index":462,"title":{"injectables/UsersSeed.html":{}},"body":{"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":115,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersSeed.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":363,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(email",{"_index":387,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":365,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(loginuserdto",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":193,"title":{},"body":{"injectables/CategoriesSeed.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":522,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":625,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["visuais",{"_index":186,"title":{},"body":{"injectables/CategoriesSeed.html":{}}}],["watch",{"_index":580,"title":{},"body":{"index.html":{}}}],["website",{"_index":612,"title":{},"body":{"index.html":{}}}],["world",{"_index":88,"title":{},"body":{"injectables/AppService.html":{}}}],["yargs",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["you'd",{"_index":601,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CategoriesModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Request, Get, Post, UseGuards, Body } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { LocalAuthGuard } from './auth/local-auth.guard'\n\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService, private authService: AuthService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user)\n  }\n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CategoriesModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CommandModule } from 'nestjs-command';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { CategoriesModule } from './categories/categories.module';\nimport { UsersModule } from './users/users.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot('mongodb+srv://root:VMEcPZMp2bWRcO2H@gettingstarted-nd9xn.mongodb.net/test?retryWrites=true&w=majority'),\n    CommandModule,\n    CategoriesModule,\n    UsersModule,\n    AuthModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtStrategy } from './jwt.strategy';\nimport { UsersModule } from '../users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '60000s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(loginUserDto: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { LoginUserDto } from '../users/dto/login-user.dto';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService\n  ) {}\n\n  async validateUser(loginUserDto: LoginUserDto): Promise {\n    const user = await this.usersService.login(loginUserDto);\n    if (user && user.password === loginUserDto.password) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: any) {\n    const payload = { username: user.username, sub: user.userId };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoriesController.html":{"url":"controllers/CategoriesController.html","title":"controller - CategoriesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoriesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body } from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\n\n@Controller('categories')\nexport class CategoriesController {\n  constructor(private readonly categoriesService: CategoriesService) {}\n\n  @Post()\n  async create(@Body() createCategoryDto: CreateCategoryDto) {\n    return (await this.categoriesService.create(createCategoryDto));\n  }\n\n  @Get()\n  findAll() {\n    return this.categoriesService.findAll();\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoriesModule.html":{"url":"modules/CategoriesModule.html","title":"module - CategoriesModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoriesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\n\nCategoriesSeed\n\nCategoriesSeed\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nCategoriesModule -->\n\nCategoriesSeed->CategoriesModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/categories/categories.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoriesSeed\n                        \n                        \n                            CategoriesService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoriesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CategoriesService } from './categories.service';\nimport { CategoriesController } from './categories.controller';\nimport { Category, CategorySchema } from './schemas/category.schema';\nimport { CategoriesSeed } from './categories.seed';\n\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: Category.name, schema: CategorySchema }])],\n  controllers: [CategoriesController],\n  providers: [CategoriesService, CategoriesSeed]\n})\nexport class CategoriesModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesSeed.html":{"url":"injectables/CategoriesSeed.html","title":"injectable - CategoriesSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.seed.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoriesService: CategoriesService)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.seed.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoriesService\n                                                  \n                                                        \n                                                                        CategoriesService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'create:categories', describe: 'create a categories', autoExit: true})\n                \n            \n\n            \n                \n                    Defined in src/categories/categories.seed.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Command, Positional, Option } from 'nestjs-command';\nimport { Injectable } from '@nestjs/common';\nimport { CategoriesService } from './categories.service';\n\n@Injectable()\nexport class CategoriesSeed {\n    constructor(private readonly categoriesService: CategoriesService) { }\n\n    @Command({\n        command: 'create:categories',\n        describe: 'create a categories',\n        autoExit: true \n    })\n    async create() {\n        const categories = [\n            {\n                label: \"Artes visuais, arte urbana e arte digital\",\n                color: \"#633D35\",\n                legend: \"a\",\n                value: 1,\n                icon: \"1.png\"\n            },\n            {\n                label: \"Escultura e Artesanato\",\n                color: \"#AA4245\",\n                legend: \"e\",\n                value: 2,\n                icon: \"2.png\"\n            },\n            {\n                label: \"Dança\",\n                color: \"#DF694A\",\n                legend: \"d\",\n                value: 3,\n                icon: \"3.png\"\n            },\n            {\n                label: \"Teatro e Circo\",\n                color: \"#E0BC68\",\n                legend: \"t\",\n                value: 4,\n                icon: \"4.png\"\n            },\n            {\n                label: \"Cinema e Audiovisual\",\n                color: \"#EFBC5E\",\n                legend: \"c\",\n                value: 5,\n                icon: \"5.png\"\n            },\n            {\n                label: \"Fotografia\",\n                color: \"#62A06B\",\n                legend: \"f\",\n                value: 6,\n                icon: \"6.png\"\n            },\n            {\n                label: \"Literatura\",\n                color: \"#528443\",\n                legend: \"l\",\n                value: 7,\n                icon: \"7.png\"\n            },\n            {\n                label: \"Design e Moda\",\n                color: \"#2C4A25\",\n                legend: \"d\",\n                value: 8,\n                icon: \"8.png\"\n            },\n            {\n                label: \"Música\",\n                color: \"#0E68D8\",\n                legend: \"m\",\n                value: 9,\n                icon: \"9.png\"\n            },\n            {\n                label: \"Patrimônio cultural e Museologia\",\n                color: \"#53A4DF\",\n                legend: \"p\",\n                value: 10,\n                icon: \"10.png\"\n            },\n            {\n                label: \"Cultura popular, Folclore e Capoeira\",\n                color: \"#95C6DC\",\n                legend: \"c\",\n                value: 11,\n                icon: \"11.png\"\n            },\n            {\n                label: \"Gastronomia\",\n                color: \"#D390A2\",\n                legend: \"g\",\n                value: 12,\n                icon: \"12.png\"\n            },\n            {\n                label: \"Cultura Afro-brasileira\",\n                color: \"#CC748C\",\n                legend: \"c\",\n                value: 13,\n                icon: \"13.png\"\n            },\n            {\n                label: \"Cultura Indígena\",\n                color: \"#C95676\",\n                legend: \"c\",\n                value: 14,\n                icon: \"15.png\"\n            },\n            {\n                label: \"Gestores Públicos\",\n                color: \"#BB7165\",\n                legend: \"g\",\n                value: 15,\n                icon: \"15.png\"\n            },\n            {\n                label: \"Produtor Cultural\",\n                color: \"#AA4245\",\n                legend: \"p\",\n                value: 16,\n                icon: \"16.png\"\n            },\n            {\n                label: \"Espaços culturais\",\n                color: \"#633D35\",\n                legend: \"e\",\n                value: 17,\n                icon: \"17.png\"\n            },\n            {\n                label: \"Espaços públicos\",\n                color: \"#DF694A\",\n                legend: \"e\",\n                value: 18,\n                icon: \"18.png\"\n            }\n        ];\n        const promiseArray = categories.map((category) => this.categoriesService.create(category));\n        try {\n            (await Promise.all(promiseArray))\n                .map((response) => console.log(response));\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoriesService.html":{"url":"injectables/CategoriesService.html","title":"injectable - CategoriesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CategoriesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/categories.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/categories/categories.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/categories/categories.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Category, CategoryDocument } from './schemas/category.schema';\nimport { CreateCategoryDto } from './dto/create-category.dto';\n\n@Injectable()\nexport class CategoriesService {\n  constructor(@InjectModel(Category.name) private categoryModel: Model) {}\n\n  async create(createCategoryDto: CreateCategoryDto): Promise {\n    const createdCategory = new this.categoryModel(createCategoryDto);\n    return (await createdCategory.save()).toJSON().id;\n  }\n\n  async findAll(): Promise {\n    return this.categoryModel.find().exec();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/schemas/category.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                legend\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            legend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/categories/schemas/category.schema.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CategoryDocument = Category & Document;\n\n@Schema()\nexport class Category {\n  @Prop()\n  color: string;\n\n  @Prop()\n  label: string;\n\n  @Prop()\n  legend: string;\n\n  @Prop()\n  value: number;\n\n  @Prop()\n  icon: string;\n}\n\nexport const CategorySchema = SchemaFactory.createForClass(Category)\n  .set('toJSON', {\n    transform: function (doc, ret, options) {\n      ret.id = ret._id;\n      delete ret._id;\n      delete ret.__v;\n    }\n  });\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/categories/dto/create-category.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                icon\n                            \n                            \n                                label\n                            \n                            \n                                legend\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            color\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            legend\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/categories/dto/create-category.dto.ts:5\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateCategoryDto {\n    color: string;\n    label: string;\n    legend: string;\n    value: number;\n    icon: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ageRange\n                            \n                            \n                                avatar\n                            \n                            \n                                categoryId\n                            \n                            \n                                education\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ageRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            education\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/create-user.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n    firstName: string;\n    lastName: string;\n    email: string;\n    password: string;\n    gender: string;\n    ageRange: string;\n    education: string;\n    avatar: string;\n    categoryId: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.email };\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(email: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({ usernameField: 'email' });\n  }\n\n  async validate(email: string, password: string): Promise {\n    const user = await this.authService.validateUser({ email, password });\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/login-user.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/login-user.dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/users/dto/login-user.dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    email: string;\n    password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/schemas/user.schema.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ageRange\n                            \n                            \n                                avatar\n                            \n                            \n                                categoryId\n                            \n                            \n                                education\n                            \n                            \n                                email\n                            \n                            \n                                firstName\n                            \n                            \n                                gender\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ageRange\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            avatar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            categoryId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Category\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop({type: undefined, ref: 'Category'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            education\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lastName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Prop()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/schemas/user.schema.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\nimport * as mongoose from 'mongoose';\nimport { Category } from '../../categories/schemas/category.schema';\nexport type UserDocument = User & Document;\n\n@Schema()\nexport class User {\n  @Prop()\n  firstName: string;\n\n  @Prop()\n  lastName: string;\n\n  @Prop()\n  email: string;\n\n  @Prop()\n  password: string;\n\n  @Prop()\n  gender: string;\n\n  @Prop()\n  ageRange: string;\n\n  @Prop()\n  education: string;\n\n  @Prop()\n  avatar: string;\n\n  @Prop({ type: mongoose.Schema.Types.ObjectId, ref: 'Category' })\n  categoryId: Category;\n}\n\nexport const UserSchema = SchemaFactory.createForClass(User)\n  .set('toJSON', {\n    transform: function (doc, ret, options) {\n      ret.id = ret._id;\n      delete ret._id;\n      delete ret.__v;\n    }\n  });\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { JwtAuthGuard } from '../auth/jwt-auth.guard'\n\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  async create(@Body() createUserDto: CreateUserDto) {\n    return await (this.usersService.create(createUserDto));\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get()\n  findAll() {\n    return this.usersService.findAll();\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get(':id')\n  findOne(@Param('id') id: string) {\n    return this.usersService.findOne(id);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Patch(':id')\n  update(@Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.usersService.update(+id, updateUserDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Delete(':id')\n  remove(@Param('id') id: string) {\n    return this.usersService.remove(+id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersSeed\n\nUsersSeed\n\nUsersModule -->\n\nUsersSeed->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersSeed\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\nimport { User, UserSchema } from './schemas/user.schema';\nimport { UsersSeed } from './users.seed';\n\n@Module({\n  imports: [MongooseModule.forFeature([{ name: User.name, schema: UserSchema }])],\n  controllers: [UsersController],\n  providers: [UsersService, UsersSeed],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersSeed.html":{"url":"injectables/UsersSeed.html","title":"injectable - UsersSeed","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersSeed\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.seed.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.seed.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Command({command: 'create:users', describe: 'create a users', autoExit: true})\n                \n            \n\n            \n                \n                    Defined in src/users/users.seed.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Command, Positional, Option } from 'nestjs-command';\nimport { Injectable } from '@nestjs/common';\nimport { UsersService } from './users.service';\n\n@Injectable()\nexport class UsersSeed {\n    constructor(private readonly usersService: UsersService) { }\n\n    @Command({\n        command: 'create:users',\n        describe: 'create a users',\n        autoExit: true \n    })\n    async create() {\n        const users = [\n            {\n                firstName: \"Aarão\",\n                lastName: \"Melo\",\n                email: \"aarao@mail.com\",\n                password: \"12345678\",\n                gender: \"Masculino\",\n                ageRange: \"Entre 20 e 30 anos\",\n                education: \"Superior completo\",\n                avatar: \"default.png\",\n                categoryId: \"606766011076582ae8314c2c\"\n            }\n        ];\n        const promiseArray = users.map((user) => this.usersService.create(user));\n        try {\n            (await Promise.all(promiseArray))\n                .map((response) => console.log(response));\n        } catch (error) {\n            console.error(error)\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                remove\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            remove\n                        \n                        \n                    \n                \n            \n            \n                \nremove(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            update\n                        \n                        \n                    \n                \n            \n            \n                \nupdate(id: number, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Model } from 'mongoose';\nimport { Injectable } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { LoginUserDto } from './dto/login-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User, UserDocument } from './schemas/user.schema';\n\n@Injectable()\nexport class UsersService {\n  constructor(@InjectModel(User.name) private userModel: Model) {}\n\n  async create(createUserDto: CreateUserDto):Promise {\n      const createdUser = new this.userModel(createUserDto);\n      return (await createdUser.save()).toJSON().id;\n  }\n\n  findAll(): Promise {\n    return this.userModel.find().exec();\n  }\n\n  async findOne(id: string): Promise {\n    return await this.userModel.findOne({ _id: id });\n  }\n\n  async login(loginUserDto: LoginUserDto):Promise {\n    console.log('sr');\n    \n    return await this.userModel.findOne({ email: loginUserDto.email });\n  }\n\n  update(id: number, updateUserDto: UpdateUserDto) {\n    return `This action updates a #${id} user`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.controller.ts\n            \n            controller\n            CategoriesController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.seed.ts\n            \n            injectable\n            CategoriesSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/categories/categories.service.ts\n            \n            injectable\n            CategoriesService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/categories/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/schemas/category.schema.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/categories/schemas/category.schema.ts\n            \n            variable\n            CategorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cli.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/dto/login-user.dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            class\n            User\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/users/schemas/user.schema.ts\n            \n            variable\n            UserSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.seed.ts\n            \n            injectable\n            UsersSeed\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.6.15\n        \n            @nestjs/core : ^7.6.15\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/mongoose : ^7.2.4\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.6.15\n        \n            mongoose : ^5.12.3\n        \n            nestjs-command : ^2.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.6\n        \n            yargs : ^16.2.0\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../cli.ts)\n                        \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/cli.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoriesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CategoriesModule\n\n\n\ncluster_CategoriesModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCategoriesModule\n\nCategoriesModule\n\nAppModule -->\n\nCategoriesModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nCategoriesSeed\n\nCategoriesSeed\n\nCategoriesModule -->\n\nCategoriesSeed->CategoriesModule\n\n\n\n\n\nCategoriesService\n\nCategoriesService\n\nCategoriesModule -->\n\nCategoriesService->CategoriesModule\n\n\n\n\n\nUsersSeed\n\nUsersSeed\n\nUsersModule -->\n\nUsersSeed->UsersModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoryDocument   (src/.../category.schema.ts)\n                        \n                        \n                            UserDocument   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/categories/schemas/category.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CategoryDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    src/users/schemas/user.schema.ts\n    \n    \n        \n            \n                \n                    \n                    UserDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategorySchema   (src/.../category.schema.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            UserSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/categories/schemas/category.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CategorySchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(Category)\n  .set('toJSON', {\n    transform: function (doc, ret, options) {\n      ret.id = ret._id;\n      delete ret._id;\n      delete ret.__v;\n    }\n  })\n                        \n                    \n\n\n            \n        \n\n    src/auth/constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            jwtConstants\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    secret: 'chavemuitosecreta',\n  }\n                        \n                    \n\n\n            \n        \n\n    src/users/schemas/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            UserSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : SchemaFactory.createForClass(User)\n  .set('toJSON', {\n    transform: function (doc, ret, options) {\n      ret.id = ret._id;\n      delete ret._id;\n      delete ret.__v;\n    }\n  })\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
